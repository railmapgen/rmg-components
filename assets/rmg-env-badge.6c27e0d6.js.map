{"version":3,"file":"rmg-env-badge.6c27e0d6.js","sources":["../../src/rmg-env-badge/rmg-env-badge.tsx"],"sourcesContent":["import {\n    Badge,\n    Popover,\n    PopoverArrow,\n    PopoverBody,\n    PopoverCloseButton,\n    PopoverContent,\n    PopoverHeader,\n    PopoverTrigger,\n} from '@chakra-ui/react';\nimport React, { ReactNode, useState } from 'react';\nimport { RmgEnv } from '@railmapgen/rmg-runtime';\n\nconst getBadgeColour = (env: RmgEnv) => {\n    switch (env) {\n        case RmgEnv.DEV:\n            return 'red';\n        case RmgEnv.UAT:\n            return 'orange';\n        case RmgEnv.PRD:\n            return 'green';\n    }\n};\n\nexport interface RmgEnvBadgeProps {\n    environment: RmgEnv;\n    version: string;\n    popoverHeader?: ReactNode;\n    popoverBody?: ReactNode;\n}\n\nexport function RmgEnvBadge(props: RmgEnvBadgeProps) {\n    const { environment, version, popoverHeader, popoverBody } = props;\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (\n        <Popover isOpen={isOpen} onOpen={() => popoverHeader && setIsOpen(true)} onClose={() => setIsOpen(false)}>\n            <PopoverTrigger>\n                <Badge\n                    ml={1}\n                    colorScheme={getBadgeColour(environment)}\n                    title={`${environment}: ${version}`}\n                    cursor={popoverHeader ? 'pointer' : 'help'}\n                >\n                    {environment === RmgEnv.PRD ? version : environment}\n                </Badge>\n            </PopoverTrigger>\n            <PopoverContent>\n                <PopoverArrow />\n                <PopoverCloseButton />\n                <PopoverHeader>{popoverHeader}</PopoverHeader>\n                <PopoverBody>{popoverBody}</PopoverBody>\n            </PopoverContent>\n        </Popover>\n    );\n}\n"],"names":["getBadgeColour","__name","env","RmgEnv","RmgEnvBadge","props","environment","version","popoverHeader","popoverBody","isOpen","setIsOpen","useState","_jsxs","Popover","_jsx","PopoverTrigger","Badge","PopoverContent","PopoverArrow","PopoverCloseButton","PopoverHeader"],"mappings":"qTAaA,MAAAA,EAAAC,EAAAC,GAAA,CACI,OAAAA,EAAA,CAAW,KAAAC,EAAA,IAEH,MAAA,MAAO,KAAAA,EAAA,IAEP,MAAA,SAAO,KAAAA,EAAA,IAEP,MAAA,OAAO,CAEnB,EATA,kBAkBO,SAAAC,EAAAC,EAAA,CACH,KAAA,CAAM,YAAAC,EAAEA,QAAAA,EAAaC,cAAAA,EAASC,YAAAA,CAAeC,EAAAA,EAE7C,CAAAC,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAA,EAAA,EAEA,OAAAC,EAAAC,EAAA,CACY,OAAAJ,EAAC,OAAA,IAAAF,GAAAG,EAAA,EAAA,EAA6D,QAAA,IAAAA,EAAA,EAAA,EAAiC,SAAA,CAAAI,EAAAC,EAAA,CACpF,SAAAD,EAAAE,EAAA,CACL,GAAA,EACE,YAAAjB,EAAAM,CAAA,EACmC,MAAA,GAAAA,MAAAC,IACbA,OAAAA,EAAAA,UAAAA,OACU,SAAAD,IAAAH,EAAA,IAAAI,EAAAD,CAEIA,CAAAA,CAAW,CAAA,EAAAO,EAAAK,EAAA,CAG5C,SAAA,CAAAH,EAAAI,EAAA,EAAA,EAAAJ,EAAAK,EAAA,CAAA,CAAA,EAAAL,EAAAM,EAAA,CAGG,SAAAb,CAAEA,CAAAA,EAAAA,EAAAA,EAAAA,CACJ,SAAAC,CAAEA,CAAAA,CAAAA,CAA0B,CAAA,CAAA,CAC3B,CAAA,CAG7B,CAzBOR,EAAAG,EAAA"}