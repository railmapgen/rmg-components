{"version":3,"file":"rmg-multi-select.3034d98e.js","sources":["../../src/rmg-multi-select/rmg-multi-select.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n    Badge,\n    Box,\n    Checkbox,\n    List,\n    ListItem,\n    Popover,\n    PopoverAnchor,\n    PopoverBody,\n    PopoverContent,\n    useOutsideClick,\n    useStyleConfig,\n} from '@chakra-ui/react';\n\ntype Selection = {\n    label: string;\n    value: string;\n    disabled?: boolean;\n};\n\nexport interface RmgMultiSelectProps {\n    displayValue: string;\n    selections: Selection[];\n    defaultValue: string[];\n    onChange?: (value: string[]) => void;\n}\n\nexport const RmgMultiSelect = (props: RmgMultiSelectProps) => {\n    const { displayValue, selections, defaultValue, onChange } = props;\n\n    const styles = useStyleConfig('RmgMultiSelect');\n\n    const [value, setValue] = useState(defaultValue);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const dropdownRef = useRef<HTMLDivElement>(null);\n\n    useOutsideClick({ ref: wrapperRef, handler: () => setIsDropdownOpen(false) });\n\n    useEffect(() => {\n        defaultValue.toString() && setValue(defaultValue);\n    }, [defaultValue.toString()]);\n\n    const selectedCount = value.filter(val => selections.some(selection => selection.value === val)).length;\n\n    const handleCheck = (selection: Selection, checked: boolean) => {\n        if (checked) {\n            if (!value.includes(selection.value)) {\n                const nextValue = [...value, selection.value];\n                setValue(nextValue);\n                onChange?.(nextValue);\n            }\n        } else {\n            const nextValue = value.filter(val => val !== selection.value);\n            setValue(nextValue);\n            onChange?.(nextValue);\n        }\n    };\n\n    return (\n        <Box ref={wrapperRef} sx={styles}>\n            <Popover placement=\"bottom-start\" isOpen={isDropdownOpen} autoFocus={false}>\n                <PopoverAnchor>\n                    <div\n                        className=\"rmg-multi-select__wrapper\"\n                        role=\"combobox\"\n                        aria-expanded={isDropdownOpen}\n                        aria-controls={dropdownRef.current?.id}\n                        aria-label={displayValue}\n                        onClick={() => setIsDropdownOpen(prevState => !prevState)}\n                    >\n                        <div className={`rmg-multi-select__field ${isDropdownOpen ? 'active' : ''}`}>\n                            <span>{displayValue}</span>\n                            <Badge colorScheme={selectedCount ? 'blue' : undefined} role=\"status\">\n                                {selectedCount}/{selections.length}\n                            </Badge>\n                        </div>\n                        <div className=\"rmg-multi-select__icon-wrapper\">\n                            <svg viewBox=\"0 0 24 24\">\n                                <path fill=\"currentColor\" d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n                            </svg>\n                        </div>\n                    </div>\n                </PopoverAnchor>\n\n                <PopoverContent ref={dropdownRef}>\n                    <PopoverBody>\n                        <List>\n                            {selections.map(selection => (\n                                <ListItem key={selection.value.toString()}>\n                                    <Checkbox\n                                        isChecked={value.includes(selection.value)}\n                                        isDisabled={selection.disabled}\n                                        onChange={({ target: { checked } }) => handleCheck(selection, checked)}\n                                    >\n                                        {selection.label}\n                                    </Checkbox>\n                                </ListItem>\n                            ))}\n                        </List>\n                    </PopoverBody>\n                </PopoverContent>\n            </Popover>\n        </Box>\n    );\n};\n"],"names":["RmgMultiSelect","__name","props","displayValue","selections","defaultValue","onChange","styles","useStyleConfig","value","setValue","useState","isDropdownOpen","setIsDropdownOpen","wrapperRef","useRef","dropdownRef","useOutsideClick","useEffect","selectedCount","val","selection","handleCheck","checked","nextValue","_jsx","Box","PopoverAnchor","_jsxs","id","undefined","PopoverContent","List","ListItem","Checkbox","disabled","label"],"mappings":"4YA4BO,MAAAA,EAAAC,EAAAC,GAAA,OACH,KAAA,CAAM,aAAAC,EAAEA,WAAAA,EAAcC,aAAAA,EAAYC,SAAAA,CAAcC,EAAAA,EAEhDC,EAAAC,EAAA,gBAAA,EAEA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAAN,CAAA,EACA,CAAAO,EAAAC,CAAA,EAAAF,EAAA,QAAA,SAAA,EAAA,EACAG,EAAAC,iBAAA,IAAA,EACAC,EAAAD,iBAAA,IAAA,EAEAE,EAAAA,CAAgB,IAAAH,EAAOA,QAAAA,IAAAA,EAAAA,EAAAA,CAAkD,CAAA,EAEzEI,EAAAA,QAAAA,UAAAA,IAAAA,CACIb,EAAAA,SAAAA,GAAAA,EAAAA,CAAAA,CAAgD,EAAA,CAAAA,EAAA,SAAA,CAAA,CAAA,EAGpD,MAAAc,EAAAV,EAAA,OAAAW,GAAAhB,EAAA,KAAAiB,GAAAA,EAAA,QAAAD,CAAA,CAAA,EAAA,OAEAE,EAAArB,EAAA,CAAAoB,EAAAE,IAAA,CACI,GAAAA,GACI,GAAA,CAAAd,EAAA,SAAAY,EAAA,KAAA,EAAA,CACI,MAAAG,EAAA,CAAA,GAAAf,EAAAY,EAAA,KAAA,EACAX,EAAAA,CAAAA,EACAJ,GAAAA,MAAAA,EAAAA,EAAoB,MACxB,CAEA,MAAAkB,EAAAf,EAAA,OAAAW,GAAAA,IAAAC,EAAA,KAAA,EACAX,EAAAA,CAAAA,EACAJ,GAAAA,MAAAA,EAAAA,EAAoB,CACxB,EAXJ,eAcA,OAAAmB,EAAAC,EAAA,CACQ,IAAAZ,EAAMA,GAAAA,EAAgBP,SAAAA,EAAAA,EAAAA,CACd,UAAA,eAAW,OAAAK,EAAuBA,UAAAA,GAA2B,SAAA,CAAAa,EAAAE,EAAA,CACnD,SAAAC,EAAA,MAAA,CACV,UAAA,4BACc,KAAA,WACL,gBAAAhB,EACUA,iBAAAA,EAAAA,EAAAA,UAAAA,YAAAA,EAAAA,GACqBiB,aAAAA,EACxB1B,QAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAAA,EAC4C,SAAA,CAAAyB,EAAA,MAAA,CAExD,UAAA,2BAAAhB,EAAA,SAAA,KAAuE,SAAA,CAAAa,EAAA,OAAA,CACnE,SAAAtB,CAAOA,CAAAA,EAAAA,EAAAA,EAAAA,CACD,YAAAgB,EAAA,OAAA,OAAuCW,KAAAA,SAAgB,SAAA,CAAAX,EAAA,IAAAf,EAAA,MAAA,CACvB,CAAA,CAAA,CAC9B,CAAA,EAAAqB,EAAA,MAAA,CAEZ,UAAA,iCAAe,SAAAA,EAAA,MAAA,CACX,QAAA,YAAa,SAAAA,EAAA,OAAA,CACT,KAAA,eAAW,EAAA,8CAAiB,CAAA,CAA8C,CAAA,CAAG,CAAA,CAAA,CAE/E,CAAA,CAAA,CAAA,EAAAA,EAAAM,EAAA,CAIC,IAAAf,EAAMA,SAAAA,EAAAA,EAAAA,CACL,SAAAS,EAAAO,EAAA,CACH,SAAA5B,EAAA,IAAAiB,GAAAI,EAAAQ,EAAA,CAEY,SAAAR,EAAAS,EAAA,CACI,UAAAzB,EAAA,SAAAY,EAAA,KAAA,EACoC,WAAAA,EAAA,SACnBc,SAAAA,CAAAA,CACX,OAAA,CAAU,QAAAZ,CAAEA,CAAQ,IAAAD,EAAAD,EAAAE,CAAA,EAAsC,SAAAF,EAAA,KAE1De,CAAAA,CAAK,EAAAf,EAAA,MAAA,SAAA,CAAA,CAAA,CAG3B,CAAA,CAAC,CAAA,CACC,CAAA,CAAA,CAEE,CAAA,CAAA,CAAA,CAIjC,EA9EO"}