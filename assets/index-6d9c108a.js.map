{"version":3,"file":"index-6d9c108a.js","sources":["../../node_modules/@chakra-ui/react-context/dist/index.mjs"],"sourcesContent":["// src/index.ts\nimport {\n  createContext as createReactContext,\n  useContext as useReactContext\n} from \"react\";\nfunction getErrorMessage(hook, provider) {\n  return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`;\n}\nfunction createContext(options = {}) {\n  const {\n    name,\n    strict = true,\n    hookName = \"useContext\",\n    providerName = \"Provider\",\n    errorMessage\n  } = options;\n  const Context = createReactContext(void 0);\n  Context.displayName = name;\n  function useContext() {\n    var _a;\n    const context = useReactContext(Context);\n    if (!context && strict) {\n      const error = new Error(\n        errorMessage != null ? errorMessage : getErrorMessage(hookName, providerName)\n      );\n      error.name = \"ContextError\";\n      (_a = Error.captureStackTrace) == null ? void 0 : _a.call(Error, error, useContext);\n      throw error;\n    }\n    return context;\n  }\n  return [Context.Provider, useContext, Context];\n}\nexport {\n  createContext\n};\n"],"names":["getErrorMessage","hook","provider","createContext","options","name","strict","hookName","providerName","errorMessage","Context","createReactContext","useContext","_a","context","useReactContext","error"],"mappings":"wCAKA,SAASA,EAAgBC,EAAMC,EAAU,CACvC,MAAO,GAAGD,uEAA0EC,GACtF,CACA,SAASC,EAAcC,EAAU,GAAI,CACnC,KAAM,CACJ,KAAAC,EACA,OAAAC,EAAS,GACT,SAAAC,EAAW,aACX,aAAAC,EAAe,WACf,aAAAC,CACD,EAAGL,EACEM,EAAUC,EAAAA,cAAmB,MAAM,EACzCD,EAAQ,YAAcL,EACtB,SAASO,GAAa,CACpB,IAAIC,EACJ,MAAMC,EAAUC,aAAgBL,CAAO,EACvC,GAAI,CAACI,GAAWR,EAAQ,CACtB,MAAMU,EAAQ,IAAI,MAChBP,GAAsCT,EAAgBO,EAAUC,CAAY,CACpF,EACM,MAAAQ,EAAM,KAAO,gBACZH,EAAK,MAAM,oBAAsB,MAAgBA,EAAG,KAAK,MAAOG,EAAOJ,CAAU,EAC5EI,CACP,CACD,OAAOF,CACR,CACD,MAAO,CAACJ,EAAQ,SAAUE,EAAYF,CAAO,CAC/C"}