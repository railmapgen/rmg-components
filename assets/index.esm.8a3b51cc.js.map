{"version":3,"file":"index.esm.8a3b51cc.js","sources":["../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/node/id.mjs","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../node_modules/framer-motion/dist/es/render/utils/types.mjs","../../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/utils.mjs","../../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../../node_modules/framer-motion/dist/es/utils/process.mjs","../../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/frameloop/data.mjs","../../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/index.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/hey-listen/dist/hey-listen.es.js","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/utils/mix.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../../node_modules/framer-motion/dist/es/animation/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../../node_modules/framer-motion/dist/es/animation/animate.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../node_modules/@chakra-ui/dom-utils/dist/index.esm.js"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.9.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut, createBackIn };\n","import { createBackIn } from './back.mjs';\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nexport { anticipate };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t)).value;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: Array.isArray(ease) ? cubicBezierAsString(ease) : ease,\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { spring } from '../legacy-popmotion/spring.mjs';\nimport { animateStyle } from './index.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this is a spring animation, pre-generate keyframes and\n     * record duration.\n     *\n     * TODO: When introducing support for values beyond opacity it\n     * might be better to use `animate.sample()`\n     */\n    if (options.type === \"spring\") {\n        const springAnimation = spring(options);\n        let state = { done: false, value: keyframes[0] };\n        const springKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = springAnimation.next(t);\n            springKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = springKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta), sampleAnimation.sample(currentTime), sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            typeof options.ease !== \"function\" &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.9.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.9.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","// src/dom.ts\nfunction isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\nfunction isHTMLElement(el) {\n  if (!isElement(el))\n    return false;\n  const win = el.ownerDocument.defaultView ?? window;\n  return el instanceof win.HTMLElement;\n}\nfunction getOwnerWindow(node) {\n  var _a;\n  return ((_a = getOwnerDocument(node)) == null ? void 0 : _a.defaultView) ?? window;\n}\nfunction getOwnerDocument(node) {\n  return isElement(node) ? node.ownerDocument : document;\n}\nfunction getEventWindow(event) {\n  return event.view ?? window;\n}\nfunction isBrowser() {\n  return Boolean(globalThis == null ? void 0 : globalThis.document);\n}\nfunction getActiveElement(node) {\n  return getOwnerDocument(node).activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent)\n    return false;\n  return parent === child || parent.contains(child);\n}\n\n// src/tabbable.ts\nvar hasDisplayNone = (element) => window.getComputedStyle(element).display === \"none\";\nvar hasTabIndex = (element) => element.hasAttribute(\"tabindex\");\nvar hasNegativeTabIndex = (element) => hasTabIndex(element) && element.tabIndex === -1;\nfunction isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nfunction isInputElement(element) {\n  return isHTMLElement(element) && element.localName === \"input\" && \"select\" in element;\n}\nfunction isActiveElement(element) {\n  const doc = isHTMLElement(element) ? getOwnerDocument(element) : document;\n  return doc.activeElement === element;\n}\nfunction hasFocusWithin(element) {\n  if (!document.activeElement)\n    return false;\n  return element.contains(document.activeElement);\n}\nfunction isHidden(element) {\n  if (element.parentElement && isHidden(element.parentElement))\n    return true;\n  return element.hidden;\n}\nfunction isContentEditable(element) {\n  const value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nfunction isFocusable(element) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false;\n  }\n  const { localName } = element;\n  const focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0)\n    return true;\n  const others = {\n    a: () => element.hasAttribute(\"href\"),\n    audio: () => element.hasAttribute(\"controls\"),\n    video: () => element.hasAttribute(\"controls\")\n  };\n  if (localName in others) {\n    return others[localName]();\n  }\n  if (isContentEditable(element))\n    return true;\n  return hasTabIndex(element);\n}\nfunction isTabbable(element) {\n  if (!element)\n    return false;\n  return isHTMLElement(element) && isFocusable(element) && !hasNegativeTabIndex(element);\n}\n\n// src/index.ts\nvar focusableElList = [\n  \"input:not(:disabled):not([disabled])\",\n  \"select:not(:disabled):not([disabled])\",\n  \"textarea:not(:disabled):not([disabled])\",\n  \"embed\",\n  \"iframe\",\n  \"object\",\n  \"a[href]\",\n  \"area[href]\",\n  \"button:not(:disabled):not([disabled])\",\n  \"[tabindex]\",\n  \"audio[controls]\",\n  \"video[controls]\",\n  \"*[tabindex]:not([aria-disabled])\",\n  \"*[contenteditable]\"\n];\nvar focusableElSelector = focusableElList.join();\nvar isVisible = (el) => el.offsetWidth > 0 && el.offsetHeight > 0;\nfunction getAllFocusable(container) {\n  const focusableEls = Array.from(container.querySelectorAll(focusableElSelector));\n  focusableEls.unshift(container);\n  return focusableEls.filter((el) => isFocusable(el) && isVisible(el));\n}\nfunction getFirstFocusable(container) {\n  const allFocusable = getAllFocusable(container);\n  return allFocusable.length ? allFocusable[0] : null;\n}\nfunction getAllTabbable(container, fallbackToFocusable) {\n  const allFocusable = Array.from(container.querySelectorAll(focusableElSelector));\n  const allTabbable = allFocusable.filter(isTabbable);\n  if (isTabbable(container)) {\n    allTabbable.unshift(container);\n  }\n  if (!allTabbable.length && fallbackToFocusable) {\n    return allFocusable;\n  }\n  return allTabbable;\n}\nfunction getFirstTabbableIn(container, fallbackToFocusable) {\n  const [first] = getAllTabbable(container, fallbackToFocusable);\n  return first || null;\n}\nfunction getLastTabbableIn(container, fallbackToFocusable) {\n  const allTabbable = getAllTabbable(container, fallbackToFocusable);\n  return allTabbable[allTabbable.length - 1] || null;\n}\nfunction getNextTabbable(container, fallbackToFocusable) {\n  const allFocusable = getAllFocusable(container);\n  const index = allFocusable.indexOf(document.activeElement);\n  const slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nfunction getPreviousTabbable(container, fallbackToFocusable) {\n  const allFocusable = getAllFocusable(container).reverse();\n  const index = allFocusable.indexOf(document.activeElement);\n  const slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nexport {\n  contains,\n  getActiveElement,\n  getAllFocusable,\n  getAllTabbable,\n  getEventWindow,\n  getFirstFocusable,\n  getFirstTabbableIn,\n  getLastTabbableIn,\n  getNextTabbable,\n  getOwnerDocument,\n  getOwnerWindow,\n  getPreviousTabbable,\n  hasDisplayNone,\n  hasFocusWithin,\n  hasNegativeTabIndex,\n  hasTabIndex,\n  isActiveElement,\n  isBrowser,\n  isContentEditable,\n  isDisabled,\n  isElement,\n  isFocusable,\n  isHTMLElement,\n  isHidden,\n  isInputElement,\n  isTabbable\n};\n"],"names":["MotionConfigContext","createContext","p","MotionContext","useVisualElementContext","useContext","__name","PresenceContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","useVisualElement","Component","visualState","props","createVisualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","visualElement","isRefObject","ref","useMotionRef","externalRef","useCallback","instance","isVariantLabel","v","isAnimationControls","variantProps","isControllingVariants","name","isVariantNode","getCurrentTreeVariants","context","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","createDefinition","propNames","featureDefinitions","loadFeatures","features","key","useConstant","init","globalProjectionState","id","useProjectionId","LayoutGroupContext","VisualElementHandler","React__default","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","MotionComponent","configAndProps","layoutId","useLayoutId","isStatic","projectionId","undefined","lazyStrictMode","strict","initialLayoutGroupConfig","_jsxs","_jsx","ForwardRefComponent","forwardRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","componentCache","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","addScaleCorrector","correctors","transformPropOrder","transformProps","isForcedMotionValue","layout","isMotionValue","value","translateAlias","sortTransformProps","a","b","buildTransform","transform","transformKeys","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformTemplate","transformString","isCSSVariable","getValueAsType","type","clamp","min","max","number","alpha","scale","sanitize","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","buildHTMLStyles","state","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","target","source","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","animationProps","tapProps","panProps","inViewProps","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","keys","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","pathOffset","latest","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","renderHTML","element","projection","camelCaseAttributes","renderSVG","renderState","_styleProp","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","targetKey","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","config","make","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","index","svgMotionConfig","htmlMotionConfig","createDomMotionConfig","AnimationType","addDomEvent","eventName","handler","useDomEvent","useFocusGesture","whileFocus","animationState","onFocus","onBlur","isMouseEvent","event","isTouchEvent","filterPrimaryPointer","eventHandler","defaultPagePoint","pointFromTouch","e","pointType","point","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","supportsPointerEvents","supportsTouchEvents","supportsMouseEvents","mouseEventNames","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","useHoverGesture","onHoverStart","onHoverEnd","whileHover","isNodeOrChild","child","useUnmountEffect","combineFunctions","pipe","transformers","useTapGesture","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","onPointerUp","onPointerCancel","defaultEnvironment","env","warned","warnOnce","condition","message","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","root","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","useViewport","whileInView","onViewportEnter","onViewportLeave","viewport","shouldObserve","useMissingIntersectionObserver","useIntersectionObserver","thresholdNames","rootMargin","amount","once","intersectionCallback","isIntersecting","fallback","makeRenderlessComponent","hook","gestureAnimations","usePresence","isPresent","onExitComplete","register","useId","useIsPresent","shallowCompare","next","prev","prevLength","i","isNumericalString","isZeroValueString","frameData","defaultTimestep","getCurrentTime","onNextFrame","createRenderStep","runNextFrame","toRun","toRunNextFrame","numToRun","isProcessing","flushNextFrame","toKeepAlive","step","keepAlive","immediate","addToCurrentFrame","buffer","maxElapsed","useDefaultElapsed","stepsOrder","steps","acc","sync","process","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","timestamp","addUniqueItem","arr","item","removeItem","SubscriptionManager","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","MotionValue","render","delta","subscription","passiveEffect","current","animation","resolve","motionValue","isColorString","testProp","splitColor","aName","bName","cName","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","r","g","hex","hsla","hue","saturation","lightness","color","colorToken","numberToken","test","_a","_b","analyseComplexValue","numColors","numNumbers","colors","numbers","parse","createTransformer","tokenised","numValues","output","convertNumbersToZero","getAnimatableNone","parsed","complex","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","getDefaultValueType","defaultValueType","testValueType","auto","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","getCurrent","getVelocity","resolveVariant","setMotionValue","setTarget","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","getOrigin","transitionOrigin","isWillChangeMotionValue","appearStoreId","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","optimizedAppearDataId","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","mix","from","to","progress","hueToRgb","q","t","hslaToRgba","mixLinearColor","fromExpo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","detectMixerFactory","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","x","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","circIn","circOut","circInOut","createBackIn","power","backIn","backOut","backInOut","createAnticipate","backEasing","anticipate","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","defaultEasing","defaultOffset","_value","convertOffsetToTimes","duration","o","keyframes","keyframeValues","times","easingFunctions","absoluteTimes","createInterpolator","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","d","f","initialGuess","approximateRoot","stiffness","rootIterations","result","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","derived","velocitySampleDuration","spring","restSpeed","restDelta","damping","isResolvedFromDuration","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","dampedAngularFreq","freqForT","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","_t","decay","timeConstant","modifyTarget","amplitude","ideal","types","loopElapsed","elapsed","delay","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","update","passTimestamp","driver","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","repeatCount","computedDuration","isComplete","interpolateFromNumber","animator","repeat","complete","play","cubicBezierAsString","animateStyle","valueName","sampleDelta","createAcceleratedAnimation","springAnimation","springKeyframes","currentTime","sampleAnimation","timeout","start","checkElapsed","createInstantAnimation","setValue","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","checkBoundary","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","featureTests","results","supports","acceleratedValues","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","animateVisualElement","animations","variant","animateVariant","resolvedDefinition","animateTarget","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","transitionOverride","willChange","animationTypeState","shouldBlockAnimation","appearId","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","createTypeState","safeToRemove","distance","distance2D","xDelta","yDelta","PanSession","handlers","transformPagePoint","getPanInfo","isPanStarted","isDistancePastThreshold","onStart","onMove","transformPoint","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","top","left","bottom","right","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","convertBoxToBoundingBox","y","transformBoxPoints","topLeft","bottomRight","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","node","transformBox","snapToDefault","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","measureViewportBox","measurePageBox","rootProjectionNode","viewportBox","scroll","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","isDragging","onDragEnd","_point","shouldDrag","axisValue","dragConstraints","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","useDrag","groupDragControls","dragControls","usePanGesture","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","panSession","cssVariableRegex","parseCSSVariable","match","token","getVariableValue","depth","resolveCSSVariables","positionalKeys","isPositionalKey","hasPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","targetBbox","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","scrollY","convertedTarget","unitConversion","parseDomVariant","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","featureNames","numFeatures","propEventHandlers","VisualElement","initialMotionValues","_props","_c","remove","valueIsTransform","removeOnChange","removeOnRenderRequest","other","renderedProps","isStrict","ProjectionNodeConstructor","isEnabled","layoutScroll","canMutate","startAtParent","numVariantProps","closestVariantNode","valueFromInitial","args","DOMVisualElement","transformValues","isMounted","getComputedStyle","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","varToken","correctBoxShadow","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","add","didUpdate","addEventListener","setOptions","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","postRender","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","MeasureLayout","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","_d","_e","buildProjectionTransform","latestTransform","xTranslate","yTranslate","rotate","rotateX","rotateY","elementScaleX","elementScaleY","compareByDepth","FlatTree","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","propagateDirtyNodes","resolveTargetDelta","calcProjection","subscriptionManager","isLayoutDirty","cancelDelay","resizeUnblockUpdate","finishAnimation","hasRelativeTargetChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetRotation","shouldNotifyListeners","clearMeasurements","mountNodeEarly","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","relativeParent","isProjectionDirty","isTransformDirty","isShared","canSkip","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","stack","needsReset","hasRotate","resetValues","styles","emptyStyles","valuesToRender","correct","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","searchNode","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","featureBundle","motion","isElement","el","isHTMLElement","win","getOwnerWindow","getOwnerDocument","getActiveElement","hasTabIndex","hasNegativeTabIndex","isDisabled","isHidden","isContentEditable","isFocusable","localName","others","isTabbable","focusableElList","focusableElSelector","isVisible","getAllFocusable","container","focusableEls"],"mappings":"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"}