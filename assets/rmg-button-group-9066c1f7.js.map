{"version":3,"file":"rmg-button-group-9066c1f7.js","sources":["../../node_modules/@chakra-ui/button/dist/chunk-DA7QIPTJ.mjs","../../src/rmg-button-group/rmg-button-group.tsx"],"sourcesContent":["'use client'\nimport {\n  ButtonGroupProvider\n} from \"./chunk-T6ZDZOLO.mjs\";\n\n// src/button-group.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar attachedStyles = {\n  horizontal: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 }\n  },\n  vertical: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderBottomRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderTopRadius: 0 }\n  }\n};\nvar gapStyles = {\n  horizontal: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing }\n  }),\n  vertical: (spacing) => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginTop: spacing }\n  })\n};\nvar ButtonGroup = forwardRef(\n  function ButtonGroup2(props, ref) {\n    const {\n      size,\n      colorScheme,\n      variant,\n      className,\n      spacing = \"0.5rem\",\n      isAttached,\n      isDisabled,\n      orientation = \"horizontal\",\n      ...rest\n    } = props;\n    const _className = cx(\"chakra-button__group\", className);\n    const context = useMemo(\n      () => ({ size, colorScheme, variant, isDisabled }),\n      [size, colorScheme, variant, isDisabled]\n    );\n    let groupStyles = {\n      display: \"inline-flex\",\n      ...isAttached ? attachedStyles[orientation] : gapStyles[orientation](spacing)\n    };\n    const isVertical = orientation === \"vertical\";\n    return /* @__PURE__ */ jsx(ButtonGroupProvider, { value: context, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        role: \"group\",\n        __css: groupStyles,\n        className: _className,\n        \"data-attached\": isAttached ? \"\" : void 0,\n        \"data-orientation\": orientation,\n        flexDir: isVertical ? \"column\" : void 0,\n        ...rest\n      }\n    ) });\n  }\n);\nButtonGroup.displayName = \"ButtonGroup\";\n\nexport {\n  ButtonGroup\n};\n//# sourceMappingURL=chunk-DA7QIPTJ.mjs.map","import React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup } from '@chakra-ui/react';\n\nexport type RmgButtonGroupSelection<T> = {\n    label: string;\n    value: T;\n    disabled?: boolean;\n};\n\ntype RmgButtonGroupSingleSelectProps<T> = {\n    selections: RmgButtonGroupSelection<T>[];\n    defaultValue: T;\n    onChange?: (value: T) => void;\n    multiSelect?: false;\n};\n\ntype RmgButtonGroupMultiSelectProps<T> = {\n    selections: RmgButtonGroupSelection<T>[];\n    defaultValue: T[];\n    onChange?: (value: T[]) => void;\n    multiSelect: true;\n};\n\ntype RmgButtonGroupProps<T> = RmgButtonGroupSingleSelectProps<T> | RmgButtonGroupMultiSelectProps<T>;\n\nexport function RmgButtonGroup<T extends string | boolean>(props: RmgButtonGroupProps<T>) {\n    const { selections, defaultValue, onChange, multiSelect } = props;\n\n    const [value, setValue] = useState(defaultValue);\n\n    useEffect(() => {\n        defaultValue.toString() && setValue(defaultValue);\n    }, [defaultValue.toString()]);\n\n    const handleToggle = (val: T) => {\n        if (multiSelect) {\n            const prevValue = value as T[];\n            const nextValue = prevValue.includes(val) ? prevValue.filter(v => v !== val) : [...prevValue, val];\n\n            setValue(nextValue);\n            (onChange as RmgButtonGroupMultiSelectProps<T>['onChange'])?.(nextValue);\n        } else {\n            setValue(val);\n            (onChange as RmgButtonGroupSingleSelectProps<T>['onChange'])?.(val);\n        }\n    };\n\n    return (\n        <ButtonGroup size=\"xs\" isAttached colorScheme=\"primary\" variant=\"outline\">\n            {selections.map((selection, i) => {\n                const isSelected =\n                    (typeof value === 'object' && value.includes(selection.value)) || value === selection.value;\n\n                // TODO: fix overlapped/missing border\n                const mr = i !== selections.length - 1 && !isSelected ? '-px' : undefined;\n\n                return (\n                    <Button\n                        key={selection.value.toString()}\n                        role=\"checkbox\"\n                        aria-checked={isSelected}\n                        variant={isSelected ? 'solid' : 'outline'}\n                        mr={mr}\n                        flex={1}\n                        isDisabled={selection.disabled}\n                        onClick={() => handleToggle(selection.value)}\n                    >\n                        {selection.label}\n                    </Button>\n                );\n            })}\n        </ButtonGroup>\n    );\n}\n"],"names":["attachedStyles","gapStyles","spacing","ButtonGroup","forwardRef","props","ref","size","colorScheme","variant","className","isAttached","isDisabled","orientation","rest","_className","cx","context","useMemo","groupStyles","isVertical","jsx","ButtonGroupProvider","chakra","RmgButtonGroup","selections","defaultValue","onChange","multiSelect","value","setValue","useState","useEffect","handleToggle","val","prevValue","nextValue","v","selection","i","isSelected","mr","Button"],"mappings":"6MAaA,IAAIA,EAAiB,CACnB,WAAY,CACV,uCAAwC,CAAE,gBAAiB,CAAG,EAC9D,6CAA8C,CAAE,aAAc,CAAG,EACjE,uCAAwC,CAAE,kBAAmB,CAAG,CACjE,EACD,SAAU,CACR,uCAAwC,CAAE,mBAAoB,CAAG,EACjE,6CAA8C,CAAE,aAAc,CAAG,EACjE,uCAAwC,CAAE,gBAAiB,CAAG,CAC/D,CACH,EACIC,EAAY,CACd,WAAaC,IAAa,CACxB,kCAAmC,CAAE,YAAaA,CAAS,CAC/D,GACE,SAAWA,IAAa,CACtB,kCAAmC,CAAE,UAAWA,CAAS,CAC7D,EACA,EACIC,EAAcC,EAChB,SAAsBC,EAAOC,EAAK,CAChC,KAAM,CACJ,KAAAC,EACA,YAAAC,EACA,QAAAC,EACA,UAAAC,EACA,QAAAR,EAAU,SACV,WAAAS,EACA,WAAAC,EACA,YAAAC,EAAc,aACd,GAAGC,CACJ,EAAGT,EACEU,EAAaC,EAAG,uBAAwBN,CAAS,EACjDO,EAAUC,EAAO,QACrB,KAAO,CAAE,KAAAX,EAAM,YAAAC,EAAa,QAAAC,EAAS,WAAAG,CAAU,GAC/C,CAACL,EAAMC,EAAaC,EAASG,CAAU,CAC7C,EACI,IAAIO,EAAc,CAChB,QAAS,cACT,GAAGR,EAAaX,EAAea,CAAW,EAAIZ,EAAUY,CAAW,EAAEX,CAAO,CAClF,EACI,MAAMkB,EAAaP,IAAgB,WACnC,OAAuBQ,EAAAA,IAAIC,EAAqB,CAAE,MAAOL,EAAS,SAA0BI,EAAG,IAC7FE,EAAO,IACP,CACE,IAAAjB,EACA,KAAM,QACN,MAAOa,EACP,UAAWJ,EACX,gBAAiBJ,EAAa,GAAK,OACnC,mBAAoBE,EACpB,QAASO,EAAa,SAAW,OACjC,GAAGN,CACJ,CACF,CAAA,CAAE,CACJ,CACH,EACAX,EAAY,YAAc,cC9CnB,SAAAqB,EAAAnB,EAAA,CACH,KAAA,CAAA,WAAAoB,EAAA,aAAAC,EAAA,SAAAC,EAAA,YAAAC,CAAA,EAAAvB,EAEA,CAAAwB,EAAAC,CAAA,EAAAC,EAAA,SAAAL,CAAA,EAEAM,EAAAA,UAAA,IAAA,CACIN,EAAA,SAAA,GAAAI,EAAAJ,CAAA,CAAgD,EAAA,CAAAA,EAAA,SAAA,CAAA,CAAA,EAGpD,MAAAO,EAAAC,GAAA,CACI,GAAAN,EAAA,CACI,MAAAO,EAAAN,EACAO,EAAAD,EAAA,SAAAD,CAAA,EAAAC,EAAA,OAAAE,GAAAA,IAAAH,CAAA,EAAA,CAAA,GAAAC,EAAAD,CAAA,EAEAJ,EAAAM,CAAA,EACAT,GAAA,MAAAA,EAAAS,EAAuE,MAEvEN,EAAAI,CAAA,EACAP,GAAA,MAAAA,EAAAO,EACJ,EAGJ,OAAAb,EAAAA,IAAAlB,EAAA,CAAA,KAAA,KAAA,WAAA,GAAA,YAAA,UAAA,QAAA,UAAA,SAAAsB,EAAA,IAAA,CAAAa,EAAAC,IAAA,CAGY,MAAAC,EAAA,OAAAX,GAAA,UAAAA,EAAA,SAAAS,EAAA,KAAA,GAAAT,IAAAS,EAAA,MAIAG,EAAAF,IAAAd,EAAA,OAAA,GAAA,CAAAe,EAAA,MAAA,OAEA,OAAAnB,EAAA,IACIqB,EAAC,CAAA,KAAA,WAEQ,eAAAF,EACS,QAAAA,EAAA,QAAA,UACkB,GAAAC,EAChC,KAAA,EACM,WAAAH,EAAA,SACgB,QAAA,IAAAL,EAAAK,EAAA,KAAA,EACqB,SAAAA,EAAA,KAEhC,EAAAA,EAAA,MAAA,SAAA,CATmB,CAUlC,CAAA,CAAA,CAAA,CAKpB","x_google_ignoreList":[0]}