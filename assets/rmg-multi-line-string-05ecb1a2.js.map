{"version":3,"file":"rmg-multi-line-string-05ecb1a2.js","sources":["../../node_modules/@chakra-ui/layout/dist/chunk-EBIU6VW7.mjs","../../src/rmg-multi-line-string/rmg-multi-line-string.tsx"],"sourcesContent":["'use client'\n\n// src/kbd.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Kbd = forwardRef(function Kbd2(props, ref) {\n  const styles = useStyleConfig(\"Kbd\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.kbd,\n    {\n      ref,\n      className: cx(\"chakra-kbd\", className),\n      ...rest,\n      __css: {\n        fontFamily: \"mono\",\n        ...styles\n      }\n    }\n  );\n});\nKbd.displayName = \"Kbd\";\n\nexport {\n  Kbd\n};\n//# sourceMappingURL=chunk-EBIU6VW7.mjs.map","import { Kbd } from '@chakra-ui/react';\nimport React from 'react';\n\nexport interface RmgMultiLineStringProps {\n    text: string;\n    delimiter?: string;\n}\n\nexport const RmgMultiLineString = (props: RmgMultiLineStringProps) => {\n    const { text, delimiter } = props;\n    return <span>{text.split(delimiter || '\\\\').map((t, i) => (i ? [<Kbd key={i}>‚èé</Kbd>, t] : t))}</span>;\n};\n"],"names":["Kbd","forwardRef","props","ref","styles","useStyleConfig","className","rest","omitThemingProps","jsx","chakra","cx","RmgMultiLineString","text","delimiter","i"],"mappings":"2HAWA,IAAIA,EAAMC,EAAW,SAAcC,EAAOC,EAAK,CAC7C,MAAMC,EAASC,EAAe,MAAOH,CAAK,EACpC,CAAE,UAAAI,EAAW,GAAGC,CAAM,EAAGC,EAAiBN,CAAK,EACrD,OAAuBO,EAAG,IACxBC,EAAO,IACP,CACE,IAAAP,EACA,UAAWQ,EAAG,aAAcL,CAAS,EACrC,GAAGC,EACH,MAAO,CACL,WAAY,OACZ,GAAGH,CACJ,CACF,CACL,CACA,CAAC,EACDJ,EAAI,YAAc,MCnBX,MAAAY,EAAAV,GAAA,CACH,KAAA,CAAA,KAAAW,EAAA,UAAAC,CAAA,EAAAZ,EACA,OAAAO,MAAA,OAAA,CAAA,SAAAI,EAAA,MAAAC,GAAA,IAAA,EAAA,IAAA,CAAA,EAAAC,IAAAA,EAAA,CAAAN,EAAA,IAAAT,EAAA,CAAA,SAAA,GAAA,EAAAe,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CACJ","x_google_ignoreList":[0]}