{"version":3,"file":"motion-90ac95bf.js","sources":["../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/node/id.mjs","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/frameloop/data.mjs","../../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/index.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/utils/mix.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/animation/animate.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/debug/record.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.0.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         *\n         * isControlled should be set to true if sample is being run within\n         * a loop. This indicates that we're not arbitrarily sampling\n         * the animation but running it one step after another. Therefore\n         * we don't need to run a low-res version here. This is a stop-gap\n         * until a rewrite can sample for time.\n         */\n        sample: (t, isControlled = false) => {\n            elapsed = initialElapsed;\n            if (isControlled) {\n                update(t);\n                return state;\n            }\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            elapsed: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t, true);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.0.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.0.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n"],"names":["MotionConfigContext","createContext","p","MotionContext","useVisualElementContext","useContext","__name","PresenceContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","useVisualElement","Component","visualState","props","createVisualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","visualElement","useInsertionEffect","isRefObject","ref","useMotionRef","externalRef","useCallback","instance","isVariantLabel","v","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","name","isVariantNode","getCurrentTreeVariants","context","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","featureProps","featureDefinitions","key","loadFeatures","features","useConstant","init","globalProjectionState","id","useProjectionId","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","isStatic","projectionId","initialLayoutGroupConfig","isStrict","React.createElement","ForwardRefComponent","forwardRef","layoutId","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","componentCache","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","addScaleCorrector","correctors","transformPropOrder","transformProps","isForcedMotionValue","layout","isMotionValue","value","translateAlias","numTransforms","buildTransform","transform","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformTemplate","transformString","i","transformName","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","clamp","min","max","number","alpha","scale","sanitize","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","buildHTMLStyles","state","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","target","source","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","keys","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","pathOffset","latest","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","renderHTML","element","projection","camelCaseAttributes","renderSVG","renderState","_styleProp","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","targetKey","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","config","make","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","index","svgMotionConfig","htmlMotionConfig","createDomMotionConfig","addDomEvent","eventName","handler","isPrimaryPointer","event","extractEventInfo","pointType","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","handleEvent","info","HoverGesture","FocusGesture","isFocusVisible","isNodeOrChild","child","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PressGesture","startEvent","startInfo","removePointerUpListener","endEvent","endInfo","onTap","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","handleKeydown","keydownEvent","handleKeyup","keyupEvent","removeKeydownListener","handleBlur","removeBlurListener","onTapStart","whileTap","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","initIntersectionObserver","root","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","frameData","defaultTimestep","getCurrentTime","onNextFrame","createRenderStep","runNextFrame","toRun","toRunNextFrame","numToRun","isProcessing","flushNextFrame","toKeepAlive","step","keepAlive","immediate","addToCurrentFrame","buffer","maxElapsed","useDefaultElapsed","stepsOrder","steps","acc","sync","process","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","timestamp","addUniqueItem","arr","item","removeItem","SubscriptionManager","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","MotionValue","render","delta","subscription","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","current","startAnimation","resolve","motionValue","isColorString","testProp","splitColor","aName","bName","cName","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","r","g","hex","hsla","hue","saturation","lightness","color","colorToken","numberToken","test","_a","_b","analyseComplexValue","numColors","numNumbers","colors","numbers","parse","createTransformer","tokenised","numValues","output","convertNumbersToZero","getAnimatableNone","parsed","complex","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","getDefaultValueType","defaultValueType","testValueType","auto","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","getCurrent","getVelocity","resolveVariant","setMotionValue","setTarget","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","getOrigin","transitionOrigin","isWillChangeMotionValue","optimizedAppearDataId","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","mix","from","to","progress","hueToRgb","q","t","hslaToRgba","mixLinearColor","fromExpo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","detectMixerFactory","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","interpolator","progressInRange","fillOffset","remaining","offsetProgress","defaultOffset","convertOffsetToTimes","duration","o","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","x","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","circIn","circOut","circInOut","backOut","backIn","backInOut","anticipate","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","defaultEasing","keyframes","keyframeValues","times","easingFunctions","absoluteTimes","createInterpolator","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","e","f","initialGuess","approximateRoot","stiffness","rootIterations","result","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","derived","velocitySampleDuration","spring","restDelta","restSpeed","damping","isResolvedFromDuration","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","dampedAngularFreq","freqForT","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","_t","decay","power","timeConstant","modifyTarget","amplitude","ideal","types","loopElapsed","elapsed","delay","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","update","passTimestamp","animateValue","driver","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","repeatCount","computedDuration","isComplete","interpolateFromNumber","animator","needsInterpolation","animation","repeat","complete","play","isControlled","sampleResolution","sampleElapsed","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","d","mapEasingToNativeEasing","animateStyle","valueName","featureTests","results","supports","getFinalKeyframe","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","currentTime","timeout","start","checkElapsed","createInstantAnimation","setValue","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","checkBoundary","underDampedSpring","criticallyDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","acceleratedAnimation","animateVisualElement","animations","variant","animateVariant","resolvedDefinition","animateTarget","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","transitionOverride","willChange","animationTypeState","shouldBlockAnimation","appearId","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","createTypeState","AnimationFeature","prevAnimate","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","distance","distance2D","xDelta","yDelta","PanSession","handlers","transformPagePoint","getPanInfo","isPanStarted","isDistancePastThreshold","point","onStart","onMove","transformPoint","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","top","left","bottom","right","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","convertBoxToBoundingBox","y","transformBoxPoints","topLeft","bottomRight","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","transformBox","snapToDefault","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","measureViewportBox","measurePageBox","rootProjectionNode","viewportBox","scroll","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","isDragging","onDragEnd","_point","shouldDrag","axisValue","dragConstraints","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","DragGesture","dragControls","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","usePresence","useId","useIsPresent","pixelsToPercent","pixels","correctBorderRadius","cssVariableRegex","parseCSSVariable","match","fallback","getVariableValue","depth","resolveCSSVariables","varToken","correctBoxShadow","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","React__default","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","layoutDependency","stack","promoteContext","safeToRemove","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","rotate","rotateX","rotateY","elementScaleX","elementScaleY","compareByDepth","FlatTree","record","data","transformAxes","animationTarget","projectionFrameData","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","args","subscriptionManager","isLayoutDirty","cancelDelay","resizeUnblockUpdate","finishAnimation","hasRelativeTargetChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetRotation","shouldNotifyListeners","clearMeasurements","mountNodeEarly","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","relativeParent","isShared","canSkip","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","needsReset","hasRotate","resetValues","styles","emptyStyles","valuesToRender","correct","applyTo","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","searchNode","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","targetBbox","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","scrollY","convertedTarget","unitConversion","parseDomVariant","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","initialMotionValues","_props","_prevProps","remove","valueIsTransform","removeOnChange","removeOnRenderRequest","other","renderedProps","ProjectionNodeConstructor","isEnabled","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","layoutScroll","layoutRoot","feature","canMutate","listener","startAtParent","closestVariantNode","valueFromInitial","DOMVisualElement","transformValues","isMounted","getComputedStyle","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","motion"],"mappings":"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"}