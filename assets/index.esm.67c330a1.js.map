{"version":3,"file":"index.esm.67c330a1.js","sources":["../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/node/id.mjs","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/style-value-types/dist/es/utils.mjs","../../node_modules/style-value-types/dist/es/numbers/index.mjs","../../node_modules/style-value-types/dist/es/numbers/units.mjs","../../node_modules/style-value-types/dist/es/color/utils.mjs","../../node_modules/style-value-types/dist/es/color/hsla.mjs","../../node_modules/style-value-types/dist/es/color/rgba.mjs","../../node_modules/style-value-types/dist/es/color/hex.mjs","../../node_modules/style-value-types/dist/es/color/index.mjs","../../node_modules/style-value-types/dist/es/complex/index.mjs","../../node_modules/style-value-types/dist/es/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../node_modules/framer-motion/dist/es/render/utils/types.mjs","../../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/utils.mjs","../../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../../node_modules/framer-motion/dist/es/utils/process.mjs","../../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/hey-listen/dist/hey-listen.es.js","../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../../node_modules/framer-motion/node_modules/framesync/dist/es/on-next-frame.mjs","../../node_modules/framer-motion/node_modules/framesync/dist/es/create-render-step.mjs","../../node_modules/framer-motion/node_modules/framesync/dist/es/index.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/utils/mix.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../../node_modules/framer-motion/dist/es/animation/animate.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../node_modules/@chakra-ui/dom-utils/dist/index.esm.js"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { clamp } from '../utils.mjs';\n\nconst number = {\n    test: (v) => typeof v === 'number',\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { number } from 'style-value-types';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { px, degrees, scale, alpha, progressPercentage } from 'style-value-types';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut, createBackIn };\n","import { createBackIn } from './back.mjs';\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nexport { anticipate };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n","import sync, { cancelSync } from 'framesync';\n\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { rgba, hsla, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\n/**\n * TODO: Combine with function within complex when style-value-types moved inside Framer Motion\n */\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numColors = 0;\n    for (let i = 0; i < numValues; i++) {\n        // Parsed complex values return with colors first, so if we've seen any number\n        // we're already past that part of the array and don't need to continue running typeof\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            numColors++;\n        }\n    }\n    return { parsed, numNumbers, numColors };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    /**\n     * Convert values to an array if they've been given as from/to options\n     */\n    const values = Array.isArray(to) ? to : [from, to];\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const times = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ from = 0.0, to = 1.0, restSpeed = 2, restDelta = 0.01, ...options }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                // TODO Resolve these calculations with the above\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = { decay, keyframes, spring };\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options\n        .duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[Array.isArray(to) ? \"keyframes\" : type];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator({ ...options, from, to });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { animate } from './index.mjs';\nimport { getFrameData } from 'framesync';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(from)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { inertia } from '../legacy-popmotion/inertia.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, yoyo, flip, loop, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate && valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete && valueTransition.onComplete();\n                },\n            });\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delayBy = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        let cancelDelay;\n        if (delayBy) {\n            cancelDelay = delay(start, secondsToMilliseconds(delayBy));\n        }\n        else {\n            start();\n        }\n        return () => {\n            cancelDelay && cancelDelay();\n            controls && controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import sync, { getFrameData } from 'framesync';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.6.19\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = getFrameData();\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.6.19\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.6.19 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import sync, { cancelSync } from 'framesync';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { percent, px } from 'style-value-types';\nimport { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { percent } from 'style-value-types';\nimport { mix } from '../../utils/mix.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","// src/dom.ts\nfunction isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\nfunction isHTMLElement(el) {\n  if (!isElement(el))\n    return false;\n  const win = el.ownerDocument.defaultView ?? window;\n  return el instanceof win.HTMLElement;\n}\nfunction getOwnerWindow(node) {\n  var _a;\n  return ((_a = getOwnerDocument(node)) == null ? void 0 : _a.defaultView) ?? window;\n}\nfunction getOwnerDocument(node) {\n  return isElement(node) ? node.ownerDocument : document;\n}\nfunction getEventWindow(event) {\n  return event.view ?? window;\n}\nfunction isBrowser() {\n  return Boolean(globalThis == null ? void 0 : globalThis.document);\n}\nfunction getActiveElement(node) {\n  return getOwnerDocument(node).activeElement;\n}\nfunction contains(parent, child) {\n  if (!parent)\n    return false;\n  return parent === child || parent.contains(child);\n}\n\n// src/tabbable.ts\nvar hasDisplayNone = (element) => window.getComputedStyle(element).display === \"none\";\nvar hasTabIndex = (element) => element.hasAttribute(\"tabindex\");\nvar hasNegativeTabIndex = (element) => hasTabIndex(element) && element.tabIndex === -1;\nfunction isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nfunction isInputElement(element) {\n  return isHTMLElement(element) && element.localName === \"input\" && \"select\" in element;\n}\nfunction isActiveElement(element) {\n  const doc = isHTMLElement(element) ? getOwnerDocument(element) : document;\n  return doc.activeElement === element;\n}\nfunction hasFocusWithin(element) {\n  if (!document.activeElement)\n    return false;\n  return element.contains(document.activeElement);\n}\nfunction isHidden(element) {\n  if (element.parentElement && isHidden(element.parentElement))\n    return true;\n  return element.hidden;\n}\nfunction isContentEditable(element) {\n  const value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nfunction isFocusable(element) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false;\n  }\n  const { localName } = element;\n  const focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0)\n    return true;\n  const others = {\n    a: () => element.hasAttribute(\"href\"),\n    audio: () => element.hasAttribute(\"controls\"),\n    video: () => element.hasAttribute(\"controls\")\n  };\n  if (localName in others) {\n    return others[localName]();\n  }\n  if (isContentEditable(element))\n    return true;\n  return hasTabIndex(element);\n}\nfunction isTabbable(element) {\n  if (!element)\n    return false;\n  return isHTMLElement(element) && isFocusable(element) && !hasNegativeTabIndex(element);\n}\n\n// src/index.ts\nvar focusableElList = [\n  \"input:not(:disabled):not([disabled])\",\n  \"select:not(:disabled):not([disabled])\",\n  \"textarea:not(:disabled):not([disabled])\",\n  \"embed\",\n  \"iframe\",\n  \"object\",\n  \"a[href]\",\n  \"area[href]\",\n  \"button:not(:disabled):not([disabled])\",\n  \"[tabindex]\",\n  \"audio[controls]\",\n  \"video[controls]\",\n  \"*[tabindex]:not([aria-disabled])\",\n  \"*[contenteditable]\"\n];\nvar focusableElSelector = focusableElList.join();\nvar isVisible = (el) => el.offsetWidth > 0 && el.offsetHeight > 0;\nfunction getAllFocusable(container) {\n  const focusableEls = Array.from(container.querySelectorAll(focusableElSelector));\n  focusableEls.unshift(container);\n  return focusableEls.filter((el) => isFocusable(el) && isVisible(el));\n}\nfunction getFirstFocusable(container) {\n  const allFocusable = getAllFocusable(container);\n  return allFocusable.length ? allFocusable[0] : null;\n}\nfunction getAllTabbable(container, fallbackToFocusable) {\n  const allFocusable = Array.from(container.querySelectorAll(focusableElSelector));\n  const allTabbable = allFocusable.filter(isTabbable);\n  if (isTabbable(container)) {\n    allTabbable.unshift(container);\n  }\n  if (!allTabbable.length && fallbackToFocusable) {\n    return allFocusable;\n  }\n  return allTabbable;\n}\nfunction getFirstTabbableIn(container, fallbackToFocusable) {\n  const [first] = getAllTabbable(container, fallbackToFocusable);\n  return first || null;\n}\nfunction getLastTabbableIn(container, fallbackToFocusable) {\n  const allTabbable = getAllTabbable(container, fallbackToFocusable);\n  return allTabbable[allTabbable.length - 1] || null;\n}\nfunction getNextTabbable(container, fallbackToFocusable) {\n  const allFocusable = getAllFocusable(container);\n  const index = allFocusable.indexOf(document.activeElement);\n  const slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nfunction getPreviousTabbable(container, fallbackToFocusable) {\n  const allFocusable = getAllFocusable(container).reverse();\n  const index = allFocusable.indexOf(document.activeElement);\n  const slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nexport {\n  contains,\n  getActiveElement,\n  getAllFocusable,\n  getAllTabbable,\n  getEventWindow,\n  getFirstFocusable,\n  getFirstTabbableIn,\n  getLastTabbableIn,\n  getNextTabbable,\n  getOwnerDocument,\n  getOwnerWindow,\n  getPreviousTabbable,\n  hasDisplayNone,\n  hasFocusWithin,\n  hasNegativeTabIndex,\n  hasTabIndex,\n  isActiveElement,\n  isBrowser,\n  isContentEditable,\n  isDisabled,\n  isElement,\n  isFocusable,\n  isHTMLElement,\n  isHidden,\n  isInputElement,\n  isTabbable\n};\n"],"names":["MotionConfigContext","createContext","p","MotionContext","useVisualElementContext","useContext","__name","PresenceContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","useVisualElement","Component","visualState","props","createVisualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","visualElement","isRefObject","ref","useMotionRef","externalRef","useCallback","instance","isVariantLabel","v","isAnimationControls","variantProps","isControllingVariants","name","isVariantNode","getCurrentTreeVariants","context","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","createDefinition","propNames","featureDefinitions","loadFeatures","features","key","useConstant","init","globalProjectionState","id","useProjectionId","LayoutGroupContext","VisualElementHandler","React__default","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","MotionComponent","configAndProps","layoutId","useLayoutId","isStatic","projectionId","undefined","lazyStrictMode","strict","initialLayoutGroupConfig","_jsxs","_jsx","ForwardRefComponent","forwardRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","componentCache","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","addScaleCorrector","correctors","transformPropOrder","transformProps","isForcedMotionValue","layout","isMotionValue","value","translateAlias","sortTransformProps","a","b","buildTransform","transform","transformKeys","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformTemplate","transformString","isCSSVariable","getValueAsType","type","clamp","min","max","sanitize","floatRegex","colorRegex","singleColorRegex","isString","number","alpha","scale","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","isColorString","testProp","splitColor","aName","bName","cName","c","hsla","hue","saturation","lightness","alpha$1","clampRgbUnit","rgbUnit","rgba","red","green","blue","parseHex","r","g","hex","color","colorToken","numberToken","test","_a","_b","_c","_d","analyse","values","numColors","colors","numbers","parse","createTransformer","tokenised","numValues","output","i","convertNumbersToZero","getAnimatableNone","parsed","complex","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","int","numberValueTypes","buildHTMLStyles","state","latestValues","options","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","target","source","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","animationProps","tapProps","panProps","inViewProps","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","keys","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","pathOffset","latest","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","renderHTML","element","projection","camelCaseAttributes","renderSVG","renderState","_styleProp","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","targetKey","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeState","createRenderState","onMount","makeLatestValues","makeUseVisualState","config","make","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","index","svgMotionConfig","htmlMotionConfig","createDomMotionConfig","AnimationType","addDomEvent","eventName","handler","useDomEvent","useFocusGesture","whileFocus","animationState","onFocus","onBlur","isMouseEvent","event","isTouchEvent","filterPrimaryPointer","eventHandler","defaultPagePoint","pointFromTouch","e","pointType","point","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","supportsPointerEvents","supportsTouchEvents","supportsMouseEvents","mouseEventNames","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","useHoverGesture","onHoverStart","onHoverEnd","whileHover","isNodeOrChild","child","useUnmountEffect","combineFunctions","pipe","transformers","useTapGesture","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","onPointerUp","onPointerCancel","defaultEnvironment","env","warned","warnOnce","condition","message","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","root","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","useViewport","whileInView","onViewportEnter","onViewportLeave","viewport","shouldObserve","useMissingIntersectionObserver","useIntersectionObserver","thresholdNames","rootMargin","amount","once","intersectionCallback","isIntersecting","fallback","makeRenderlessComponent","hook","gestureAnimations","usePresence","isPresent","onExitComplete","register","useId","useIsPresent","shallowCompare","next","prev","prevLength","secondsToMilliseconds","seconds","warning","invariant","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","x","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","t","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","circIn","circOut","circInOut","createBackIn","power","backIn","backOut","backInOut","createAnticipate","backEasing","anticipate","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","ease","isAnimatable","underDampedSpring","criticallyDampedSpring","to","linearTween","keyframes","defaultTransitions","getDefaultTransition","valueKey","transitionFactory","defaultValueTypes","getDefaultValueType","defaultValueType","instantAnimationState","defaultTimestep","getCurrentTime","onNextFrame","createRenderStep","runNextFrame","toRun","toRunNextFrame","numToRun","isProcessing","flushNextFrame","toKeepAlive","step","keepAlive","immediate","addToCurrentFrame","buffer","frameData","maxElapsed","useDefaultElapsed","frame","stepsOrder","steps","acc","sync","process","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","timestamp","getFrameData","delay","timeout","start","checkElapsed","elapsed","mix","from","progress","hueToRgb","q","hslaToRgba","mixLinearColor","fromExpo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","numNumbers","template","originStats","targetStats","toFromDifference","mixNumber","detectMixerFactory","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","interpolator","progressInRange","defaultEasing","defaultOffset","_value","convertOffsetToTimes","duration","o","times","createInterpolator","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","velocity","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","d","f","initialGuess","approximateRoot","stiffness","rootIterations","result","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","derived","spring","restSpeed","restDelta","damping","isResolvedFromDuration","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","angularFreq","dampedAngularFreq","freqForT","current","isBelowVelocityThreshold","isBelowDisplacementThreshold","_t","decay","timeConstant","modifyTarget","amplitude","ideal","types","loopElapsed","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","update","passTimestamp","autoplay","driver","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","repeatCount","computedDuration","isComplete","interpolateFromNumber","animator","animation","repeat","complete","play","velocityPerSecond","frameDuration","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","checkBoundary","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","convertTransitionToAnimationOptions","yoyo","flip","loop","getDelayFromTransition","getValueTransition","hydrateKeyframes","getPopmotionAnimationOptions","getAnimation","valueTransition","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","set","finalTarget","potentialUnitType","controls","delayBy","cancelDelay","isNumericalString","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","numSubscriptions","isFloat","MotionValue","render","subscription","passiveEffect","resolve","motionValue","testValueType","auto","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","getCurrent","getVelocity","resolveVariant","setMotionValue","setTarget","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","getOrigin","transitionOrigin","isWillChangeMotionValue","animateVisualElement","animations","variant","animateVariant","resolvedDefinition","animateTarget","getChildAnimations","forwardDelay","animateChildren","first","last","transitionOverride","willChange","animationTypeState","shouldBlockAnimation","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","createTypeState","safeToRemove","distance","distance2D","xDelta","yDelta","PanSession","handlers","transformPagePoint","getPanInfo","isPanStarted","isDistancePastThreshold","onStart","onMove","transformPoint","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","top","left","bottom","right","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","createAxisDelta","createDelta","createAxis","createBox","eachAxis","convertBoundingBoxToBox","convertBoxToBoundingBox","y","transformBoxPoints","topLeft","bottomRight","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","node","transformBox","snapToDefault","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","measureViewportBox","measurePageBox","rootProjectionNode","viewportBox","scroll","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","isDragging","onDragEnd","_point","shouldDrag","axisValue","dragConstraints","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","useDrag","groupDragControls","dragControls","usePanGesture","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","panSession","cssVariableRegex","parseCSSVariable","match","token","getVariableValue","depth","resolveCSSVariables","positionalKeys","isPositionalKey","hasPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","targetBbox","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","scrollY","convertedTarget","unitConversion","parseDomVariant","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","featureNames","numFeatures","propEventHandlers","VisualElement","initialMotionValues","_props","remove","valueIsTransform","removeOnChange","removeOnRenderRequest","other","renderedProps","isStrict","ProjectionNodeConstructor","isEnabled","layoutScroll","canMutate","startAtParent","numVariantProps","closestVariantNode","valueFromInitial","args","DOMVisualElement","transformValues","isMounted","getComputedStyle","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","varToken","correctBoxShadow","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","add","didUpdate","addEventListener","setOptions","hasEverUpdated","getSnapshotBeforeUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","postRender","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","MeasureLayout","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","_e","buildProjectionTransform","latestTransform","xTranslate","yTranslate","rotate","rotateX","rotateY","elementScaleX","elementScaleY","compareByDepth","FlatTree","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","propagateDirtyNodes","resolveTargetDelta","calcProjection","subscriptionManager","isLayoutDirty","resizeUnblockUpdate","finishAnimation","hasRelativeTargetChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetRotation","shouldNotifyListeners","clearMeasurements","mountNodeEarly","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","relativeParent","isProjectionDirty","isTransformDirty","isShared","canSkip","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","stack","needsReset","hasRotate","resetValues","styles","emptyStyles","valuesToRender","correct","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","searchNode","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","featureBundle","motion","isElement","el","isHTMLElement","win","getOwnerWindow","getOwnerDocument","getActiveElement","hasTabIndex","hasNegativeTabIndex","isDisabled","isHidden","isContentEditable","isFocusable","localName","others","isTabbable","focusableElList","focusableElSelector","isVisible","getAllFocusable","container","focusableEls"],"mappings":"uJAKA,MAAMA,GAAsBC,EAAAA,QAAAA,cAAc,CACtC,mBAAqBC,GAAMA,EAC3B,SAAU,GACV,cAAe,OACnB,CAAC,ECPKC,GAAgBF,EAAAA,QAAAA,cAAc,CAAA,CAAE,EACtC,SAASG,IAA0B,CAC/B,OAAOC,EAAU,QAAA,WAACF,EAAa,EAAE,aACrC,CAFSG,EAAAF,GAAA,2BCEJ,MAACG,GAAkBN,EAAa,QAAA,cAAC,IAAI,ECLpCO,EAAY,OAAO,SAAa,ICGhCC,GAA4BD,EAAYE,0BAAkBC,EAAAA,QAAAA,UCD1DC,GAAcX,EAAa,QAAA,cAAC,CAAE,OAAQ,EAAK,CAAE,ECKnD,SAASY,GAAiBC,EAAWC,EAAaC,EAAOC,EAAqB,CAC1E,MAAMC,EAASd,KACTe,EAAcd,qBAAWO,EAAW,EACpCQ,EAAkBf,qBAAWE,EAAe,EAC5Cc,EAAsBhB,EAAAA,QAAAA,WAAWL,EAAmB,EAAE,cACtDsB,EAAmBC,EAAAA,QAAAA,SAIzBN,EAAsBA,GAAuBE,EAAY,SACrD,CAACG,EAAiB,SAAWL,IAC7BK,EAAiB,QAAUL,EAAoBH,EAAW,CACtD,YAAAC,EACA,OAAAG,EACA,MAAAF,EACA,WAAYI,EAAkBA,EAAgB,GAAK,OACnD,sBAAuBA,EACjBA,EAAgB,UAAY,GAC5B,GACN,oBAAAC,CACZ,CAAS,GAEL,MAAMG,EAAgBF,EAAiB,QACvC,OAAAb,GAA0B,IAAM,CAC5Be,GAAiBA,EAAc,QACvC,CAAK,EACDb,EAAAA,QAAAA,UAAU,IAAM,CACRa,GAAiBA,EAAc,gBAC/BA,EAAc,eAAe,gBAEzC,CAAK,EACDf,GAA0B,IAAM,IAAMe,GAAiBA,EAAc,OAAO,SAAS,EAAG,CAAA,CAAE,EACnFA,CACX,CAjCSlB,EAAAO,GAAA,oBCPT,SAASY,GAAYC,EAAK,CACtB,OAAQ,OAAOA,GAAQ,UACnB,OAAO,UAAU,eAAe,KAAKA,EAAK,SAAS,CAC3D,CAHSpB,EAAAmB,GAAA,eCOT,SAASE,GAAaZ,EAAaS,EAAeI,EAAa,CAC3D,OAAOC,EAAAA,QAAAA,YAAaC,GAAa,CAC7BA,GAAYf,EAAY,OAASA,EAAY,MAAMe,CAAQ,EACvDN,IACAM,EACMN,EAAc,MAAMM,CAAQ,EAC5BN,EAAc,QAAO,GAE3BI,IACI,OAAOA,GAAgB,WACvBA,EAAYE,CAAQ,EAEfL,GAAYG,CAAW,IAC5BA,EAAY,QAAUE,GAGjC,EAMD,CAACN,CAAa,CAAC,CACnB,CAvBSlB,EAAAqB,GAAA,gBCJT,SAASI,GAAeC,EAAG,CACvB,OAAO,OAAOA,GAAM,UAAY,MAAM,QAAQA,CAAC,CACnD,CAFS1B,EAAAyB,GAAA,kBCHT,SAASE,GAAoBD,EAAG,CAC5B,OAAO,OAAOA,GAAM,UAAY,OAAOA,EAAE,OAAU,UACvD,CAFS1B,EAAA2B,GAAA,uBCGT,MAAMC,GAAe,CACjB,UACA,UACA,OACA,aACA,YACA,WACA,aACA,aACJ,EACA,SAASC,GAAsBnB,EAAO,CAClC,OAAQiB,GAAoBjB,EAAM,OAAO,GACrCkB,GAAa,KAAME,GAASL,GAAef,EAAMoB,EAAK,CAAC,CAC/D,CAHS9B,EAAA6B,GAAA,yBAIT,SAASE,GAAcrB,EAAO,CAC1B,OAAO,QAAQmB,GAAsBnB,CAAK,GAAKA,EAAM,QAAQ,CACjE,CAFSV,EAAA+B,GAAA,iBCdT,SAASC,GAAuBtB,EAAOuB,EAAS,CAC5C,GAAIJ,GAAsBnB,CAAK,EAAG,CAC9B,KAAM,CAAE,QAAAwB,EAAS,QAAAC,CAAS,EAAGzB,EAC7B,MAAO,CACH,QAASwB,IAAY,IAAST,GAAeS,CAAO,EAC9CA,EACA,OACN,QAAST,GAAeU,CAAO,EAAIA,EAAU,MACzD,CACK,CACD,OAAOzB,EAAM,UAAY,GAAQuB,EAAU,CAAA,CAC/C,CAXSjC,EAAAgC,GAAA,0BCCT,SAASI,GAAuB1B,EAAO,CACnC,KAAM,CAAE,QAAAwB,EAAS,QAAAC,GAAYH,GAAuBtB,EAAOX,EAAU,QAAA,WAACF,EAAa,CAAC,EACpF,OAAOwC,kBAAQ,KAAO,CAAE,QAAAH,EAAS,QAAAC,CAAO,GAAK,CAACG,GAA0BJ,CAAO,EAAGI,GAA0BH,CAAO,CAAC,CAAC,CACzH,CAHSnC,EAAAoC,GAAA,0BAIT,SAASE,GAA0BC,EAAM,CACrC,OAAO,MAAM,QAAQA,CAAI,EAAIA,EAAK,KAAK,GAAG,EAAIA,CAClD,CAFSvC,EAAAsC,GAAA,6BCRT,MAAME,EAAmBxC,EAACyC,IAAe,CACrC,UAAY/B,GAAU+B,EAAU,KAAMX,GAAS,CAAC,CAACpB,EAAMoB,EAAK,CAChE,GAFyB,oBAGnBY,GAAqB,CACvB,cAAeF,EAAiB,CAAC,SAAU,WAAY,MAAM,CAAC,EAC9D,UAAWA,EAAiB,CACxB,UACA,OACA,WACA,aACA,WACA,aACA,YACA,aACR,CAAK,EACD,KAAMA,EAAiB,CAAC,MAAM,CAAC,EAC/B,KAAMA,EAAiB,CAAC,OAAQ,cAAc,CAAC,EAC/C,MAAOA,EAAiB,CAAC,YAAY,CAAC,EACtC,MAAOA,EAAiB,CAAC,aAAc,eAAgB,YAAY,CAAC,EACpE,IAAKA,EAAiB,CAAC,WAAY,QAAS,aAAc,aAAa,CAAC,EACxE,IAAKA,EAAiB,CAClB,QACA,aACA,oBACA,UACR,CAAK,EACD,OAAQA,EAAiB,CACrB,cACA,kBACA,iBACR,CAAK,CACL,EC7BA,SAASG,GAAaC,EAAU,CAC5B,UAAWC,KAAOD,EACVC,IAAQ,4BACRH,GAAmB,0BAA4BE,EAASC,GAGxDH,GAAmBG,GAAK,UAAYD,EAASC,EAGzD,CATS7C,EAAA2C,GAAA,gBCOT,SAASG,GAAYC,EAAM,CACvB,MAAM3B,EAAMH,iBAAO,IAAI,EACvB,OAAIG,EAAI,UAAY,OAChBA,EAAI,QAAU2B,KAEX3B,EAAI,OACf,CANSpB,EAAA8C,GAAA,eCJT,MAAME,GAAwB,CAK1B,uBAAwB,GAKxB,eAAgB,EACpB,ECbA,IAAIC,GAAK,EACT,SAASC,IAAkB,CACvB,OAAOJ,GAAY,IAAM,CACrB,GAAIE,GAAsB,eACtB,OAAOC,IAEnB,CAAK,CACL,CANSjD,EAAAkD,GAAA,mBCFJ,MAACC,GAAqBxD,EAAa,QAAA,cAAC,CAAE,CAAA,ECA3C,MAAMyD,WAA6BC,GAAe,SAAU,CAIxD,yBAA0B,CACtB,KAAM,CAAE,cAAAnC,EAAe,MAAAR,GAAU,KAAK,MACtC,OAAIQ,GACAA,EAAc,SAASR,CAAK,EACzB,IACV,CACD,oBAAqB,CAAG,CACxB,QAAS,CACL,OAAO,KAAK,MAAM,QACrB,CACL,CAdMV,EAAAoD,GAAA,wBCGN,MAAME,GAA2B3D,EAAa,QAAA,cAAC,EAAE,ECL3C4D,GAAwB,OAAO,IAAI,uBAAuB,EC0BhE,SAASC,GAAsB,CAAEC,kBAAAA,EAAmB9C,oBAAAA,EAAqB+C,0BAAAA,EAA2BC,UAAAA,EAAWC,eAAAA,EAAgBpD,UAAAA,CAAW,EAAG,CACzIiD,GAAqBd,GAAac,CAAiB,EACnD,SAASI,EAAgBnD,EAAOY,EAAa,CACzC,MAAMwC,EAAiB,CACnB,GAAG/D,EAAAA,QAAAA,WAAWL,EAAmB,EACjC,GAAGgB,EACHqD,SAAUC,GAAYtD,CAAK,GAEzB,CAAEuD,SAAAA,CAAU,EAAGH,EACrB,IAAIlB,EAAW,KACf,MAAMX,EAAUG,GAAuB1B,CAAK,EAYtCwD,EAAeD,EAAWE,OAAYjB,GAAe,EAIrDzC,EAAcmD,EAAelD,EAAOuD,CAAQ,EAClD,GAAI,CAACA,GAAY/D,EAAW,CAOxB+B,EAAQf,cAAgBX,GAAiBC,EAAWC,EAAaqD,EAAgBnD,CAAmB,EAKpG,MAAMyD,EAAiBrE,EAAAA,QAAAA,WAAWO,EAAW,EAAE+D,OACzCC,EAA2BvE,qBAAWuD,EAAwB,EAChErB,EAAQf,gBACR0B,EAAWX,EAAQf,cAAcyB,aAEjCmB,EAAgBM,EAAgBX,EAAmBS,EAAcR,GAC7DhB,GAAmBgB,0BAA2BY,CAAwB,EAElF,CAKA,OAAAC,GAAAnB,GAAA,CAAA,cAAmEnB,EAAQf,cAAa,MAAS4C,EAAc,SAAA,CAC3GlB,EAAQ4B,GAAA3E,GAAA,SAAA,CAAA,MAC6CoC,EAAO,SAAI0B,EAAUnD,EAAWE,EAAOwD,EAAc7C,GAAaZ,EAAawB,EAAQf,cAAeI,CAAW,EAAGb,EAAawD,EAAUhC,EAAQf,aAAa,CAAC,CAAA,CAAA,CAAA,CAAA,CAC9N,CArDS2C,EAAAA,EAAAA,mBAsDT,MAAMY,EAAsBC,qBAAWb,CAAe,EACtDY,OAAAA,EAAoBlB,IAAyB/C,EACtCiE,CACX,CA3DSjB,EAAAA,GAAAA,yBA4DT,SAASQ,GAAY,CAAED,SAAAA,CAAS,EAAG,CAC/B,MAAMY,EAAgB5E,EAAAA,QAAAA,WAAWoD,EAAkB,EAAEF,GACrD,OAAO0B,GAAiBZ,IAAaI,OAC/BQ,EAAgB,IAAMZ,EACtBA,CACV,CALSC,EAAAA,GAAAA,eCtET,SAASY,GAAkBC,EAAc,CACrC,SAASC,EAAOtE,EAAWuE,EAA8B,GAAI,CACzD,OAAOvB,GAAsBqB,EAAarE,EAAWuE,CAA2B,CAAC,CACpF,CACD,GAHS/E,EAAA8E,EAAA,UAGL,OAAO,MAAU,IACjB,OAAOA,EAMX,MAAME,EAAiB,IAAI,IAC3B,OAAO,IAAI,MAAMF,EAAQ,CAMrB,IAAK,CAACG,EAASpC,KAINmC,EAAe,IAAInC,CAAG,GACvBmC,EAAe,IAAInC,EAAKiC,EAAOjC,CAAG,CAAC,EAEhCmC,EAAe,IAAInC,CAAG,EAEzC,CAAK,CACL,CA5BS7C,EAAA4E,GAAA,qBCZT,MAAMM,GAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,MACJ,EC5BA,SAASC,GAAe3E,EAAW,CAC/B,OAKA,OAAOA,GAAc,UAIjBA,EAAU,SAAS,GAAG,EACf,GAMX,GAAA0E,GAAqB,QAAQ1E,CAAS,EAAI,IAItC,QAAQ,KAAKA,CAAS,EAI9B,CAzBSR,EAAAmF,GAAA,kBCFT,MAAMC,GAAkB,CAAA,EACxB,SAASC,GAAkBC,EAAY,CACnC,OAAO,OAAOF,GAAiBE,CAAU,CAC7C,CAFStF,EAAAqF,GAAA,qBCET,MAAME,GAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,OACJ,EAIMC,GAAiB,IAAI,IAAID,EAAkB,ECtBjD,SAASE,GAAoB5C,EAAK,CAAE,OAAA6C,EAAQ,SAAA3B,CAAQ,EAAI,CACpD,OAAQyB,GAAe,IAAI3C,CAAG,GAC1BA,EAAI,WAAW,QAAQ,IACrB6C,GAAU3B,IAAa,UACpB,CAAC,CAACqB,GAAgBvC,IAAQA,IAAQ,UAC/C,CALS7C,EAAAyF,GAAA,uBCHT,MAAME,EAAgB3F,EAAC4F,GAAU,CAAC,EAAEA,GAAU,MAAoCA,EAAM,aAAlE,iBCEhBC,GAAiB,CACnB,EAAG,aACH,EAAG,aACH,EAAG,aACH,qBAAsB,aAC1B,EAIMC,GAAqB9F,EAAA,CAAC+F,EAAGC,IAAMT,GAAmB,QAAQQ,CAAC,EAAIR,GAAmB,QAAQS,CAAC,EAAtE,sBAO3B,SAASC,GAAe,CAAE,UAAAC,EAAW,cAAAC,CAAa,EAAK,CAAE,2BAAAC,EAA6B,GAAM,mBAAAC,EAAqB,IAASC,EAAoBC,EAAmB,CAE7J,IAAIC,EAAkB,GAEtBL,EAAc,KAAKL,EAAkB,EAErC,UAAWjD,KAAOsD,EACdK,GAAmB,GAAGX,GAAehD,IAAQA,KAAOqD,EAAUrD,OAElE,OAAIuD,GAA8B,CAACF,EAAU,IACzCM,GAAmB,iBAEvBA,EAAkBA,EAAgB,OAG9BD,EACAC,EAAkBD,EAAkBL,EAAWI,EAAqB,GAAKE,CAAe,EAEnFH,GAAsBC,IAC3BE,EAAkB,QAEfA,CACX,CAtBSxG,EAAAiG,GAAA,kBCfT,SAASQ,GAAc5D,EAAK,CACxB,OAAOA,EAAI,WAAW,IAAI,CAC9B,CAFS4D,EAAAA,GAAAA,mBCAT,MAAMC,GAAiB1G,EAAA,CAAC4F,EAAOe,IACpBA,GAAQ,OAAOf,GAAU,SAC1Be,EAAK,UAAUf,CAAK,EACpBA,EAHa,kBCHjBgB,GAAQ5G,EAAA,CAAC6G,EAAKC,IAASpF,GAAM,KAAK,IAAI,KAAK,IAAIA,EAAGoF,CAAG,EAAGD,CAAG,EAAnD,WACRE,GAAW/G,EAAC0B,GAAOA,EAAI,EAAI,OAAOA,EAAE,QAAQ,CAAC,CAAC,EAAIA,EAAvC,YACXsF,GAAa,uBACbC,GAAa,+HACbC,GAAmB,mHACzB,SAASC,GAASzF,EAAG,CACjB,OAAO,OAAOA,GAAM,QACxB,CAFS1B,EAAAmH,GAAA,YCHT,MAAMC,EAAS,CACX,KAAO1F,GAAM,OAAOA,GAAM,SAC1B,MAAO,WACP,UAAYA,GAAMA,CACtB,EACM2F,GAAQ,OAAO,OAAO,OAAO,OAAO,CAAA,EAAID,CAAM,EAAG,CAAE,UAAWR,GAAM,EAAG,CAAC,CAAG,CAAA,EAC3EU,GAAQ,OAAO,OAAO,OAAO,OAAO,GAAIF,CAAM,EAAG,CAAE,QAAS,EAAG,ECN/DG,GAAiBvH,EAACwH,IAAU,CAC9B,KAAO9F,GAAMyF,GAASzF,CAAC,GAAKA,EAAE,SAAS8F,CAAI,GAAK9F,EAAE,MAAM,GAAG,EAAE,SAAW,EACxE,MAAO,WACP,UAAYA,GAAM,GAAGA,IAAI8F,GAC7B,GAJuB,kBAKjBC,EAAUF,GAAe,KAAK,EAC9BG,EAAUH,GAAe,GAAG,EAC5BI,EAAKJ,GAAe,IAAI,EACxBK,GAAKL,GAAe,IAAI,EACxBM,GAAKN,GAAe,IAAI,EACxBO,GAAqB,OAAO,OAAO,OAAO,OAAO,GAAIJ,CAAO,EAAG,CAAE,MAAQhG,GAAMgG,EAAQ,MAAMhG,CAAC,EAAI,IAAK,UAAYA,GAAMgG,EAAQ,UAAUhG,EAAI,GAAG,EAAG,ECVrJqG,GAAgB/H,EAAA,CAAC2G,EAAMqB,IAActG,GAChC,QAASyF,GAASzF,CAAC,GAAKwF,GAAiB,KAAKxF,CAAC,GAAKA,EAAE,WAAWiF,CAAI,GACvEqB,GAAY,OAAO,UAAU,eAAe,KAAKtG,EAAGsG,CAAQ,CAAE,EAFjD,iBAIhBC,GAAajI,EAAA,CAACkI,EAAOC,EAAOC,IAAW1G,GAAM,CAC/C,GAAI,CAACyF,GAASzF,CAAC,EACX,OAAOA,EACX,KAAM,CAACqE,EAAGC,EAAGqC,EAAGhB,CAAK,EAAI3F,EAAE,MAAMsF,EAAU,EAC3C,MAAO,CACH,CAACkB,GAAQ,WAAWnC,CAAC,EACrB,CAACoC,GAAQ,WAAWnC,CAAC,EACrB,CAACoC,GAAQ,WAAWC,CAAC,EACrB,MAAOhB,IAAU,OAAY,WAAWA,CAAK,EAAI,CACzD,CACA,EAVmB,cCDbiB,GAAO,CACT,KAAMP,GAAc,MAAO,KAAK,EAChC,MAAOE,GAAW,MAAO,aAAc,WAAW,EAClD,UAAW,CAAC,CAAE,IAAAM,EAAK,WAAAC,EAAY,UAAAC,EAAW,MAAOC,EAAU,KAC/C,QACJ,KAAK,MAAMH,CAAG,EACd,KACAb,EAAQ,UAAUX,GAASyB,CAAU,CAAC,EACtC,KACAd,EAAQ,UAAUX,GAAS0B,CAAS,CAAC,EACrC,KACA1B,GAASM,GAAM,UAAUqB,CAAO,CAAC,EACjC,GAEZ,ECfMC,GAAe/B,GAAM,EAAG,GAAG,EAC3BgC,GAAU,OAAO,OAAO,OAAO,OAAO,CAAA,EAAIxB,CAAM,EAAG,CAAE,UAAY1F,GAAM,KAAK,MAAMiH,GAAajH,CAAC,CAAC,CAAC,CAAE,EACpGmH,EAAO,CACT,KAAMd,GAAc,MAAO,KAAK,EAChC,MAAOE,GAAW,MAAO,QAAS,MAAM,EACxC,UAAW,CAAC,CAAE,IAAAa,EAAK,MAAAC,EAAO,KAAAC,EAAM,MAAON,EAAU,CAAC,IAAO,QACrDE,GAAQ,UAAUE,CAAG,EACrB,KACAF,GAAQ,UAAUG,CAAK,EACvB,KACAH,GAAQ,UAAUI,CAAI,EACtB,KACAjC,GAASM,GAAM,UAAUqB,CAAO,CAAC,EACjC,GACR,ECfA,SAASO,GAASvH,EAAG,CACjB,IAAIwH,EAAI,GACJC,EAAI,GACJnD,EAAI,GACJD,EAAI,GACR,OAAIrE,EAAE,OAAS,GACXwH,EAAIxH,EAAE,OAAO,EAAG,CAAC,EACjByH,EAAIzH,EAAE,OAAO,EAAG,CAAC,EACjBsE,EAAItE,EAAE,OAAO,EAAG,CAAC,EACjBqE,EAAIrE,EAAE,OAAO,EAAG,CAAC,IAGjBwH,EAAIxH,EAAE,OAAO,EAAG,CAAC,EACjByH,EAAIzH,EAAE,OAAO,EAAG,CAAC,EACjBsE,EAAItE,EAAE,OAAO,EAAG,CAAC,EACjBqE,EAAIrE,EAAE,OAAO,EAAG,CAAC,EACjBwH,GAAKA,EACLC,GAAKA,EACLnD,GAAKA,EACLD,GAAKA,GAEF,CACH,IAAK,SAASmD,EAAG,EAAE,EACnB,MAAO,SAASC,EAAG,EAAE,EACrB,KAAM,SAASnD,EAAG,EAAE,EACpB,MAAOD,EAAI,SAASA,EAAG,EAAE,EAAI,IAAM,CAC3C,CACA,CA3BS/F,EAAAiJ,GAAA,YA4BT,MAAMG,GAAM,CACR,KAAMrB,GAAc,GAAG,EACvB,MAAOkB,GACP,UAAWJ,EAAK,SACpB,EC9BMQ,EAAQ,CACV,KAAO3H,GAAMmH,EAAK,KAAKnH,CAAC,GAAK0H,GAAI,KAAK1H,CAAC,GAAK4G,GAAK,KAAK5G,CAAC,EACvD,MAAQA,GACAmH,EAAK,KAAKnH,CAAC,EACJmH,EAAK,MAAMnH,CAAC,EAEd4G,GAAK,KAAK5G,CAAC,EACT4G,GAAK,MAAM5G,CAAC,EAGZ0H,GAAI,MAAM1H,CAAC,EAG1B,UAAYA,GACDyF,GAASzF,CAAC,EACXA,EACAA,EAAE,eAAe,KAAK,EAClBmH,EAAK,UAAUnH,CAAC,EAChB4G,GAAK,UAAU5G,CAAC,CAElC,ECrBM4H,GAAa,OACbC,GAAc,OACpB,SAASC,GAAK9H,EAAG,CACb,IAAI+H,EAAIC,EAAIC,EAAIC,EAChB,OAAQ,MAAMlI,CAAC,GACXyF,GAASzF,CAAC,KACRgI,GAAMD,EAAK/H,EAAE,MAAMsF,EAAU,KAAO,MAAQyC,IAAO,OAAS,OAASA,EAAG,UAAY,MAAQC,IAAO,OAASA,EAAK,KAAOE,GAAMD,EAAKjI,EAAE,MAAMuF,EAAU,KAAO,MAAQ0C,IAAO,OAAS,OAASA,EAAG,UAAY,MAAQC,IAAO,OAASA,EAAK,GAAK,CACxP,CALS5J,EAAAwJ,GAAA,QAMT,SAASK,GAAQnI,EAAG,CACZ,OAAOA,GAAM,WACbA,EAAI,GAAGA,KACX,MAAMoI,EAAS,CAAA,EACf,IAAIC,EAAY,EAChB,MAAMC,EAAStI,EAAE,MAAMuF,EAAU,EAC7B+C,IACAD,EAAYC,EAAO,OACnBtI,EAAIA,EAAE,QAAQuF,GAAYqC,EAAU,EACpCQ,EAAO,KAAK,GAAGE,EAAO,IAAIX,EAAM,KAAK,CAAC,GAE1C,MAAMY,EAAUvI,EAAE,MAAMsF,EAAU,EAClC,OAAIiD,IACAvI,EAAIA,EAAE,QAAQsF,GAAYuC,EAAW,EACrCO,EAAO,KAAK,GAAGG,EAAQ,IAAI7C,EAAO,KAAK,CAAC,GAErC,CAAE,OAAA0C,EAAQ,UAAAC,EAAW,UAAWrI,CAAC,CAC5C,CAjBSmI,EAAAA,GAAAA,aAkBT,SAASK,GAAMxI,EAAG,CACd,OAAOmI,GAAQnI,CAAC,EAAE,MACtB,CAFS1B,EAAAkK,GAAA,SAGT,SAASC,GAAkBzI,EAAG,CAC1B,KAAM,CAAE,OAAAoI,EAAQ,UAAAC,EAAW,UAAAK,CAAS,EAAKP,GAAQnI,CAAC,EAC5C2I,EAAYP,EAAO,OACzB,OAAQpI,GAAM,CACV,IAAI4I,EAASF,EACb,QAASG,EAAI,EAAGA,EAAIF,EAAWE,IAC3BD,EAASA,EAAO,QAAQC,EAAIR,EAAYT,GAAaC,GAAagB,EAAIR,EAAYV,EAAM,UAAU3H,EAAE6I,EAAE,EAAIxD,GAASrF,EAAE6I,EAAE,CAAC,EAE5H,OAAOD,CACf,CACA,CAVStK,EAAAmK,GAAA,qBAWT,MAAMK,GAAuBxK,EAAC0B,GAAM,OAAOA,GAAM,SAAW,EAAIA,EAAnC,wBAC7B,SAAS+I,GAAkB/I,EAAG,CAC1B,MAAMgJ,EAASR,GAAMxI,CAAC,EAEtB,OADoByI,GAAkBzI,CAAC,EACpBgJ,EAAO,IAAIF,EAAoB,CAAC,CACvD,CAJSC,EAAAA,GAAAA,uBAKT,MAAME,EAAU,CAAE,KAAAnB,GAAM,MAAAU,GAAO,kBAAAC,GAAmBM,kBAAAA,EAAmB,EC/C/DG,GAAc,IAAI,IAAI,CAAC,aAAc,WAAY,WAAY,SAAS,CAAC,EAC7E,SAASC,GAAmBnJ,EAAG,CAC3B,GAAI,CAACI,EAAM8D,CAAK,EAAIlE,EAAE,MAAM,EAAG,EAAE,EAAE,MAAM,GAAG,EAC5C,GAAII,IAAS,cACT,OAAOJ,EACX,KAAM,CAAC0F,CAAM,EAAIxB,EAAM,MAAMoB,EAAU,GAAK,GAC5C,GAAI,CAACI,EACD,OAAO1F,EACX,MAAM8F,EAAO5B,EAAM,QAAQwB,EAAQ,EAAE,EACrC,IAAI0D,EAAeF,GAAY,IAAI9I,CAAI,EAAI,EAAI,EAC/C,OAAIsF,IAAWxB,IACXkF,GAAgB,KACbhJ,EAAO,IAAMgJ,EAAetD,EAAO,GAC9C,CAZSxH,EAAA6K,GAAA,sBAaT,MAAME,GAAgB,oBAChBC,GAAS,OAAO,OAAO,OAAO,OAAO,GAAIL,CAAO,EAAG,CAAE,kBAAoBjJ,GAAM,CAC7E,MAAMuJ,EAAYvJ,EAAE,MAAMqJ,EAAa,EACvC,OAAOE,EAAYA,EAAU,IAAIJ,EAAkB,EAAE,KAAK,GAAG,EAAInJ,CACzE,EAAO,ECnBDwJ,GAAM,CACR,GAAG9D,EACH,UAAW,KAAK,KACpB,ECFM+D,GAAmB,CAErB,YAAaxD,EACb,eAAgBA,EAChB,iBAAkBA,EAClB,kBAAmBA,EACnB,gBAAiBA,EACjB,aAAcA,EACd,OAAQA,EACR,oBAAqBA,EACrB,qBAAsBA,EACtB,wBAAyBA,EACzB,uBAAwBA,EAExB,MAAOA,EACP,SAAUA,EACV,OAAQA,EACR,UAAWA,EACX,KAAMA,EACN,IAAKA,EACL,MAAOA,EACP,OAAQA,EACR,KAAMA,EAEN,QAASA,EACT,WAAYA,EACZ,aAAcA,EACd,cAAeA,EACf,YAAaA,EACb,OAAQA,EACR,UAAWA,EACX,YAAaA,EACb,aAAcA,EACd,WAAYA,EAEZ,OAAQF,EACR,QAASA,EACT,QAASA,EACT,QAASA,EACT,MAAAH,GACA,OAAQA,GACR,OAAQA,GACR,OAAQA,GACR,KAAMG,EACN,MAAOA,EACP,MAAOA,EACP,SAAUE,EACV,WAAYA,EACZ,WAAYA,EACZ,WAAYA,EACZ,EAAGA,EACH,EAAGA,EACH,EAAGA,EACH,YAAaA,EACb,qBAAsBA,EACtB,QAASN,GACT,QAASS,GACT,QAASA,GACT,QAASH,EAET,OAAQuD,GAER,YAAa7D,GACb,cAAeA,GACf,WAAY6D,EAChB,EC9DA,SAASE,GAAgBC,EAAOC,EAAcC,EAAShF,EAAmB,CACtE,KAAM,CAAE,MAAAiF,EAAO,KAAAC,EAAM,UAAAvF,EAAW,cAAAC,EAAe,gBAAAuF,CAAiB,EAAGL,EACnElF,EAAc,OAAS,EAEvB,IAAIwF,EAAe,GACfC,EAAqB,GAErBC,EAAkB,GAOtB,UAAWhJ,KAAOyI,EAAc,CAC5B,MAAM1F,EAAQ0F,EAAazI,GAI3B,GAAI4D,GAAc5D,CAAG,EAAG,CACpB4I,EAAK5I,GAAO+C,EACZ,QACH,CAED,MAAMkG,EAAYX,GAAiBtI,GAC7BkJ,EAAcrF,GAAed,EAAOkG,CAAS,EACnD,GAAItG,GAAe,IAAI3C,CAAG,EAAG,CAMzB,GAJA8I,EAAe,GACfzF,EAAUrD,GAAOkJ,EACjB5F,EAAc,KAAKtD,CAAG,EAElB,CAACgJ,EACD,SAEAjG,KAAWkG,EAAU,SAAW,KAChCD,EAAkB,GACzB,MACQhJ,EAAI,WAAW,QAAQ,GAE5B+I,EAAqB,GACrBF,EAAgB7I,GAAOkJ,GAGvBP,EAAM3I,GAAOkJ,CAEpB,CAiBD,GAhBKT,EAAa,YACVK,GAAgBpF,EAChBiF,EAAM,UAAYvF,GAAeoF,EAAOE,EAASM,EAAiBtF,CAAiB,EAE9EiF,EAAM,YAKXA,EAAM,UAAY,SAOtBI,EAAoB,CACpB,KAAM,CAAE,QAAAI,EAAU,MAAO,QAAAC,EAAU,MAAO,QAAAC,EAAU,CAAI,EAAGR,EAC3DF,EAAM,gBAAkB,GAAGQ,KAAWC,KAAWC,GACpD,CACL,CAnESlM,EAAAoL,GAAA,mBCNT,MAAMe,GAAwBnM,EAAA,KAAO,CACjC,MAAO,CAAE,EACT,UAAW,CAAE,EACb,cAAe,CAAE,EACjB,gBAAiB,CAAE,EACnB,KAAM,CAAE,CACZ,GAN8B,yBCM9B,SAASoM,GAAkBC,EAAQC,EAAQ5L,EAAO,CAC9C,UAAWmC,KAAOyJ,EACV,CAAC3G,EAAc2G,EAAOzJ,EAAI,GAAK,CAAC4C,GAAoB5C,EAAKnC,CAAK,IAC9D2L,EAAOxJ,GAAOyJ,EAAOzJ,GAGjC,CANS7C,EAAAoM,GAAA,qBAOT,SAASG,GAAuB,CAAE,kBAAAhG,GAAqB9F,EAAawD,EAAU,CAC1E,OAAO5B,EAAO,QAAA,QAAC,IAAM,CACjB,MAAMgJ,EAAQc,KACd,OAAAf,GAAgBC,EAAO5K,EAAa,CAAE,2BAA4B,CAACwD,CAAQ,EAAIsC,CAAiB,EACzF,OAAO,OAAO,CAAE,EAAE8E,EAAM,KAAMA,EAAM,KAAK,CACxD,EAAO,CAAC5K,CAAW,CAAC,CACpB,CANST,EAAAuM,GAAA,0BAOT,SAASC,GAAS9L,EAAOD,EAAawD,EAAU,CAC5C,MAAMwI,EAAY/L,EAAM,OAAS,GAC3B8K,EAAQ,CAAA,EAId,OAAAY,GAAkBZ,EAAOiB,EAAW/L,CAAK,EACzC,OAAO,OAAO8K,EAAOe,GAAuB7L,EAAOD,EAAawD,CAAQ,CAAC,EAClEvD,EAAM,gBAAkBA,EAAM,gBAAgB8K,CAAK,EAAIA,CAClE,CATSxL,EAAAwM,GAAA,YAUT,SAASE,GAAahM,EAAOD,EAAawD,EAAU,CAEhD,MAAM0I,EAAY,CAAA,EACZnB,EAAQgB,GAAS9L,EAAOD,EAAawD,CAAQ,EACnD,OAAIvD,EAAM,MAAQA,EAAM,eAAiB,KAErCiM,EAAU,UAAY,GAEtBnB,EAAM,WACFA,EAAM,iBACFA,EAAM,mBACF,OAEZA,EAAM,YACF9K,EAAM,OAAS,GACT,OACA,OAAOA,EAAM,OAAS,IAAM,IAAM,OAEhDiM,EAAU,MAAQnB,EACXmB,CACX,CApBS3M,EAAA0M,GAAA,gBC9BT,MAAME,GAAiB,CACnB,UACA,OACA,WACA,aACA,WACA,aACA,YACA,aACJ,EACMC,GAAW,CAAC,WAAY,QAAS,aAAc,aAAa,EAC5DC,GAAW,CAAC,QAAS,aAAc,oBAAqB,UAAU,EAClEC,GAAc,CAChB,cACA,kBACA,kBACA,UACJ,EAOMC,GAAmB,IAAI,IAAI,CAC7B,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,SACA,WACA,mBACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,OACA,eACA,eACA,kBACA,oBACA,mBACA,SACA,SACA,cACA,eACA,kBACA,iBACA,eACA,aACA,eACA,GAAGD,GACH,GAAGF,GACH,GAAGD,GACH,GAAGE,EACP,CAAC,EASD,SAASG,GAAkBpK,EAAK,CAC5B,OAAOmK,GAAiB,IAAInK,CAAG,CACnC,CAFS7C,EAAAiN,GAAA,qBC5ET,IAAIC,GAAgBlN,EAAC6C,GAAQ,CAACoK,GAAkBpK,CAAG,EAA/B,iBACpB,SAASsK,GAAwBC,EAAa,CACtC,CAACA,IAGLF,GAAgBlN,EAAC6C,GAAQA,EAAI,WAAW,IAAI,EAAI,CAACoK,GAAkBpK,CAAG,EAAIuK,EAAYvK,CAAG,EAAzE,iBACpB,CALS7C,EAAAmN,GAAA,2BAmBT,GAAI,CAMAA,GAAwB,QAAQ,wBAAwB,EAAE,OAAO,CACrE,MACA,CAEA,CACA,SAASE,GAAY3M,EAAO4M,EAAOC,EAAoB,CACnD,MAAMC,EAAgB,CAAA,EACtB,UAAW3K,KAAOnC,GACVwM,GAAcrK,CAAG,GAChB0K,IAAuB,IAAQN,GAAkBpK,CAAG,GACpD,CAACyK,GAAS,CAACL,GAAkBpK,CAAG,GAEhCnC,EAAM,WAAgBmC,EAAI,WAAW,QAAQ,KAC9C2K,EAAc3K,GAAOnC,EAAMmC,IAGnC,OAAO2K,CACX,CAZSxN,EAAAqN,GAAA,eC/BT,SAASI,GAAWC,EAAQC,EAAQC,EAAM,CACtC,OAAO,OAAOF,GAAW,SACnBA,EACA/F,EAAG,UAAUgG,EAASC,EAAOF,CAAM,CAC7C,CAJSD,EAAAA,GAAAA,gBAST,SAASI,GAAuBC,EAAY9B,EAASC,EAAS,CAC1D,MAAM8B,EAAYN,GAAWzB,EAAS8B,EAAW,EAAGA,EAAW,KAAK,EAC9DE,EAAYP,GAAWxB,EAAS6B,EAAW,EAAGA,EAAW,MAAM,EACrE,MAAO,GAAGC,KAAaC,GAC3B,CAJShO,EAAA6N,GAAA,0BCTT,MAAMI,GAAW,CACb,OAAQ,oBACR,MAAO,kBACX,EACMC,GAAY,CACd,OAAQ,mBACR,MAAO,iBACX,EAQA,SAASC,GAAaC,EAAOC,EAAQC,EAAU,EAAGX,EAAS,EAAGY,EAAc,GAAM,CAE9EH,EAAM,WAAa,EAGnB,MAAMI,EAAOD,EAAcN,GAAWC,GAEtCE,EAAMI,EAAK,QAAU7G,EAAG,UAAU,CAACgG,CAAM,EAEzC,MAAMc,EAAa9G,EAAG,UAAU0G,CAAM,EAChCK,EAAc/G,EAAG,UAAU2G,CAAO,EACxCF,EAAMI,EAAK,OAAS,GAAGC,KAAcC,GACzC,CAZS1O,EAAAmO,GAAA,gBCVT,SAASQ,GAActD,EAAO,CAAE,MAAAuD,EAAO,MAAAC,EAAO,QAAA7C,EAAS,QAAAC,EAAS,WAAAwC,EAAY,YAAAC,EAAc,EAAG,WAAAI,EAAa,KAEvGC,GAAUxD,EAASyD,EAAUzI,EAAmB,CAM/C,GALA6E,GAAgBC,EAAO0D,EAAQxD,EAAShF,CAAiB,EAKrDyI,EAAU,CACN3D,EAAM,MAAM,UACZA,EAAM,MAAM,QAAUA,EAAM,MAAM,SAEtC,MACH,CACDA,EAAM,MAAQA,EAAM,MACpBA,EAAM,MAAQ,GACd,KAAM,CAAE,MAAA+C,EAAO,MAAA5C,EAAO,WAAAsC,CAAU,EAAKzC,EAKjC+C,EAAM,YACFN,IACAtC,EAAM,UAAY4C,EAAM,WAC5B,OAAOA,EAAM,WAGbN,IACC9B,IAAY,QAAaC,IAAY,QAAaT,EAAM,aACzDA,EAAM,gBAAkBqC,GAAuBC,EAAY9B,IAAY,OAAYA,EAAU,GAAKC,IAAY,OAAYA,EAAU,EAAG,GAGvI2C,IAAU,SACVR,EAAM,EAAIQ,GACVC,IAAU,SACVT,EAAM,EAAIS,GAEVJ,IAAe,QACfN,GAAaC,EAAOK,EAAYC,EAAaI,EAAY,EAAK,CAEtE,CAxCS9O,EAAA2O,GAAA,iBCLT,MAAMM,GAAuBjP,EAAA,KAAO,CAChC,GAAGmM,GAAuB,EAC1B,MAAO,CAAE,CACb,GAH6B,wBCFvB6C,GAAWhP,EAACkP,GAAQ,OAAOA,GAAQ,UAAYA,EAAI,YAAW,IAAO,MAA1D,YCMjB,SAASC,GAAYzO,EAAOD,EAAa2O,EAAW5O,EAAW,CAC3D,MAAM6O,EAAchN,EAAAA,QAAAA,QAAQ,IAAM,CAC9B,MAAMgJ,EAAQ4D,KACd,OAAAN,GAActD,EAAO5K,EAAa,CAAE,2BAA4B,IAASuO,GAASxO,CAAS,EAAGE,EAAM,iBAAiB,EAC9G,CACH,GAAG2K,EAAM,MACT,MAAO,CAAE,GAAGA,EAAM,KAAO,CACrC,CACA,EAAO,CAAC5K,CAAW,CAAC,EAChB,GAAIC,EAAM,MAAO,CACb,MAAM4O,EAAY,CAAA,EAClBlD,GAAkBkD,EAAW5O,EAAM,MAAOA,CAAK,EAC/C2O,EAAY,MAAQ,CAAE,GAAGC,EAAW,GAAGD,EAAY,MACtD,CACD,OAAOA,CACX,CAfSrP,EAAAmP,GAAA,eCAT,SAASI,GAAgBhC,EAAqB,GAAO,CAiBjD,OAhBkBvN,EAAA,CAACQ,EAAWE,EAAOwD,EAAc9C,EAAK,CAAE,aAAAkK,CAAc,EAAErH,IAAa,CAInF,MAAMoL,GAHiBlK,GAAe3E,CAAS,EACzC2O,GACAzC,IAC6BhM,EAAO4K,EAAcrH,EAAUzD,CAAS,EAErEgP,EAAe,CACjB,GAFkBnC,GAAY3M,EAAO,OAAOF,GAAc,SAAU+M,CAAkB,EAGtF,GAAG8B,EACH,IAAAjO,CACZ,EACQ,OAAI8C,IACAsL,EAAa,sBAAwBtL,GAElCuL,EAAa,QAAA,cAACjP,EAAWgP,CAAY,CACpD,EAfsB,YAiBtB,CAlBSxP,EAAAuP,GAAA,mBCHT,MAAMG,GAAc1P,EAAC2P,GAAQA,EAAI,QAAQ,kBAAmB,OAAO,EAAE,YAAa,EAA9D,eCHpB,SAASC,GAAWC,EAAS,CAAE,MAAArE,EAAO,KAAAC,CAAM,EAAEgB,EAAWqD,EAAY,CACjE,OAAO,OAAOD,EAAQ,MAAOrE,EAAOsE,GAAcA,EAAW,oBAAoBrD,CAAS,CAAC,EAE3F,UAAW5J,KAAO4I,EACdoE,EAAQ,MAAM,YAAYhN,EAAK4I,EAAK5I,EAAI,CAEhD,CANS7C,EAAA4P,GAAA,cCGT,MAAMG,GAAsB,IAAI,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,YACJ,CAAC,ECpBD,SAASC,GAAUH,EAASI,EAAaC,EAAYJ,EAAY,CAC7DF,GAAWC,EAASI,EAAa,OAAWH,CAAU,EACtD,UAAWjN,KAAOoN,EAAY,MAC1BJ,EAAQ,aAAcE,GAAoB,IAAIlN,CAAG,EAAuBA,EAAnB6M,GAAY7M,CAAG,EAASoN,EAAY,MAAMpN,EAAI,CAE3G,CALS7C,EAAAgQ,GAAA,aCDT,SAASG,GAA4BzP,EAAO,CACxC,KAAM,CAAE,MAAA8K,CAAO,EAAG9K,EACZ0P,EAAY,CAAA,EAClB,UAAWvN,KAAO2I,GACV7F,EAAc6F,EAAM3I,EAAI,GAAK4C,GAAoB5C,EAAKnC,CAAK,KAC3D0P,EAAUvN,GAAO2I,EAAM3I,IAG/B,OAAOuN,CACX,CATSD,EAAAA,GAAAA,iCCAT,SAASA,GAA4BzP,EAAO,CACxC,MAAM0P,EAAYC,GAA8B3P,CAAK,EACrD,UAAWmC,KAAOnC,EACd,GAAIiF,EAAcjF,EAAMmC,EAAI,EAAG,CAC3B,MAAMyN,EAAYzN,IAAQ,KAAOA,IAAQ,IAAM,OAASA,EAAI,YAAa,EAAGA,EAC5EuN,EAAUE,GAAa5P,EAAMmC,EAChC,CAEL,OAAOuN,CACX,CATSpQ,EAAAmQ,GAAA,+BCHT,SAASI,GAAwB7P,EAAO8P,EAAY1L,EAAQ2L,EAAgB,CAAE,EAAEC,EAAkB,GAAI,CAIlG,OAAI,OAAOF,GAAe,aACtBA,EAAaA,EAAW1L,IAAW,OAAYA,EAASpE,EAAM,OAAQ+P,EAAeC,CAAe,GAMpG,OAAOF,GAAe,WACtBA,EAAa9P,EAAM,UAAYA,EAAM,SAAS8P,IAO9C,OAAOA,GAAe,aACtBA,EAAaA,EAAW1L,IAAW,OAAYA,EAASpE,EAAM,OAAQ+P,EAAeC,CAAe,GAEjGF,CACX,CAvBSxQ,EAAAuQ,GAAA,2BCAT,MAAMI,GAAoB3Q,EAAC0B,GAChB,MAAM,QAAQA,CAAC,EADA,qBCEpBkP,GAAgB5Q,EAAC0B,GACZ,QAAQA,GAAK,OAAOA,GAAM,UAAYA,EAAE,KAAOA,EAAE,OAAO,EAD7C,iBAGhBmP,GAA+B7Q,EAAC0B,GAE3BiP,GAAkBjP,CAAC,EAAIA,EAAEA,EAAE,OAAS,IAAM,EAAIA,EAFpB,gCCGrC,SAASoP,GAAmBlL,EAAO,CAC/B,MAAMmL,EAAiBpL,EAAcC,CAAK,EAAIA,EAAM,IAAK,EAAGA,EAC5D,OAAOgL,GAAcG,CAAc,EAC7BA,EAAe,QAAS,EACxBA,CACV,CALS/Q,EAAA8Q,GAAA,sBCCT,SAASE,GAAU,CAAE,4BAAAb,EAA6B,kBAAAc,EAAmB,QAAAC,CAAO,EAAKxQ,EAAOuB,EAASnB,EAAiB,CAC9G,MAAMuK,EAAQ,CACV,aAAc8F,GAAiBzQ,EAAOuB,EAASnB,EAAiBqP,CAA2B,EAC3F,YAAac,EAAmB,CACxC,EACI,OAAIC,IACA7F,EAAM,MAAS7J,GAAa0P,EAAQxQ,EAAOc,EAAU6J,CAAK,GAEvDA,CACX,CATSrL,EAAAgR,GAAA,aAUT,MAAMI,GAAqBpR,EAACqR,GAAW,CAAC3Q,EAAOuD,IAAa,CACxD,MAAMhC,EAAUlC,qBAAWF,EAAa,EAClCiB,EAAkBf,qBAAWE,EAAe,EAC5CqR,EAAOtR,EAAA,IAAMgR,GAAUK,EAAQ3Q,EAAOuB,EAASnB,CAAe,EAAvD,QACb,OAAOmD,EAAWqN,EAAI,EAAKxO,GAAYwO,CAAI,CAC/C,EAL2B,sBAM3B,SAASH,GAAiBzQ,EAAOuB,EAASnB,EAAiByQ,EAAoB,CAC3E,MAAMzH,EAAS,CAAA,EACT0H,EAAeD,EAAmB7Q,CAAK,EAC7C,UAAWmC,KAAO2O,EACd1H,EAAOjH,GAAOiO,GAAmBU,EAAa3O,EAAI,EAEtD,GAAI,CAAE,QAAAX,EAAS,QAAAC,CAAS,EAAGzB,EAC3B,MAAM+Q,EAA0B5P,GAAsBnB,CAAK,EACrDgR,EAAkB3P,GAAcrB,CAAK,EACvCuB,GACAyP,GACA,CAACD,GACD/Q,EAAM,UAAY,KACdwB,IAAY,SACZA,EAAUD,EAAQ,SAClBE,IAAY,SACZA,EAAUF,EAAQ,UAE1B,IAAI0P,EAA4B7Q,EAC1BA,EAAgB,UAAY,GAC5B,GACN6Q,EAA4BA,GAA6BzP,IAAY,GACrE,MAAM0P,EAAeD,EAA4BxP,EAAUD,EAC3D,OAAI0P,GACA,OAAOA,GAAiB,WACxB,CAACjQ,GAAoBiQ,CAAY,IACpB,MAAM,QAAQA,CAAY,EAAIA,EAAe,CAACA,CAAY,GAClE,QAASpB,GAAe,CACzB,MAAMqB,EAAWtB,GAAwB7P,EAAO8P,CAAU,EAC1D,GAAI,CAACqB,EACD,OACJ,KAAM,CAAE,cAAAC,EAAe,WAAAC,KAAe1F,CAAM,EAAKwF,EACjD,UAAWhP,KAAOwJ,EAAQ,CACtB,IAAI2F,EAAc3F,EAAOxJ,GACzB,GAAI,MAAM,QAAQmP,CAAW,EAAG,CAK5B,MAAMC,EAAQN,EACRK,EAAY,OAAS,EACrB,EACNA,EAAcA,EAAYC,EAC7B,CACGD,IAAgB,OAChBlI,EAAOjH,GAAOmP,EAErB,CACD,UAAWnP,KAAOiP,EACdhI,EAAOjH,GAAOiP,EAAcjP,EAC5C,CAAS,EAEEiH,CACX,CArDS9J,EAAAmR,GAAA,oBClBT,MAAMe,GAAkB,CACpB,eAAgBd,GAAmB,CAC/B,4BAA6BjB,GAC7B,kBAAmBlB,GACnB,QAAS,CAACvO,EAAOc,EAAU,CAAE,YAAAyO,EAAa,aAAA3E,CAAY,IAAO,CACzD,GAAI,CACA2E,EAAY,WACR,OAAOzO,EAAS,SACZ,WACEA,EAAS,QAAS,EAClBA,EAAS,sBAAqB,CAC3C,MACD,CAEIyO,EAAY,WAAa,CACrB,EAAG,EACH,EAAG,EACH,MAAO,EACP,OAAQ,CAC5B,CACa,CACDtB,GAAcsB,EAAa3E,EAAc,CAAE,2BAA4B,EAAK,EAAI0D,GAASxN,EAAS,OAAO,EAAGd,EAAM,iBAAiB,EACnIsP,GAAUxO,EAAUyO,CAAW,CAClC,CACT,CAAK,CACL,EC5BMkC,GAAmB,CACrB,eAAgBf,GAAmB,CACvC,4BAAQjB,GACA,kBAAmBhE,EAC3B,CAAK,CACL,ECJA,SAASiG,GAAsB5R,EAAW,CAAE,mBAAA+M,EAAqB,EAAK,EAAI9J,EAAmB9C,EAAqB+C,EAA2B,CAIzI,MAAO,CACH,GAJeyB,GAAe3E,CAAS,EACrC0R,GACAC,GAGF,kBAAA1O,EACA,UAAW8L,GAAgBhC,CAAkB,EAC7C,oBAAA5M,EACA,0BAAA+C,EACA,UAAAlD,CACR,CACA,CAZSR,EAAAoS,GAAA,yBCLT,IAAIC,GACH,SAAUA,EAAe,CACtBA,EAAc,QAAa,UAC3BA,EAAc,MAAW,aACzBA,EAAc,IAAS,WACvBA,EAAc,KAAU,YACxBA,EAAc,MAAW,aACzBA,EAAc,OAAY,cAC1BA,EAAc,KAAU,MAC5B,GAAGA,IAAkBA,EAAgB,CAAA,EAAG,ECPxC,SAASC,GAAYjG,EAAQkG,EAAWC,EAASjH,EAAU,CAAE,QAAS,IAAQ,CAC1E,OAAAc,EAAO,iBAAiBkG,EAAWC,EAASjH,CAAO,EAC5C,IAAMc,EAAO,oBAAoBkG,EAAWC,CAAO,CAC9D,CAHSxS,EAAAsS,GAAA,eAyBT,SAASG,GAAYrR,EAAKmR,EAAWC,EAASjH,EAAS,CACnDlL,EAAAA,QAAAA,UAAU,IAAM,CACZ,MAAMwP,EAAUzO,EAAI,QACpB,GAAIoR,GAAW3C,EACX,OAAOyC,GAAYzC,EAAS0C,EAAWC,EAASjH,CAAO,CAE9D,EAAE,CAACnK,EAAKmR,EAAWC,EAASjH,CAAO,CAAC,CACzC,CAPSvL,EAAAyS,GAAA,eClBT,SAASC,GAAgB,CAAE,WAAAC,EAAY,cAAAzR,GAAkB,CACrD,KAAM,CAAE,eAAA0R,CAAgB,EAAG1R,EACrB2R,EAAU7S,EAAA,IAAM,CAClB4S,GAAkBA,EAAe,UAAUP,EAAc,MAAO,EAAI,CAC5E,EAFoB,WAGVS,EAAS9S,EAAA,IAAM,CACjB4S,GAAkBA,EAAe,UAAUP,EAAc,MAAO,EAAK,CAC7E,EAFmB,UAGfI,GAAYvR,EAAe,QAASyR,EAAaE,EAAU,MAAS,EACpEJ,GAAYvR,EAAe,OAAQyR,EAAaG,EAAS,MAAS,CACtE,CAVS9S,EAAA0S,GAAA,mBCTT,SAASK,GAAaC,EAAO,CAEzB,OAAI,OAAO,aAAiB,KAAeA,aAAiB,aAC9CA,EAAM,cAAgB,QAE7BA,aAAiB,UAC5B,CANShT,EAAA+S,GAAA,gBAOT,SAASE,GAAaD,EAAO,CAEzB,MADmB,CAAC,CAACA,EAAM,OAE/B,CAHShT,EAAAiT,GAAA,gBCDT,SAASC,GAAqBC,EAAc,CACxC,OAAQH,GAAU,CACd,MAAMD,EAAeC,aAAiB,YACb,CAACD,GACrBA,GAAgBC,EAAM,SAAW,IAElCG,EAAaH,CAAK,CAE9B,CACA,CATShT,EAAAkT,GAAA,wBAUT,MAAME,GAAmB,CAAE,MAAO,EAAG,MAAO,CAAC,EAC7C,SAASC,GAAeC,EAAGC,EAAY,OAAQ,CAE3C,MAAMC,EADeF,EAAE,QAAQ,IAAMA,EAAE,eAAe,IACxBF,GAC9B,MAAO,CACH,EAAGI,EAAMD,EAAY,KACrB,EAAGC,EAAMD,EAAY,IAC7B,CACA,CAPSvT,EAAAqT,GAAA,kBAQT,SAASI,GAAeD,EAAOD,EAAY,OAAQ,CAC/C,MAAO,CACH,EAAGC,EAAMD,EAAY,KACrB,EAAGC,EAAMD,EAAY,IAC7B,CACA,CALSvT,EAAAyT,GAAA,kBAMT,SAASC,GAAiBV,EAAOO,EAAY,OAAQ,CACjD,MAAO,CACH,MAAON,GAAaD,CAAK,EACnBK,GAAeL,EAAOO,CAAS,EAC/BE,GAAeT,EAAOO,CAAS,CAC7C,CACA,CANSvT,EAAA0T,GAAA,oBAOT,MAAMC,GAAc3T,EAAA,CAACwS,EAASoB,EAA6B,KAAU,CACjE,MAAMC,EAAW7T,EAACgT,GAAUR,EAAQQ,EAAOU,GAAiBV,CAAK,CAAC,EAAjD,YACjB,OAAOY,EACDV,GAAqBW,CAAQ,EAC7BA,CACV,EALoB,eCnCdC,GAAwB9T,EAAA,IAAME,GAAa,OAAO,gBAAkB,KAA5C,yBACxB6T,GAAsB/T,EAAA,IAAME,GAAa,OAAO,eAAiB,KAA3C,uBACtB8T,GAAsBhU,EAAA,IAAME,GAAa,OAAO,cAAgB,KAA1C,uBCDtB+T,GAAkB,CACpB,YAAa,YACb,YAAa,YACb,UAAW,UACX,cAAe,cACf,YAAa,YACb,WAAY,WACZ,aAAc,aACd,aAAc,YAClB,EACMC,GAAkB,CACpB,YAAa,aACb,YAAa,YACb,UAAW,WACX,cAAe,aACnB,EACA,SAASC,GAAoBrS,EAAM,CAC/B,OAAIgS,GAAqB,EACdhS,EAEFiS,GAAmB,EACjBG,GAAgBpS,GAElBkS,GAAmB,EACjBC,GAAgBnS,GAEpBA,CACX,CAXS9B,EAAAmU,GAAA,uBAYT,SAASC,GAAgB/H,EAAQkG,EAAWC,EAASjH,EAAS,CAC1D,OAAO+G,GAAYjG,EAAQ8H,GAAoB5B,CAAS,EAAGoB,GAAYnB,EAASD,IAAc,aAAa,EAAGhH,CAAO,CACzH,CAFSvL,EAAAoU,GAAA,mBAGT,SAASC,GAAgBjT,EAAKmR,EAAWC,EAASjH,EAAS,CACvD,OAAOkH,GAAYrR,EAAK+S,GAAoB5B,CAAS,EAAGC,GAAWmB,GAAYnB,EAASD,IAAc,aAAa,EAAGhH,CAAO,CACjI,CAFSvL,EAAAqU,GAAA,mBCnCT,SAASC,GAAWxS,EAAM,CACtB,IAAIyS,EAAO,KACX,MAAO,IAAM,CACT,MAAMC,EAAWxU,EAAA,IAAM,CACnBuU,EAAO,IACnB,EAFyB,YAGjB,OAAIA,IAAS,MACTA,EAAOzS,EACA0S,GAEJ,EACf,CACA,CAZSxU,EAAAsU,GAAA,cAaT,MAAMG,GAAuBH,GAAW,gBAAgB,EAClDI,GAAqBJ,GAAW,cAAc,EACpD,SAASK,GAAcC,EAAM,CACzB,IAAIL,EAAO,GACX,GAAIK,IAAS,IACTL,EAAOG,GAAkB,UAEpBE,IAAS,IACdL,EAAOE,GAAoB,MAE1B,CACD,MAAMI,EAAiBJ,KACjBK,EAAeJ,KACjBG,GAAkBC,EAClBP,EAAOvU,EAAA,IAAM,CACT6U,IACAC,GAChB,EAHmB,SAOHD,GACAA,IACAC,GACAA,IAEX,CACD,OAAOP,CACX,CA1BSvU,EAAA2U,GAAA,iBA2BT,SAASI,IAAe,CAGpB,MAAMC,EAAkBL,GAAc,EAAI,EAC1C,OAAKK,GAELA,IACO,IAFI,EAGf,CARShV,EAAA+U,GAAA,gBCrCT,SAASE,GAAiB/T,EAAegU,EAAUC,EAAU,CACzD,MAAO,CAACnC,EAAOoC,IAAS,CAChB,CAACrC,GAAaC,CAAK,GAAK+B,GAAc,IAKtC7T,EAAc,gBACdA,EAAc,eAAe,UAAUmR,EAAc,MAAO6C,CAAQ,EAExEC,GAAYA,EAASnC,EAAOoC,CAAI,EACxC,CACA,CAZSpV,EAAAiV,GAAA,oBAaT,SAASI,GAAgB,CAAE,aAAAC,EAAc,WAAAC,EAAY,WAAAC,EAAY,cAAAtU,CAAa,EAAK,CAC/EmT,GAAgBnT,EAAe,eAAgBoU,GAAgBE,EACzDP,GAAiB/T,EAAe,GAAMoU,CAAY,EAClD,OAAW,CAAE,QAAS,CAACA,CAAc,CAAA,EAC3CjB,GAAgBnT,EAAe,eAAgBqU,GAAcC,EACvDP,GAAiB/T,EAAe,GAAOqU,CAAU,EACjD,OAAW,CAAE,QAAS,CAACA,CAAY,CAAA,CAC7C,CAPSvV,EAAAqV,GAAA,mBCXT,MAAMI,GAAgBzV,EAAA,CAACY,EAAQ8U,IACtBA,EAGI9U,IAAW8U,EACT,GAGAD,GAAc7U,EAAQ8U,EAAM,aAAa,EANzC,GAFO,iBCLtB,SAASC,GAAiBR,EAAU,CAChC,OAAO9U,EAAS,QAAA,UAAC,IAAM,IAAM8U,EAAU,EAAE,CAAE,CAAA,CAC/C,CAFSnV,EAAA2V,GAAA,oBCKT,MAAMC,GAAmB5V,EAAA,CAAC+F,EAAGC,IAAOtE,GAAMsE,EAAED,EAAErE,CAAC,CAAC,EAAvB,oBACnBmU,GAAO7V,EAAA,IAAI8V,IAAiBA,EAAa,OAAOF,EAAgB,EAAzD,QCIb,SAASG,GAAc,CAAE,MAAAC,EAAO,WAAAC,EAAY,YAAAC,EAAa,SAAAC,EAAU,cAAAjV,GAAkB,CACjF,MAAMkV,EAAoBJ,GAASC,GAAcC,GAAeC,EAC1DE,EAAapV,iBAAO,EAAK,EACzBqV,EAA4BrV,iBAAO,IAAI,EAIvCsV,EAAe,CACjB,QAAS,EAAEN,GAAcD,GAASE,GAAeM,EACzD,EACI,SAASC,GAA2B,CAChCH,EAA0B,SAAWA,EAA0B,UAC/DA,EAA0B,QAAU,IACvC,CAHQtW,EAAAyW,EAAA,4BAIT,SAASC,GAAkB,CACvB,OAAAD,IACAJ,EAAW,QAAU,GACrBnV,EAAc,gBACVA,EAAc,eAAe,UAAUmR,EAAc,IAAK,EAAK,EAC5D,CAAC0C,GAAY,CACvB,CANQ/U,EAAA0W,EAAA,mBAOT,SAASC,EAAY3D,EAAOoC,EAAM,CAC1B,CAACsB,EAAiB,IAMrBjB,GAAcvU,EAAc,QAAS8R,EAAM,MAAM,EAE5CgD,GAASA,EAAMhD,EAAOoC,CAAI,EAD1Bc,GAAeA,EAAYlD,EAAOoC,CAAI,EAE/C,CAVQpV,EAAA2W,EAAA,eAWT,SAASC,EAAgB5D,EAAOoC,EAAM,CAC9B,CAACsB,EAAiB,GAEtBR,GAAeA,EAAYlD,EAAOoC,CAAI,CACzC,CAJQpV,EAAA4W,EAAA,mBAKT,SAASJ,EAAcxD,EAAOoC,EAAM,CAChCqB,IACI,CAAAJ,EAAW,UAEfA,EAAW,QAAU,GACrBC,EAA0B,QAAUT,GAAKzB,GAAgB,OAAQ,YAAauC,EAAaJ,CAAY,EAAGnC,GAAgB,OAAQ,gBAAiBwC,EAAiBL,CAAY,CAAC,EAIjLrV,EAAc,gBACVA,EAAc,eAAe,UAAUmR,EAAc,IAAK,EAAI,EAClE4D,GAAcA,EAAWjD,EAAOoC,CAAI,EACvC,CAZQpV,EAAAwW,EAAA,iBAaTnC,GAAgBnT,EAAe,cAAekV,EAAoBI,EAAgB,OAAWD,CAAY,EACzGZ,GAAiBc,CAAwB,CAC7C,CApDSzW,EAAA+V,GAAA,iBCTT,MAAMc,GAAqB,aACrBC,GAAM,OAAO,QAAY,KAAe,QAAQ,MAAQ,OACxDD,GACA,aCNAE,GAAS,IAAI,IACnB,SAASC,GAASC,EAAWC,EAASrH,EAAS,CACvCoH,GAAaF,GAAO,IAAIG,CAAO,IAEnC,QAAQ,KAAKA,CAAO,EAChBrH,GACA,QAAQ,KAAKA,CAAO,EACxBkH,GAAO,IAAIG,CAAO,EACtB,CAPSlX,EAAAgX,GAAA,YCIT,MAAMG,GAAoB,IAAI,QAMxBC,GAAY,IAAI,QAChBC,GAAuBrX,EAACsX,GAAU,CACpC,MAAMnC,EAAWgC,GAAkB,IAAIG,EAAM,MAAM,EACnDnC,GAAYA,EAASmC,CAAK,CAC9B,EAH6B,wBAIvBC,GAA2BvX,EAACwX,GAAY,CAC1CA,EAAQ,QAAQH,EAAoB,CACxC,EAFiC,4BAGjC,SAASI,GAAyB,CAAE,KAAAC,KAASnM,GAAW,CACpD,MAAMoM,EAAaD,GAAQ,SAItBN,GAAU,IAAIO,CAAU,GACzBP,GAAU,IAAIO,EAAY,CAAA,CAAE,EAEhC,MAAMC,EAAgBR,GAAU,IAAIO,CAAU,EACxC9U,EAAM,KAAK,UAAU0I,CAAO,EAKlC,OAAKqM,EAAc/U,KACf+U,EAAc/U,GAAO,IAAI,qBAAqB0U,GAA0B,CAAE,KAAAG,EAAM,GAAGnM,CAAO,CAAE,GAEzFqM,EAAc/U,EACzB,CAlBS7C,EAAAyX,GAAA,4BAmBT,SAASI,GAAoBhI,EAAStE,EAAS4J,EAAU,CACrD,MAAM2C,EAA4BL,GAAyBlM,CAAO,EAClE,OAAA4L,GAAkB,IAAItH,EAASsF,CAAQ,EACvC2C,EAA0B,QAAQjI,CAAO,EAClC,IAAM,CACTsH,GAAkB,OAAOtH,CAAO,EAChCiI,EAA0B,UAAUjI,CAAO,CACnD,CACA,CARS7P,EAAA6X,GAAA,uBChCT,SAASE,GAAY,CAAE,cAAA7W,EAAe,YAAA8W,EAAa,gBAAAC,EAAiB,gBAAAC,EAAiB,SAAAC,EAAW,CAAA,GAAO,CACnG,MAAM9M,EAAQpK,EAAAA,QAAAA,OAAO,CACjB,eAAgB,GAChB,SAAU,EAClB,CAAK,EACD,IAAImX,EAAgB,QAAQJ,GAAeC,GAAmBC,CAAe,EACzEC,EAAS,MAAQ9M,EAAM,QAAQ,iBAC/B+M,EAAgB,KACA,OAAO,qBAAyB,IAC9CC,GACAC,IACMF,EAAe/M,EAAM,QAASnK,EAAeiX,CAAQ,CACrE,CAZSnY,EAAA+X,GAAA,eAaT,MAAMQ,GAAiB,CACnB,KAAM,EACN,IAAK,CACT,EACA,SAASD,GAAwBF,EAAe/M,EAAOnK,EAAe,CAAE,KAAAwW,EAAM,OAAQc,EAAY,OAAAC,EAAS,OAAQ,KAAAC,CAAI,EAAI,CACvHrY,EAAAA,QAAAA,UAAU,IAAM,CACZ,GAAI,CAAC+X,GAAiB,CAAClX,EAAc,QACjC,OACJ,MAAMqK,EAAU,CACZ,KAAMmM,GAAS,KAA0B,OAASA,EAAK,QACvD,WAAAc,EACA,UAAW,OAAOC,GAAW,SAAWA,EAASF,GAAeE,EAC5E,EACcE,EAAuB3Y,EAACsX,GAAU,CACpC,KAAM,CAAE,eAAAsB,CAAgB,EAAGtB,EAW3B,GAPIjM,EAAM,WAAauN,IAEvBvN,EAAM,SAAWuN,EAKbF,GAAQ,CAACE,GAAkBvN,EAAM,gBACjC,OAEKuN,IACLvN,EAAM,eAAiB,IAEvBnK,EAAc,gBACdA,EAAc,eAAe,UAAUmR,EAAc,OAAQuG,CAAc,EAM/E,MAAMlY,EAAQQ,EAAc,WACtBiU,EAAWyD,EACXlY,EAAM,gBACNA,EAAM,gBACZyU,GAAYA,EAASmC,CAAK,CACtC,EA9BqC,wBA+B7B,OAAOO,GAAoB3W,EAAc,QAASqK,EAASoN,CAAoB,CAClF,EAAE,CAACP,EAAeV,EAAMc,EAAYC,CAAM,CAAC,CAChD,CA1CSzY,EAAAsY,GAAA,2BAgDT,SAASD,GAA+BD,EAAe/M,EAAOnK,EAAe,CAAE,SAAA2X,EAAW,IAAQ,CAC9FxY,EAAAA,QAAAA,UAAU,IAAM,CACR,CAAC+X,GAAiB,CAACS,IAEnB/B,KAAQ,cACRE,GAAS,GAAO,kGAAkG,EAUtH,sBAAsB,IAAM,CACxB3L,EAAM,eAAiB,GACvB,KAAM,CAAE,gBAAA4M,CAAe,EAAK/W,EAAc,SAAQ,EAClD+W,GAAmBA,EAAgB,IAAI,EACnC/W,EAAc,gBACdA,EAAc,eAAe,UAAUmR,EAAc,OAAQ,EAAI,CAEjF,CAAS,EACT,EAAO,CAAC+F,CAAa,CAAC,CACtB,CAxBSpY,EAAAqY,GAAA,kCCvET,MAAMS,EAA0B9Y,EAAC+Y,GAAUrY,IACvCqY,EAAKrY,CAAK,EACH,MAFqB,2BCM1BsY,GAAoB,CACtB,OAAQF,EAAwBf,EAAW,EAC3C,IAAKe,EAAwB/C,EAAa,EAC1C,MAAO+C,EAAwBpG,EAAe,EAC9C,MAAOoG,EAAwBzD,EAAe,CAClD,ECeA,SAAS4D,IAAc,CACnB,MAAMhX,EAAUlC,qBAAWE,EAAe,EAC1C,GAAIgC,IAAY,KACZ,MAAO,CAAC,GAAM,IAAI,EACtB,KAAM,CAAE,UAAAiX,EAAW,eAAAC,EAAgB,SAAAC,CAAQ,EAAKnX,EAI1CgB,EAAKoW,EAAAA,QAAAA,QACXhZ,OAAAA,EAAAA,QAAAA,UAAU,IAAM+Y,EAASnW,CAAE,EAAG,CAAE,CAAA,EAEzB,CAACiW,GAAaC,EAAiB,CAAC,GADlBnZ,EAAA,IAAMmZ,GAAkBA,EAAelW,CAAE,EAAzC,eACqC,EAAI,CAAC,EAAI,CACvE,CAZSjD,EAAAiZ,GAAA,eAiCT,SAASK,IAAe,CACpB,OAAOJ,GAAUnZ,EAAAA,QAAAA,WAAWE,EAAe,CAAC,CAChD,CAFSD,EAAAsZ,GAAA,gBAGT,SAASJ,GAAUjX,EAAS,CACxB,OAAOA,IAAY,KAAO,GAAOA,EAAQ,SAC7C,CAFSjC,EAAAkZ,GAAA,aC9DT,SAASK,GAAeC,EAAMC,EAAM,CAChC,GAAI,CAAC,MAAM,QAAQA,CAAI,EACnB,MAAO,GACX,MAAMC,EAAaD,EAAK,OACxB,GAAIC,IAAeF,EAAK,OACpB,MAAO,GACX,QAASjP,EAAI,EAAGA,EAAImP,EAAYnP,IAC5B,GAAIkP,EAAKlP,KAAOiP,EAAKjP,GACjB,MAAO,GAEf,MAAO,EACX,CAXSvK,EAAAuZ,GAAA,kBCMT,MAAMI,GAAwB3Z,EAAC4Z,GAAYA,EAAU,IAAvB,yBCN9B,IAAIC,GAAU7Z,EAAA,UAAY,CAAA,EAAZ,WACV8Z,GAAY9Z,EAAA,UAAY,CAAG,EAAf,aCDhB,MAAM+Z,GAAO/Z,EAACga,GAAQA,EAAT,QCoBPC,GAAaja,EAAA,CAAC,EAAGka,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAM,GAAK,EAAMC,EAAK,EAAMD,IAAO,EAAI,EAAMA,GACrG,EADe,cAEbE,GAAuB,KACvBC,GAA2B,GACjC,SAASC,GAAgBC,EAAGC,EAAYC,EAAYC,EAAKC,EAAK,CAC1D,IAAIC,EACAC,EACAtQ,EAAI,EACR,GACIsQ,EAAWL,GAAcC,EAAaD,GAAc,EACpDI,EAAWX,GAAWY,EAAUH,EAAKC,CAAG,EAAIJ,EACxCK,EAAW,EACXH,EAAaI,EAGbL,EAAaK,QAEZ,KAAK,IAAID,CAAQ,EAAIR,IAC1B,EAAE7P,EAAI8P,IACV,OAAOQ,CACX,CAhBS7a,EAAAsa,GAAA,mBAiBT,SAASQ,GAAYJ,EAAKK,EAAKJ,EAAKK,EAAK,CAErC,GAAIN,IAAQK,GAAOJ,IAAQK,EACvB,OAAOjB,GACX,MAAMkB,EAAWjb,EAACkb,GAAOZ,GAAgBY,EAAI,EAAG,EAAGR,EAAKC,CAAG,EAA1C,YAEjB,OAAQQ,GAAMA,IAAM,GAAKA,IAAM,EAAIA,EAAIlB,GAAWgB,EAASE,CAAC,EAAGJ,EAAKC,CAAG,CAC3E,CAPShb,EAAA8a,GAAA,eCvCT,MAAMM,GAAepb,EAACqb,GAAYzb,GAAMA,GAAK,GAAMyb,EAAO,EAAIzb,CAAC,EAAI,GAAK,EAAIyb,EAAO,GAAK,EAAIzb,EAAE,GAAK,EAA9E,gBCAf0b,GAAgBtb,EAACqb,GAAYzb,GAAM,EAAIyb,EAAO,EAAIzb,CAAC,EAAnC,iBCChB2b,GAASvb,EAACJ,GAAMA,EAAIA,EAAX,UACT4b,GAAUF,GAAcC,EAAM,EAC9BE,GAAYL,GAAaG,EAAM,ECF/BG,GAAS1b,EAACJ,GAAM,EAAI,KAAK,IAAI,KAAK,KAAKA,CAAC,CAAC,EAAhC,UACT+b,GAAUL,GAAcI,EAAM,EAC9BE,GAAYR,GAAaO,EAAO,ECFhCE,GAAe7b,EAAA,CAAC8b,EAAQ,QAAWlc,GAAMA,EAAIA,IAAMkc,EAAQ,GAAKlc,EAAIkc,GAArD,gBACfC,GAASF,GAAY,EACrBG,GAAUV,GAAcS,EAAM,EAC9BE,GAAYb,GAAaW,EAAM,ECJ/BG,GAAmBlc,EAAC8b,GAAU,CAChC,MAAMK,EAAaN,GAAaC,CAAK,EACrC,OAAQlc,IAAOA,GAAK,GAAK,EACnB,GAAMuc,EAAWvc,CAAC,EAClB,IAAO,EAAI,KAAK,IAAI,EAAG,KAAOA,EAAI,EAAE,EAC9C,EALyB,oBAMnBwc,GAAaF,GAAkB,ECA/BG,GAAe,CACjB,OAAQtC,GACR,OAAAwB,GACA,UAAAE,GACA,QAAAD,GACA,OAAAE,GACA,UAAAE,GACA,QAAAD,GACA,OAAAI,GACA,UAAAE,GACA,QAAAD,GACA,WAAAI,EACJ,EACME,GAA6Btc,EAACwQ,GAAe,CAC/C,GAAI,MAAM,QAAQA,CAAU,EAAG,CAE3BsJ,GAAUtJ,EAAW,SAAW,CAA4D,EAC5F,KAAM,CAAC+L,EAAIC,EAAIC,EAAIC,CAAE,EAAIlM,EACzB,OAAOsK,GAAYyB,EAAIC,EAAIC,EAAIC,CAAE,CACpC,SACQ,OAAOlM,GAAe,SAG3B,OAAO6L,GAAa7L,GAExB,OAAOA,CACX,EAbmC,8BAc7BmM,GAAgB3c,EAAC4c,GACZ,MAAM,QAAQA,CAAI,GAAK,OAAOA,EAAK,IAAO,SAD/B,iBCxBhBC,GAAe7c,EAAA,CAAC6C,EAAK+C,IAEnB/C,IAAQ,SACD,GAIP,UAAO+C,GAAU,UAAY,MAAM,QAAQA,CAAK,GAEhD,OAAOA,GAAU,UACjB+E,EAAQ,KAAK/E,CAAK,GAClB,CAACA,EAAM,WAAW,MAAM,GAXX,gBCTfkX,EAAoB9c,EAAA,KAAO,CAC7B,KAAM,SACN,UAAW,IACX,QAAS,GACT,UAAW,EACf,GAL0B,qBAMpB+c,GAAyB/c,EAACgd,IAAQ,CACpC,KAAM,SACN,UAAW,IACX,QAASA,IAAO,EAAI,EAAI,KAAK,KAAK,GAAG,EAAI,GACzC,UAAW,EACf,GAL+B,0BAMzBC,GAAcjd,EAAA,KAAO,CACvB,KAAM,YACN,KAAM,SACN,SAAU,EACd,GAJoB,eAKdkd,GAAYld,EAAC8J,IAAY,CAC3B,KAAM,YACN,SAAU,GACV,OAAAA,CACJ,GAJkB,eAKZqT,GAAqB,CACvB,EAAGL,EACH,EAAGA,EACH,EAAGA,EACH,OAAQA,EACR,QAASA,EACT,QAASA,EACT,QAASA,EACT,OAAQC,GACR,OAAQA,GACR,MAAOA,GACP,QAASE,GACT,gBAAiBA,GACjB,MAAOA,GACP,QAASF,EACb,EACMK,GAAuBpd,EAAA,CAACqd,EAAUL,IAAO,CAC3C,IAAIM,EACJ,OAAI3M,GAAkBqM,CAAE,EACpBM,EAAoBJ,GAGpBI,EACIH,GAAmBE,IAAaF,GAAmB,QAEpD,CAAE,GAAAH,EAAI,GAAGM,EAAkBN,CAAE,CAAC,CACzC,EAV6B,wBClCvBO,GAAoB,CACtB,GAAGpS,GAEH,MAAA9B,EACA,gBAAiBA,EACjB,aAAcA,EACd,KAAMA,EACN,OAAQA,EAER,YAAaA,EACb,eAAgBA,EAChB,iBAAkBA,EAClB,kBAAmBA,EACnB,gBAAiBA,EACjB,OAAA2B,GACA,aAAcA,EAClB,EAIMwS,GAAsBxd,EAAC6C,GAAQ0a,GAAkB1a,GAA3B,uBCvB5B,SAAS4H,GAAkB5H,EAAK+C,EAAO,CACnC,IAAI6D,EACJ,IAAIgU,EAAmBD,GAAoB3a,CAAG,EAC9C,OAAI4a,IAAqBzS,KACrByS,EAAmB9S,IAEflB,EAAKgU,EAAiB,qBAAuB,MAAQhU,IAAO,OAAS,OAASA,EAAG,KAAKgU,EAAkB7X,CAAK,CACzH,CAPS5F,EAAAyK,GAAA,qBCHT,MAAMiT,GAAwB,CAC1B,QAAS,EACb,ECFMC,GAAmB,EAAI,GAAM,IAC7BC,GAAiB,OAAO,YAAgB,IACxC,IAAM,YAAY,IAAK,EACvB,IAAM,KAAK,MACXC,GAAc,OAAO,OAAW,IAC/B1I,GAAa,OAAO,sBAAsBA,CAAQ,EAClDA,GAAa,WAAW,IAAMA,EAASyI,GAAc,CAAE,EAAGD,EAAe,ECNhF,SAASG,GAAiBC,EAAc,CACpC,IAAIC,EAAQ,CAAA,EACRC,EAAiB,CAAA,EACjBC,EAAW,EACXC,EAAe,GACfC,EAAiB,GACrB,MAAMC,EAAc,IAAI,QAClBC,EAAO,CACT,SAAU,CAACnJ,EAAUoJ,EAAY,GAAOC,EAAY,KAAU,CAC1D,MAAMC,EAAoBD,GAAaL,EACjCO,EAASD,EAAoBT,EAAQC,EAC3C,OAAIM,GACAF,EAAY,IAAIlJ,CAAQ,EACxBuJ,EAAO,QAAQvJ,CAAQ,IAAM,KAC7BuJ,EAAO,KAAKvJ,CAAQ,EAChBsJ,GAAqBN,IACrBD,EAAWF,EAAM,SAElB7I,CACV,EACD,OAASA,GAAa,CAClB,MAAMlD,EAAQgM,EAAe,QAAQ9I,CAAQ,EACzClD,IAAU,IACVgM,EAAe,OAAOhM,EAAO,CAAC,EAClCoM,EAAY,OAAOlJ,CAAQ,CAC9B,EACD,QAAUwJ,GAAc,CACpB,GAAIR,EAAc,CACdC,EAAiB,GACjB,MACH,CAKD,GAJAD,EAAe,GACf,CAACH,EAAOC,CAAc,EAAI,CAACA,EAAgBD,CAAK,EAChDC,EAAe,OAAS,EACxBC,EAAWF,EAAM,OACbE,EACA,QAAS3T,EAAI,EAAGA,EAAI2T,EAAU3T,IAAK,CAC/B,MAAM4K,EAAW6I,EAAMzT,GACvB4K,EAASwJ,CAAS,EACdN,EAAY,IAAIlJ,CAAQ,IACxBmJ,EAAK,SAASnJ,CAAQ,EACtB4I,IAEP,CAELI,EAAe,GACXC,IACAA,EAAiB,GACjBE,EAAK,QAAQK,CAAS,EAE7B,CACT,EACI,OAAOL,CACX,CArDSte,EAAA8d,GAAA,oBCGT,MAAMc,GAAa,GACnB,IAAIC,GAAoB,GACpBd,GAAe,GACfI,GAAe,GACnB,MAAMW,GAAQ,CACV,MAAO,EACP,UAAW,CACf,EACMC,GAAa,CACf,OACA,SACA,YACA,SACA,YACJ,EACMC,GAAQD,GAAW,OAAO,CAACE,EAAKpc,KAClCoc,EAAIpc,GAAOib,GAAiB,IAAOC,GAAe,EAAK,EAChDkB,GACR,CAAE,CAAA,EACCC,EAAOH,GAAW,OAAO,CAACE,EAAKpc,IAAQ,CACzC,MAAMyb,EAAOU,GAAMnc,GACnB,OAAAoc,EAAIpc,GAAO,CAACsc,EAASZ,EAAY,GAAOC,EAAY,MAC3CT,IACDqB,KACGd,EAAK,SAASa,EAASZ,EAAWC,CAAS,GAE/CS,CACX,EAAG,EAAE,EACCI,EAAaN,GAAW,OAAO,CAACE,EAAKpc,KACvCoc,EAAIpc,GAAOmc,GAAMnc,GAAK,OACfoc,GACR,CAAE,CAAA,EACCK,GAAYP,GAAW,OAAO,CAACE,EAAKpc,KACtCoc,EAAIpc,GAAO,IAAMmc,GAAMnc,GAAK,QAAQic,EAAK,EAClCG,GACR,CAAE,CAAA,EACCM,GAAcvf,EAACwf,GAAWR,GAAMQ,GAAQ,QAAQV,EAAK,EAAvC,eACdW,GAAezf,EAAC0f,GAAc,CAChC3B,GAAe,GACfe,GAAM,MAAQD,GACRlB,GACA,KAAK,IAAI,KAAK,IAAI+B,EAAYZ,GAAM,UAAWF,EAAU,EAAG,CAAC,EACnEE,GAAM,UAAYY,EAClBvB,GAAe,GACfY,GAAW,QAAQQ,EAAW,EAC9BpB,GAAe,GACXJ,KACAc,GAAoB,GACpBhB,GAAY4B,EAAY,EAEhC,EAbqB,gBAcfL,GAAYpf,EAAA,IAAM,CACpB+d,GAAe,GACfc,GAAoB,GACfV,IACDN,GAAY4B,EAAY,CAChC,EALkB,aAMZE,GAAe3f,EAAA,IAAM8e,GAAN,gBC1DrB,SAASc,GAAMzK,EAAU0K,EAAS,CAC9B,MAAMC,EAAQ,YAAY,MACpBC,EAAe/f,EAAA,CAAC,CAAE,UAAA0f,KAAgB,CACpC,MAAMM,EAAUN,EAAYI,EACxBE,GAAWH,IACXR,EAAW,KAAKU,CAAY,EAC5B5K,EAAS6K,EAAUH,CAAO,EAEtC,EANyB,gBAOrB,OAAAX,EAAK,KAAKa,EAAc,EAAI,EACrB,IAAMV,EAAW,KAAKU,CAAY,CAC7C,CAXS/f,EAAA4f,GAAA,SCFT,MAAMhZ,GAAQ5G,EAAA,CAAC6G,EAAKC,EAAKpF,IAAM,KAAK,IAAI,KAAK,IAAIA,EAAGmF,CAAG,EAAGC,CAAG,EAA/C,SCqBRmZ,EAAMjgB,EAAA,CAACkgB,EAAMlD,EAAImD,IAAa,CAACA,EAAWD,EAAOC,EAAWnD,EAAKkD,EAA3D,OCpBZ,SAASE,GAASxgB,EAAGygB,EAAGlF,EAAG,CAKvB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDvb,GAAKygB,EAAIzgB,GAAK,EAAIub,EACzBA,EAAI,EAAI,EACDkF,EACPlF,EAAI,EAAI,EACDvb,GAAKygB,EAAIzgB,IAAM,EAAI,EAAIub,GAAK,EAChCvb,CACX,CAZSI,EAAAogB,GAAA,YAaT,SAASE,GAAW,CAAE,IAAA/X,EAAK,WAAAC,EAAY,UAAAC,EAAW,MAAApB,CAAK,EAAI,CACvDkB,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIK,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAI,CAACR,EACDM,EAAMC,EAAQC,EAAOP,MAEpB,CACD,MAAM4X,EAAI5X,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC5I,EAAI,EAAI6I,EAAY4X,EAC1BvX,EAAMsX,GAASxgB,EAAGygB,EAAG9X,EAAM,EAAI,CAAC,EAChCQ,EAAQqX,GAASxgB,EAAGygB,EAAG9X,CAAG,EAC1BS,EAAOoX,GAASxgB,EAAGygB,EAAG9X,EAAM,EAAI,CAAC,CACpC,CACD,MAAO,CACH,IAAK,KAAK,MAAMO,EAAM,GAAG,EACzB,MAAO,KAAK,MAAMC,EAAQ,GAAG,EAC7B,KAAM,KAAK,MAAMC,EAAO,GAAG,EAC3B,MAAA3B,CACR,CACA,CAzBSrH,EAAAsgB,GAAA,cCNT,MAAMC,GAAiBvgB,EAAA,CAACkgB,EAAMlD,EAAItb,IAAM,CACpC,MAAM8e,EAAWN,EAAOA,EACxB,OAAO,KAAK,KAAK,KAAK,IAAI,EAAGxe,GAAKsb,EAAKA,EAAKwD,GAAYA,CAAQ,CAAC,CACrE,EAHuB,kBAIjBC,GAAa,CAACrX,GAAKP,EAAMP,EAAI,EAC7BoY,GAAe1gB,EAAC0B,GAAM+e,GAAW,KAAM9Z,GAASA,EAAK,KAAKjF,CAAC,CAAC,EAA7C,gBACrB,SAASif,GAAOtX,EAAO,CACnB,MAAM1C,EAAO+Z,GAAarX,CAAK,EAE/B,IAAIuX,EAAQja,EAAK,MAAM0C,CAAK,EAC5B,OAAI1C,IAAS2B,KACTsY,EAAQN,GAAWM,CAAK,GAErBA,CACX,CARS5gB,EAAA2gB,GAAA,UAST,MAAME,GAAW7gB,EAAA,CAACkgB,EAAMlD,IAAO,CAC3B,MAAM8D,EAAWH,GAAOT,CAAI,EACtBa,EAASJ,GAAO3D,CAAE,EAClBgE,EAAU,CAAE,GAAGF,GACrB,OAAQpf,IACJsf,EAAQ,IAAMT,GAAeO,EAAS,IAAKC,EAAO,IAAKrf,CAAC,EACxDsf,EAAQ,MAAQT,GAAeO,EAAS,MAAOC,EAAO,MAAOrf,CAAC,EAC9Dsf,EAAQ,KAAOT,GAAeO,EAAS,KAAMC,EAAO,KAAMrf,CAAC,EAC3Dsf,EAAQ,MAAQf,EAAIa,EAAS,MAAOC,EAAO,MAAOrf,CAAC,EAC5CmH,EAAK,UAAUmY,CAAO,EAErC,EAXiB,YCjBjB,SAASC,GAASvT,EAAQrB,EAAQ,CAC9B,OAAI,OAAOqB,GAAW,SACVhM,GAAMue,EAAIvS,EAAQrB,EAAQ3K,CAAC,EAE9B2H,EAAM,KAAKqE,CAAM,EACfmT,GAASnT,EAAQrB,CAAM,EAGvB6U,GAAWxT,EAAQrB,CAAM,CAExC,CAVSrM,EAAAihB,GAAA,YAWT,MAAME,GAAWnhB,EAAA,CAACkgB,EAAMlD,IAAO,CAC3B,MAAM1S,EAAS,CAAC,GAAG4V,CAAI,EACjB7V,EAAYC,EAAO,OACnB8W,EAAalB,EAAK,IAAI,CAACmB,EAAU9W,IAAM0W,GAASI,EAAUrE,EAAGzS,EAAE,CAAC,EACtE,OAAQ7I,GAAM,CACV,QAAS6I,EAAI,EAAGA,EAAIF,EAAWE,IAC3BD,EAAOC,GAAK6W,EAAW7W,GAAG7I,CAAC,EAE/B,OAAO4I,CACf,CACA,EAViB,YAWXgX,GAAYthB,EAAA,CAAC0N,EAAQrB,IAAW,CAClC,MAAM/B,EAAS,CAAE,GAAGoD,EAAQ,GAAGrB,CAAM,EAC/B+U,EAAa,CAAA,EACnB,UAAWve,KAAOyH,EACVoD,EAAO7K,KAAS,QAAawJ,EAAOxJ,KAAS,SAC7Cue,EAAWve,GAAOoe,GAASvT,EAAO7K,GAAMwJ,EAAOxJ,EAAI,GAG3D,OAAQnB,GAAM,CACV,UAAWmB,KAAOue,EACd9W,EAAOzH,GAAOue,EAAWve,GAAKnB,CAAC,EAEnC,OAAO4I,CACf,CACA,EAdkB,aAkBlB,SAAST,GAAQjE,EAAO,CACpB,MAAM8E,EAASC,EAAQ,MAAM/E,CAAK,EAC5ByE,EAAYK,EAAO,OACzB,IAAI6W,EAAa,EACbxX,EAAY,EAChB,QAASQ,EAAI,EAAGA,EAAIF,EAAWE,IAGvBgX,GAAc,OAAO7W,EAAOH,IAAO,SACnCgX,IAGAxX,IAGR,MAAO,CAAE,OAAAW,EAAQ,WAAA6W,EAAY,UAAAxX,EACjC,CAhBS/J,EAAA6J,GAAA,WAiBT,MAAMqX,GAAalhB,EAAA,CAAC0N,EAAQrB,IAAW,CACnC,MAAMmV,EAAW7W,EAAQ,kBAAkB0B,CAAM,EAC3CoV,EAAc5X,GAAQ6D,CAAM,EAC5BgU,EAAc7X,GAAQwC,CAAM,EAGlC,OAFuBoV,EAAY,YAAcC,EAAY,WACzDD,EAAY,YAAcC,EAAY,WAE/B7L,GAAKsL,GAASM,EAAY,OAAQC,EAAY,MAAM,EAAGF,CAAQ,EAI9D5hB,GAAM,GAAGA,EAAI,EAAIyM,EAASqB,GAE1C,EAbmB,cCnDbyS,GAAWngB,EAAA,CAACkgB,EAAMlD,EAAIpX,IAAU,CAClC,MAAM+b,EAAmB3E,EAAKkD,EAC9B,OAAOyB,IAAqB,EAAI,GAAK/b,EAAQsa,GAAQyB,CACzD,EAHiB,YCHXC,GAAY5hB,EAAA,CAACkgB,EAAMlD,IAAQpd,GAAMqgB,EAAIC,EAAMlD,EAAIpd,CAAC,EAApC,aAClB,SAASiiB,GAAmBngB,EAAG,CAC3B,OAAI,OAAOA,GAAM,SACNkgB,GAEF,OAAOlgB,GAAM,SACd2H,EAAM,KAAK3H,CAAC,EACLmf,GAGAK,GAGN,MAAM,QAAQxf,CAAC,EACbyf,GAEF,OAAOzf,GAAM,SACX4f,GAEJM,EACX,CAnBS5hB,EAAA6hB,GAAA,sBAoBT,SAASC,GAAaxX,EAAQsS,EAAMmF,EAAa,CAC7C,MAAMC,EAAS,CAAA,EACTC,EAAeF,GAAeF,GAAmBvX,EAAO,EAAE,EAC1D4X,EAAY5X,EAAO,OAAS,EAClC,QAASC,EAAI,EAAGA,EAAI2X,EAAW3X,IAAK,CAChC,IAAI4X,EAAQF,EAAa3X,EAAOC,GAAID,EAAOC,EAAI,EAAE,EACjD,GAAIqS,EAAM,CACN,MAAMwF,EAAiB,MAAM,QAAQxF,CAAI,EAAIA,EAAKrS,GAAKqS,EACvDuF,EAAQtM,GAAKuM,EAAgBD,CAAK,CACrC,CACDH,EAAO,KAAKG,CAAK,CACpB,CACD,OAAOH,CACX,CAbShiB,EAAA8hB,GAAA,gBAiCT,SAASO,GAAYC,EAAOhY,EAAQ,CAAE,MAAOiY,EAAU,GAAM,KAAA3F,EAAM,MAAAuF,CAAO,EAAG,GAAI,CAC7E,MAAMK,EAAcF,EAAM,OAC1BxI,GAAU0I,IAAgBlY,EAAO,MAA8D,EAC/FwP,GAAU,CAAC8C,GAAQ,CAAC,MAAM,QAAQA,CAAI,GAAKA,EAAK,SAAW4F,EAAc,CAAqI,EAE1MF,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,CAAC,GAAGA,CAAK,EAAE,QAAO,EAC1BhY,EAAS,CAAC,GAAGA,CAAM,EAAE,QAAO,GAEhC,MAAM0X,EAASF,GAAaxX,EAAQsS,EAAMuF,CAAK,EACzCD,EAAYF,EAAO,OACnBS,EAAeziB,EAAC0B,GAAM,CACxB,IAAI6I,EAAI,EACR,GAAI2X,EAAY,EACZ,KAAO3X,EAAI+X,EAAM,OAAS,GAClB,EAAA5gB,EAAI4gB,EAAM/X,EAAI,IADOA,IACzB,CAIR,MAAMmY,EAAkBvC,GAASmC,EAAM/X,GAAI+X,EAAM/X,EAAI,GAAI7I,CAAC,EAC1D,OAAOsgB,EAAOzX,GAAGmY,CAAe,CACxC,EAVyB,gBAWrB,OAAOH,EACA7gB,GAAM+gB,EAAa7b,GAAM0b,EAAM,GAAIA,EAAME,EAAc,GAAI9gB,CAAC,CAAC,EAC9D+gB,CACV,CAzBSziB,EAAAqiB,GAAA,eC5DT,SAASM,GAAc7Y,EAAQuR,EAAQ,CACnC,OAAOvR,EAAO,IAAI,IAAMuR,GAAUI,EAAS,EAAE,OAAO,EAAG3R,EAAO,OAAS,CAAC,CAC5E,CAFS9J,EAAA2iB,GAAA,iBAGT,SAASC,GAAc9Y,EAAQ,CAC3B,MAAMO,EAAYP,EAAO,OACzB,OAAOA,EAAO,IAAI,CAAC+Y,EAAQtY,IAAMA,IAAM,EAAIA,GAAKF,EAAY,GAAK,CAAC,CACtE,CAHSrK,EAAA4iB,GAAA,iBAIT,SAASE,GAAqBnV,EAAQoV,EAAU,CAC5C,OAAOpV,EAAO,IAAKqV,GAAMA,EAAID,CAAQ,CACzC,CAFS/iB,EAAA8iB,GAAA,wBAGT,SAAS5F,GAAU,CAAE,KAAAgD,EAAO,EAAG,GAAAlD,EAAK,EAAG,KAAAJ,EAAM,OAAAjP,EAAQ,SAAAoV,EAAW,KAAQ,CAKpE,MAAM1X,EAAQ,CAAE,KAAM,GAAO,MAAO6U,CAAI,EAIlCpW,EAAS,MAAM,QAAQkT,CAAE,EAAIA,EAAK,CAACkD,EAAMlD,CAAE,EAI3CiG,EAAQH,GAGdnV,GAAUA,EAAO,SAAW7D,EAAO,OAC7B6D,EACAiV,GAAc9Y,CAAM,EAAGiZ,CAAQ,EACrC,SAASG,GAAqB,CAC1B,OAAOb,GAAYY,EAAOnZ,EAAQ,CAC9B,KAAM,MAAM,QAAQ8S,CAAI,EAAIA,EAAO+F,GAAc7Y,EAAQ8S,CAAI,CACzE,CAAS,CACJ,CAJQ5c,EAAAkjB,EAAA,sBAKT,IAAIT,EAAeS,IACnB,MAAO,CACH,KAAO/H,IACH9P,EAAM,MAAQoX,EAAatH,CAAC,EAC5B9P,EAAM,KAAO8P,GAAK4H,EACX1X,GAEX,WAAY,IAAM,CACdvB,EAAO,QAAO,EACd2Y,EAAeS,EAAkB,CACpC,CACT,CACA,CApCSljB,EAAAkd,GAAA,aCVT,MAAMiG,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,GAAW,CAAE,SAAAT,EAAW,IAAK,OAAAU,EAAS,IAAM,SAAAC,EAAW,EAAG,KAAAC,EAAO,GAAM,CAC5E,IAAIC,EACAC,EACJhK,GAAQkJ,GAAYM,GAAc,GAAkD,EACpF,IAAIS,EAAe,EAAIL,EAIvBK,EAAeld,GAAM0c,GAAYC,GAAYO,CAAY,EACzDf,EAAWnc,GAAMwc,GAAaC,GAAaN,EAAW,GAAI,EACtDe,EAAe,GAIfF,EAAW5jB,EAAC+jB,GAAiB,CACzB,MAAMC,EAAmBD,EAAeD,EAClCG,EAAQD,EAAmBjB,EAC3Bhd,EAAIie,EAAmBN,EACvB1d,EAAIke,GAAgBH,EAAcD,CAAY,EAC9Czb,EAAI,KAAK,IAAI,CAAC4b,CAAK,EACzB,OAAOd,GAAWpd,EAAIC,EAAKqC,CACvC,EAPmB,YAQXwb,EAAa7jB,EAAC+jB,GAAiB,CAE3B,MAAME,EADmBF,EAAeD,EACPf,EAC3BoB,EAAIF,EAAQP,EAAWA,EACvBpQ,EAAI,KAAK,IAAIwQ,EAAc,CAAC,EAAI,KAAK,IAAIC,EAAc,CAAC,EAAIhB,EAC5DqB,EAAI,KAAK,IAAI,CAACH,CAAK,EACnB,EAAIC,GAAgB,KAAK,IAAIH,EAAc,CAAC,EAAGD,CAAY,EAEjE,OADe,CAACF,EAASG,CAAY,EAAIZ,GAAU,EAAI,GAAK,KACzCgB,EAAI7Q,GAAK8Q,GAAM,CAC9C,EATqB,gBAebR,EAAW5jB,EAAC+jB,GAAiB,CACzB,MAAMhe,EAAI,KAAK,IAAI,CAACge,EAAehB,CAAQ,EACrC/c,GAAK+d,EAAeL,GAAYX,EAAW,EACjD,MAAO,CAACI,GAAUpd,EAAIC,CAClC,EAJmB,YAKX6d,EAAa7jB,EAAC+jB,GAAiB,CAC3B,MAAMhe,EAAI,KAAK,IAAI,CAACge,EAAehB,CAAQ,EACrC/c,GAAK0d,EAAWK,IAAiBhB,EAAWA,GAClD,OAAOhd,EAAIC,CACvB,EAJqB,eAMjB,MAAMqe,EAAe,EAAItB,EACnBgB,EAAeO,GAAgBV,EAAUC,EAAYQ,CAAY,EAEvE,GADAtB,EAAWA,EAAW,IAClB,MAAMgB,CAAY,EAClB,MAAO,CACH,UAAW,IACX,QAAS,GACT,SAAAhB,CACZ,EAES,CACD,MAAMwB,EAAY,KAAK,IAAIR,EAAc,CAAC,EAAIJ,EAC9C,MAAO,CACH,UAAAY,EACA,QAAST,EAAe,EAAI,KAAK,KAAKH,EAAOY,CAAS,EACtD,SAAAxB,CACZ,CACK,CACL,CAlES/iB,EAAAwjB,GAAA,cAmET,MAAMgB,GAAiB,GACvB,SAASF,GAAgBV,EAAUC,EAAYQ,EAAc,CACzD,IAAII,EAASJ,EACb,QAAS,EAAI,EAAG,EAAIG,GAAgB,IAChCC,EAASA,EAASb,EAASa,CAAM,EAAIZ,EAAWY,CAAM,EAE1D,OAAOA,CACX,CANSzkB,EAAAskB,GAAA,mBAOT,SAASJ,GAAgBH,EAAcD,EAAc,CACjD,OAAOC,EAAe,KAAK,KAAK,EAAID,EAAeA,CAAY,CACnE,CAFS9jB,EAAAkkB,GAAA,mBCjFT,MAAMQ,GAAe,CAAC,WAAY,QAAQ,EACpCC,GAAc,CAAC,YAAa,UAAW,MAAM,EACnD,SAASC,GAAarZ,EAASiD,EAAM,CACjC,OAAOA,EAAK,KAAM3L,GAAQ0I,EAAQ1I,KAAS,MAAS,CACxD,CAFS7C,EAAA4kB,GAAA,gBAGT,SAASC,GAAiBtZ,EAAS,CAC/B,IAAIuZ,EAAgB,CAChB,SAAU,EACV,UAAW,IACX,QAAS,GACT,KAAM,EACN,uBAAwB,GACxB,GAAGvZ,CACX,EAEI,GAAI,CAACqZ,GAAarZ,EAASoZ,EAAW,GAClCC,GAAarZ,EAASmZ,EAAY,EAAG,CACrC,MAAMK,EAAUvB,GAAWjY,CAAO,EAClCuZ,EAAgB,CACZ,GAAGA,EACH,GAAGC,EACH,SAAU,EACV,KAAM,CAClB,EACQD,EAAc,uBAAyB,EAC1C,CACD,OAAOA,CACX,CAtBS9kB,EAAA6kB,GAAA,oBA0BT,SAASG,GAAO,CAAE,KAAA9E,EAAO,EAAK,GAAAlD,EAAK,EAAK,UAAAiI,EAAY,EAAG,UAAAC,EAAY,OAAS3Z,CAAO,EAAI,CAKnF,MAAMF,EAAQ,CAAE,KAAM,GAAO,MAAO6U,CAAI,EACxC,GAAI,CAAE,UAAAqE,EAAW,QAAAY,EAAS,KAAAxB,EAAM,SAAAD,EAAU,SAAAX,EAAU,uBAAAqC,CAAyB,EAAGP,GAAiBtZ,CAAO,EACpG8Z,EAAgBC,GAChBC,EAAkBD,GACtB,SAASE,GAAe,CACpB,MAAMC,EAAkB/B,EAAW,EAAEA,EAAW,KAAQ,EAClDgC,EAAe1I,EAAKkD,EACpB4D,EAAeqB,GAAW,EAAI,KAAK,KAAKZ,EAAYZ,CAAI,GACxDgC,EAAsB,KAAK,KAAKpB,EAAYZ,CAAI,EAAI,IAQ1D,GAHIuB,IAAc,SACdA,EAAY,KAAK,IAAI,KAAK,IAAIlI,EAAKkD,CAAI,EAAI,IAAK,EAAG,GAEnD4D,EAAe,EAAG,CAClB,MAAM8B,EAAc1B,GAAgByB,EAAqB7B,CAAY,EAErEuB,EAAgBrlB,EAACmb,GAAM,CACnB,MAAMyI,EAAW,KAAK,IAAI,CAACE,EAAe6B,EAAsBxK,CAAC,EACjE,OAAQ6B,EACJ4G,IACO6B,EACC3B,EAAe6B,EAAsBD,GACrCE,EACA,KAAK,IAAIA,EAAczK,CAAC,EACxBuK,EAAe,KAAK,IAAIE,EAAczK,CAAC,EACnE,EAT4B,iBAUhBoK,EAAkBvlB,EAACmb,GAAM,CAErB,MAAMyI,EAAW,KAAK,IAAI,CAACE,EAAe6B,EAAsBxK,CAAC,EACjE,OAAQ2I,EACJ6B,EACA/B,GACE,KAAK,IAAIgC,EAAczK,CAAC,GACrBsK,EACG3B,EACI6B,EACAD,GACRE,EACAF,EAAe,KAAK,IAAIE,EAAczK,CAAC,GAC3CyI,GACK,KAAK,IAAIgC,EAAczK,CAAC,GACpBsK,EACG3B,EACI6B,EACAD,GACRE,EACIF,EACA,KAAK,IAAIE,EAAczK,CAAC,EACxD,EAtB8B,kBAuBrB,SACQ2I,IAAiB,EAEtBuB,EAAgBrlB,EAACmb,GAAM6B,EACnB,KAAK,IAAI,CAAC2I,EAAsBxK,CAAC,GAC5BuK,GACID,EAAkBE,EAAsBD,GACrCvK,GAJA,qBAMf,CAED,MAAM0K,EAAoBF,EAAsB,KAAK,KAAK7B,EAAeA,EAAe,CAAC,EACzFuB,EAAgBrlB,EAACmb,GAAM,CACnB,MAAMyI,EAAW,KAAK,IAAI,CAACE,EAAe6B,EAAsBxK,CAAC,EAE3D2K,EAAW,KAAK,IAAID,EAAoB1K,EAAG,GAAG,EACpD,OAAQ6B,EACH4G,IACK6B,EACE3B,EAAe6B,EAAsBD,GACrC,KAAK,KAAKI,CAAQ,EAClBD,EACIH,EACA,KAAK,KAAKI,CAAQ,GAC1BD,CACxB,EAb4B,gBAcnB,CACJ,CA3EQ,OAAA7lB,EAAAwlB,EAAA,gBA4ETA,IACO,CACH,KAAOrK,GAAM,CACT,MAAM4K,EAAUV,EAAclK,CAAC,EAC/B,GAAKiK,EAQD/Z,EAAM,KAAO8P,GAAK4H,MARO,CACzB,MAAMrS,EAAkB6U,EAAgBpK,CAAC,EAAI,IACvC6K,EAA2B,KAAK,IAAItV,CAAe,GAAKuU,EACxDgB,EAA+B,KAAK,IAAIjJ,EAAK+I,CAAO,GAAKb,EAC/D7Z,EAAM,KACF2a,GAA4BC,CACnC,CAID,OAAA5a,EAAM,MAAQA,EAAM,KAAO2R,EAAK+I,EACzB1a,CACV,EACD,WAAY,IAAM,CACdqY,EAAW,CAACA,EACZ,CAACxD,EAAMlD,CAAE,EAAI,CAACA,EAAIkD,CAAI,EACtBsF,GACH,CACT,CACA,CA5GSxlB,EAAAglB,GAAA,UA6GTA,GAAO,mBAAqB,CAACjf,EAAGC,IAAM,OAAOD,GAAM,UAAY,OAAOC,GAAM,SAC5E,MAAMsf,GAAOtlB,EAACkmB,GAAO,EAAR,QC/Ib,SAASC,GAAM,CAAE,SAAAzC,EAAW,EAAG,KAAAxD,EAAO,EAAG,MAAApE,EAAQ,GAAK,aAAAsK,EAAe,IAAK,UAAAlB,EAAY,GAAK,aAAAmB,CAAY,EAAK,CAKxG,MAAMhb,EAAQ,CAAE,KAAM,GAAO,MAAO6U,CAAI,EACxC,IAAIoG,EAAYxK,EAAQ4H,EACxB,MAAM6C,EAAQrG,EAAOoG,EACfja,EAASga,IAAiB,OAAYE,EAAQF,EAAaE,CAAK,EAKtE,OAAIla,IAAWka,IACXD,EAAYja,EAAS6T,GAClB,CACH,KAAO/E,GAAM,CACT,MAAM8I,EAAQ,CAACqC,EAAY,KAAK,IAAI,CAACnL,EAAIiL,CAAY,EACrD,OAAA/a,EAAM,KAAO,EAAE4Y,EAAQiB,GAAajB,EAAQ,CAACiB,GAC7C7Z,EAAM,MAAQA,EAAM,KAAOgB,EAASA,EAAS4X,EACtC5Y,CACV,EACD,WAAY,IAAM,CAAG,CAC7B,CACA,CAxBSrL,EAAAmmB,GAAA,SCMT,MAAMK,GAAQ,CAAE,MAAAL,GAAO,UAAAjJ,GAAW,OAAA8H,EAAM,EACxC,SAASyB,GAAYzG,EAAS+C,EAAUnD,EAAQ,EAAG,CAC/C,OAAOI,EAAU+C,EAAWnD,CAChC,CAFS5f,EAAAymB,GAAA,eAGT,SAASC,GAAe1G,EAAS+C,EAAW,EAAGnD,EAAQ,EAAG+G,EAAoB,GAAM,CAChF,OAAOA,EACDF,GAAY1D,EAAW,CAAC/C,EAAS+C,EAAUnD,CAAK,EAChDmD,GAAY/C,EAAU+C,GAAYnD,CAC5C,CAJS5f,EAAA0mB,GAAA,kBAKT,SAASE,GAAsB5G,EAAS+C,EAAUnD,EAAO+G,EAAmB,CACxE,OAAOA,EAAoB3G,GAAW+C,EAAWnD,EAAQI,GAAW,CAACJ,CACzE,CAFS5f,EAAA4mB,GAAA,yBAGT,MAAMC,GAAY7mB,EAAC8mB,GAAW,CAC1B,MAAMC,EAAgB/mB,EAAA,CAAC,CAAE,MAAAikB,CAAO,IAAK6C,EAAO7C,CAAK,EAA3B,iBACtB,MAAO,CACH,MAAO,IAAM/E,EAAK,OAAO6H,EAAe,EAAI,EAC5C,KAAM,IAAM1H,EAAW,OAAO0H,CAAa,CACnD,CACA,EANkB,aAOlB,SAAS5kB,GAAQ,CAAE,KAAA+d,EAAM,SAAA8G,EAAW,GAAM,OAAAC,EAASJ,GAAW,QAAA7G,EAAU,EAAG,OAAQkH,EAAY,EAAG,WAAAC,EAAa,OAAQ,YAAAC,EAAc,EAAG,OAAAC,EAAQ,OAAAC,EAAQ,WAAAC,EAAY,SAAAC,EAAU,SAAAC,EAAU,KAAA9gB,EAAO,eAAgB4E,CAAO,EAAI,CACtN,IAAI9B,EAAIC,EACR,GAAI,CAAE,GAAAsT,CAAI,EAAGzR,EACTmc,EACAC,EAAc,EACdC,EAAmBrc,EAClB,SACDwD,EACA8Y,EAAa,GACblB,EAAoB,GACpBmB,EACJ,MAAMC,EAAWvB,GAAM,MAAM,QAAQxJ,CAAE,EAAI,YAAcrW,GACpD,GAAA+C,GAAMD,EAAKse,GAAU,sBAAwB,MAAQre,IAAO,SAAkBA,EAAG,KAAKD,EAAIyW,EAAMlD,CAAE,IACnG8K,EAAwBzF,GAAY,CAAC,EAAG,GAAG,EAAG,CAACnC,EAAMlD,CAAE,EAAG,CACtD,MAAO,EACnB,CAAS,EACDkD,EAAO,EACPlD,EAAK,KAET,MAAMgL,EAAYD,EAAS,CAAE,GAAGxc,EAAS,KAAA2U,EAAM,GAAAlD,CAAE,CAAE,EACnD,SAASiL,GAAS,CACdN,IACIR,IAAe,WACfR,EAAoBgB,EAAc,IAAM,EACxC3H,EAAU0G,GAAe1G,EAAS4H,EAAkBR,EAAaT,CAAiB,IAGlF3G,EAAUyG,GAAYzG,EAAS4H,EAAkBR,CAAW,EACxDD,IAAe,UACfa,EAAU,WAAU,GAE5BH,EAAa,GACbL,GAAYA,EAAQ,CACvB,CAbQxnB,EAAAioB,EAAA,UAcT,SAASC,IAAW,CAChBR,EAAe,KAAI,EACnBH,GAAcA,EAAU,CAC3B,CAHQvnB,EAAAkoB,GAAA,YAIT,SAASpB,EAAO7C,GAAO,CAInB,GAHK0C,IACD1C,GAAQ,CAACA,IACbjE,GAAWiE,GACP,CAAC4D,EAAY,CACb,MAAMxc,GAAQ2c,EAAU,KAAK,KAAK,IAAI,EAAGhI,CAAO,CAAC,EACjDjR,EAAS1D,GAAM,MACXyc,IACA/Y,EAAS+Y,EAAsB/Y,CAAM,GACzC8Y,EAAalB,EAAoBtb,GAAM,KAAO2U,GAAW,CAC5D,CACDyH,GAAa,MAAuCA,EAAS1Y,CAAM,EAC/D8Y,IACIF,IAAgB,IAChBC,GAAqB,OAA0DA,EAAmB5H,IAClG2H,EAAcT,EACdN,GAAsB5G,EAAS4H,EAAkBR,EAAaT,CAAiB,GAAKsB,IAGpFC,KAGX,CAtBQloB,EAAA8mB,EAAA,UAuBT,SAASqB,IAAO,CACZd,GAAW,MAAqCA,IAChDK,EAAiBT,EAAOH,CAAM,EAC9BY,EAAe,MAAK,CACvB,CAJQ,OAAA1nB,EAAAmoB,GAAA,QAKTnB,GAAYmB,GAAI,EACT,CACH,KAAM,IAAM,CACRb,GAAW,MAAqCA,IAChDI,EAAe,KAAI,CACtB,CACT,CACA,CAzESvlB,EAAAA,GAAAA,aCnBT,SAASimB,GAAkB1E,EAAU2E,EAAe,CAChD,OAAOA,EAAgB3E,GAAY,IAAO2E,GAAiB,CAC/D,CAFSroB,EAAAooB,GAAA,qBCFT,SAASE,GAAQ,CAAE,KAAApI,EAAO,EAAG,SAAAwD,EAAW,EAAG,IAAA7c,EAAK,IAAAC,EAAK,MAAAgV,EAAQ,GAAK,aAAAsK,EAAe,IAAK,gBAAAmC,EAAkB,IAAK,cAAAC,EAAgB,GAAI,UAAAtD,EAAY,EAAG,aAAAmB,EAAc,OAAAY,EAAQ,SAAAQ,EAAU,WAAAF,EAAY,OAAAD,CAAM,EAAK,CACnM,IAAImB,EACJ,SAASC,EAAchnB,EAAG,CACtB,OAAQmF,IAAQ,QAAanF,EAAImF,GAASC,IAAQ,QAAapF,EAAIoF,CACtE,CAFQ9G,EAAA0oB,EAAA,iBAGT,SAASC,EAAgBjnB,EAAG,CACxB,OAAImF,IAAQ,OACDC,EACPA,IAAQ,QAEL,KAAK,IAAID,EAAMnF,CAAC,EAAI,KAAK,IAAIoF,EAAMpF,CAAC,EADhCmF,EAC0CC,CACxD,CANQ9G,EAAA2oB,EAAA,mBAOT,SAASC,EAAerd,EAAS,CAC7Bkd,GAAqB,MAA+CA,EAAiB,OACrFA,EAAmBtmB,GAAQ,CACvB,GAAGoJ,EACH,OAAA0b,EACA,SAAWvlB,GAAM,CACb,IAAI+H,EACJge,GAAa,MAAuCA,EAAS/lB,CAAC,GAC7D+H,EAAK8B,EAAQ,YAAc,MAAQ9B,IAAO,QAAkBA,EAAG,KAAK8B,EAAS7J,CAAC,CAClF,EACD,WAAA6lB,EACA,OAAAD,CACZ,CAAS,CACJ,CAbQtnB,EAAA4oB,EAAA,kBAcT,SAASC,EAAYtd,EAAS,CAC1Bqd,EAAe,CACX,KAAM,SACN,UAAWL,EACX,QAASC,EACT,UAAAtD,EACA,GAAG3Z,CACf,CAAS,CACJ,CACD,GATSvL,EAAA6oB,EAAA,eASLH,EAAcxI,CAAI,EAElB2I,EAAY,CAAE,KAAA3I,EAAM,SAAAwD,EAAU,GAAIiF,EAAgBzI,CAAI,CAAC,CAAE,MAExD,CASD,IAAI7T,EAASyP,EAAQ4H,EAAWxD,EAC5B,OAAOmG,EAAiB,MACxBha,EAASga,EAAaha,CAAM,GAChC,MAAMyc,EAAWH,EAAgBtc,CAAM,EACjC0c,EAAUD,IAAajiB,EAAM,GAAK,EACxC,IAAI4S,EACAsM,EACJ,MAAMiD,EAAgBhpB,EAAC0B,GAAM,CACzB+X,EAAOsM,EACPA,EAAUrkB,EACVgiB,EAAW0E,GAAkB1mB,EAAI+X,EAAMkG,GAAY,EAAG,KAAK,GACtDoJ,IAAY,GAAKrnB,EAAIonB,GACrBC,IAAY,IAAMrnB,EAAIonB,IACvBD,EAAY,CAAE,KAAMnnB,EAAG,GAAIonB,EAAU,SAAApF,CAAQ,CAAE,CAE/D,EAR8B,iBAStBkF,EAAe,CACX,KAAM,QACN,KAAA1I,EACA,SAAAwD,EACA,aAAA0C,EACA,MAAAtK,EACA,UAAAoJ,EACA,aAAAmB,EACA,SAAUqC,EAAcrc,CAAM,EAAI2c,EAAgB,MAC9D,CAAS,CACJ,CACD,MAAO,CACH,KAAM,IAAMP,GAAqB,KAAsC,OAASA,EAAiB,KAAM,CAC/G,CACA,CA9ESzoB,EAAAsoB,GAAA,WCaT,SAASW,GAAoB,CAAE,KAAAC,EAAM,MAAOC,EAAQ,cAAAC,EAAe,gBAAAC,EAAiB,iBAAAC,EAAkB,OAAArB,EAAQ,WAAAd,EAAY,YAAAC,EAAa,KAAAlH,KAASnO,CAAU,EAAI,CAC1J,MAAO,CAAC,CAAC,OAAO,KAAKA,CAAU,EAAE,MACrC,CAFS/R,EAAAipB,GAAA,uBAOT,SAASM,GAAoC,CAAE,KAAA3M,EAAM,MAAAqG,EAAO,KAAAuG,EAAM,KAAAC,EAAM,KAAAC,KAAS3X,GAAc,CAC3F,MAAMxG,EAAU,CAAE,GAAGwG,GACrB,OAAIkR,IACA1X,EAAQ,OAAY0X,GAIpBlR,EAAW,WACXxG,EAAQ,SAAcoO,GAAsB5H,EAAW,QAAQ,GAC/DA,EAAW,cACXxG,EAAQ,YAAcoO,GAAsB5H,EAAW,WAAW,GAIlE6K,IACArR,EAAQ,KAAUoR,GAAcC,CAAI,EAC9BA,EAAK,IAAIN,EAA0B,EACnCA,GAA2BM,CAAI,GAKrC7K,EAAW,OAAS,UACpBxG,EAAQ,KAAO,cAIfie,GAAQE,GAAQD,KAGZD,EACAje,EAAQ,WAAa,UAEhBme,EACLne,EAAQ,WAAa,OAEhBke,IACLle,EAAQ,WAAa,UAEzBA,EAAQ,OAASme,GAAQF,GAAQC,GAAQ1X,EAAW,QAOpDA,EAAW,OAAS,WACpBxG,EAAQ,KAAO,aACZA,CACX,CAjDSvL,EAAAupB,GAAA,uCAqDT,SAASI,GAAuB5X,EAAYlP,EAAK,CAC7C,IAAI4G,EAAIC,EAER,OAAQA,GAAMD,GADUmgB,GAAmB7X,EAAYlP,CAAG,GAAK,CAAA,GAC5B,SAAW,MAAQ4G,IAAO,OAASA,EAAKsI,EAAW,SAAW,MAAQrI,IAAO,OAASA,EAAK,CAClI,CAJS1J,EAAA2pB,GAAA,0BAKT,SAASE,GAAiBte,EAAS,CAC/B,OAAI,MAAM,QAAQA,EAAQ,EAAE,GAAKA,EAAQ,GAAG,KAAO,OAC/CA,EAAQ,GAAK,CAAC,GAAGA,EAAQ,EAAE,EAC3BA,EAAQ,GAAG,GAAKA,EAAQ,MAErBA,CACX,CANSvL,EAAA6pB,GAAA,oBAOT,SAASC,GAA6B/X,EAAYxG,EAAS1I,EAAK,CAC5D,OAAI,MAAM,QAAQ0I,EAAQ,EAAE,GAAKwG,EAAW,WAAa,SACrDA,EAAW,SAAW,IAE1B8X,GAAiBte,CAAO,EAInB0d,GAAoBlX,CAAU,IAC/BA,EAAa,CACT,GAAGA,EACH,GAAGqL,GAAqBva,EAAK0I,EAAQ,EAAE,CACnD,GAEW,CACH,GAAGA,EACH,GAAGge,GAAoCxX,CAAU,CACzD,CACA,CAlBS/R,EAAA8pB,GAAA,gCAsBT,SAASC,GAAalnB,EAAK+C,EAAOyG,EAAQ0F,EAAYwV,EAAY,CAC9D,MAAMyC,EAAkBJ,GAAmB7X,EAAYlP,CAAG,GAAK,CAAA,EAC/D,IAAI6K,EAASsc,EAAgB,OAAS,OAAYA,EAAgB,KAAOpkB,EAAM,MAC/E,MAAMqkB,EAAqBpN,GAAaha,EAAKwJ,CAAM,EAC/CqB,IAAW,QAAUuc,GAAsB,OAAO5d,GAAW,SAK7DqB,EAASjD,GAAkB5H,EAAKwJ,CAAM,EAEjC6d,GAAOxc,CAAM,GAAK,OAAOrB,GAAW,SACzCqB,EAASyc,GAAY9d,CAAM,EAEtB,CAAC,MAAM,QAAQA,CAAM,GAC1B6d,GAAO7d,CAAM,GACb,OAAOqB,GAAW,WAClBrB,EAAS8d,GAAYzc,CAAM,GAE/B,MAAM0c,EAAqBvN,GAAaha,EAAK6K,CAAM,EAEnD,SAASoS,GAAQ,CACb,MAAMvU,EAAU,CACZ,KAAMmC,EACN,GAAIrB,EACJ,SAAUzG,EAAM,YAAa,EAC7B,WAAA2hB,EACA,SAAW7lB,GAAMkE,EAAM,IAAIlE,CAAC,CACxC,EACQ,OAAOsoB,EAAgB,OAAS,WAC5BA,EAAgB,OAAS,QACvB1B,GAAQ,CAAE,GAAG/c,EAAS,GAAGye,CAAe,CAAE,EAC1C7nB,GAAQ,CACN,GAAG2nB,GAA6BE,EAAiBze,EAAS1I,CAAG,EAC7D,SAAWnB,GAAM,CACb6J,EAAQ,SAAS7J,CAAC,EAClBsoB,EAAgB,UAAYA,EAAgB,SAAStoB,CAAC,CACzD,EACD,WAAY,IAAM,CACd6J,EAAQ,WAAU,EAClBye,EAAgB,YAAcA,EAAgB,YACjD,CACjB,CAAa,CACR,CAtBQhqB,EAAA8f,EAAA,SAuBT,SAASuK,GAAM,CACX,MAAMC,EAAczZ,GAA6BxE,CAAM,EACvD,OAAAzG,EAAM,IAAI0kB,CAAW,EACrB/C,IACAyC,EAAgB,UAAYA,EAAgB,SAASM,CAAW,EAChEN,EAAgB,YAAcA,EAAgB,aACvC,CAAE,KAAM,IAAM,CAAA,EACxB,CAPQ,OAAAhqB,EAAAqqB,EAAA,OAQF,CAACD,GACJ,CAACH,GACDD,EAAgB,OAAS,GACvBK,EACAvK,CACV,CAzDS9f,EAAA+pB,GAAA,gBA0DT,SAASG,GAAOtkB,EAAO,CACnB,OAAQA,IAAU,GACb,OAAOA,GAAU,UACd,WAAWA,CAAK,IAAM,GACtBA,EAAM,QAAQ,GAAG,IAAM,EACnC,CALS5F,EAAAkqB,GAAA,UAMT,SAASC,GAAYI,EAAmB,CACpC,OAAO,OAAOA,GAAsB,SAC9B,EACA9f,GAAkB,GAAI8f,CAAiB,CACjD,CAJSvqB,EAAAmqB,GAAA,eAKT,SAASP,GAAmB7X,EAAYlP,EAAK,CACzC,OAAOkP,EAAWlP,IAAQkP,EAAW,SAAcA,CACvD,CAFS/R,EAAA4pB,GAAA,sBAOT,SAAShB,GAAe/lB,EAAK+C,EAAOyG,EAAQ0F,EAAa,CAAA,EAAI,CACzD,OAAI2L,GAAsB,UACtB3L,EAAa,CAAE,KAAM,KAElBnM,EAAM,MAAO2hB,GAAe,CAC/B,IAAIiD,EACJ,MAAMxC,EAAY+B,GAAalnB,EAAK+C,EAAOyG,EAAQ0F,EAAYwV,CAAU,EACnEkD,EAAUd,GAAuB5X,EAAYlP,CAAG,EAChDid,EAAQ9f,EAAA,IAAOwqB,EAAWxC,EAAW,EAA7B,SACd,IAAI0C,EACJ,OAAID,EACAC,EAAc9K,GAAME,EAAOnG,GAAsB8Q,CAAO,CAAC,EAGzD3K,IAEG,IAAM,CACT4K,GAAeA,EAAW,EAC1BF,GAAYA,EAAS,MACjC,CACA,CAAK,CACL,CArBSxqB,EAAA4oB,GAAA,kBCxLT,MAAM+B,GAAoB3qB,EAAC0B,GAAM,iBAAiB,KAAKA,CAAC,EAA9B,qBCApBkpB,GAAoB5qB,EAAC0B,GAAM,aAAa,KAAKA,CAAC,EAA1B,qBCH1B,SAASmpB,GAAcC,EAAKC,EAAM,CAC1BD,EAAI,QAAQC,CAAI,IAAM,IACtBD,EAAI,KAAKC,CAAI,CACrB,CAHS/qB,EAAA6qB,GAAA,iBAIT,SAASG,GAAWF,EAAKC,EAAM,CAC3B,MAAM9Y,EAAQ6Y,EAAI,QAAQC,CAAI,EAC1B9Y,EAAQ,IACR6Y,EAAI,OAAO7Y,EAAO,CAAC,CAC3B,CAJSjS,EAAAgrB,GAAA,cCFT,MAAMC,EAAoB,CACtB,aAAc,CACV,KAAK,cAAgB,EACxB,CACD,IAAIzY,EAAS,CACT,OAAAqY,GAAc,KAAK,cAAerY,CAAO,EAClC,IAAMwY,GAAW,KAAK,cAAexY,CAAO,CACtD,CACD,OAAOzM,EAAGC,EAAGqC,EAAG,CACZ,MAAM6iB,EAAmB,KAAK,cAAc,OAC5C,GAAI,EAACA,EAEL,GAAIA,IAAqB,EAIrB,KAAK,cAAc,GAAGnlB,EAAGC,EAAGqC,CAAC,MAG7B,SAASkC,EAAI,EAAGA,EAAI2gB,EAAkB3gB,IAAK,CAKvC,MAAMiI,EAAU,KAAK,cAAcjI,GACnCiI,GAAWA,EAAQzM,EAAGC,EAAGqC,CAAC,CAC7B,CAER,CACD,SAAU,CACN,OAAO,KAAK,cAAc,MAC7B,CACD,OAAQ,CACJ,KAAK,cAAc,OAAS,CAC/B,CACL,CAnCMrI,EAAAirB,GAAA,uBCEN,MAAME,GAAUnrB,EAAC4F,GACN,CAAC,MAAM,WAAWA,CAAK,CAAC,EADnB,WAQhB,MAAMwlB,EAAY,CASd,YAAYroB,EAAM,CAKd,KAAK,QAAU,SAMf,KAAK,UAAY,EAMjB,KAAK,YAAc,EAMnB,KAAK,kBAAoB,IAAIkoB,GAM7B,KAAK,0BAA4B,IAAIA,GAMrC,KAAK,kBAAoB,IAAIA,GAQ7B,KAAK,iBAAmB,GACxB,KAAK,gBAAkB,CAACvpB,EAAG2pB,EAAS,KAAS,CACzC,KAAK,KAAO,KAAK,QACjB,KAAK,QAAU3pB,EAEf,KAAM,CAAE,MAAAuiB,EAAO,UAAAvE,CAAW,EAAGC,GAAY,EACrC,KAAK,cAAgBD,IACrB,KAAK,UAAYuE,EACjB,KAAK,YAAcvE,EACnBR,EAAK,WAAW,KAAK,qBAAqB,GAG1C,KAAK,OAAS,KAAK,SACnB,KAAK,kBAAkB,OAAO,KAAK,OAAO,EAG1C,KAAK,0BAA0B,WAC/B,KAAK,0BAA0B,OAAO,KAAK,YAAa,CAAA,EAGxDmM,GACA,KAAK,kBAAkB,OAAO,KAAK,OAAO,CAE1D,EASQ,KAAK,sBAAwB,IAAMnM,EAAK,WAAW,KAAK,aAAa,EAUrE,KAAK,cAAgB,CAAC,CAAE,UAAAQ,KAAgB,CAChCA,IAAc,KAAK,cACnB,KAAK,KAAO,KAAK,QACjB,KAAK,0BAA0B,OAAO,KAAK,YAAa,CAAA,EAExE,EACQ,KAAK,YAAc,GACnB,KAAK,KAAO,KAAK,QAAU3c,EAC3B,KAAK,iBAAmBooB,GAAQ,KAAK,OAAO,CAC/C,CAiDD,SAASG,EAAc,CACnB,OAAO,KAAK,kBAAkB,IAAIA,CAAY,CACjD,CACD,gBAAiB,CACb,KAAK,kBAAkB,OAC1B,CASD,gBAAgBA,EAAc,CAE1B,OAAAA,EAAa,KAAK,IAAG,CAAE,EAChB,KAAK,kBAAkB,IAAIA,CAAY,CACjD,CAMD,OAAOC,EAAe,CAClB,KAAK,cAAgBA,CACxB,CAgBD,IAAI7pB,EAAG2pB,EAAS,GAAM,CACd,CAACA,GAAU,CAAC,KAAK,cACjB,KAAK,gBAAgB3pB,EAAG2pB,CAAM,EAG9B,KAAK,cAAc3pB,EAAG,KAAK,eAAe,CAEjD,CAQD,KAAM,CACF,OAAO,KAAK,OACf,CAID,aAAc,CACV,OAAO,KAAK,IACf,CAQD,aAAc,CAEV,OAAO,KAAK,iBAEJ0mB,GAAkB,WAAW,KAAK,OAAO,EACrC,WAAW,KAAK,IAAI,EAAG,KAAK,SAAS,EAC3C,CACT,CAaD,MAAMJ,EAAW,CACb,YAAK,KAAI,EACF,IAAI,QAASwD,GAAY,CAC5B,KAAK,YAAc,GACnB,KAAK,cAAgBxD,EAAUwD,CAAO,CACzC,CAAA,EAAE,KAAK,IAAM,KAAK,eAAgB,CAAA,CACtC,CAMD,MAAO,CACC,KAAK,eACL,KAAK,cAAa,EACtB,KAAK,eAAc,CACtB,CAMD,aAAc,CACV,MAAO,CAAC,CAAC,KAAK,aACjB,CACD,gBAAiB,CACb,KAAK,cAAgB,IACxB,CAUD,SAAU,CACN,KAAK,kBAAkB,QACvB,KAAK,kBAAkB,QACvB,KAAK,KAAI,CACZ,CACL,CA/RMxrB,EAAAorB,GAAA,eAgSN,SAASK,GAAY1oB,EAAM,CACvB,OAAO,IAAIqoB,GAAYroB,CAAI,CAC/B,CAFS/C,EAAAyrB,GAAA,eCzST,MAAMC,GAAgB1rB,EAAC0B,GAAOiF,GAASA,EAAK,KAAKjF,CAAC,EAA5B,iBCAhBiqB,GAAO,CACT,KAAOjqB,GAAMA,IAAM,OACnB,MAAQA,GAAMA,CAClB,ECCMkqB,GAAsB,CAACxkB,EAAQO,EAAID,EAASD,EAASI,GAAID,GAAI+jB,EAAI,EAIjEE,GAAyB7rB,EAAC0B,GAAMkqB,GAAoB,KAAKF,GAAchqB,CAAC,CAAC,EAAhD,0BCJzBoqB,GAAa,CAAC,GAAGF,GAAqBviB,EAAOsB,CAAO,EAIpDohB,GAAgB/rB,EAAC0B,GAAMoqB,GAAW,KAAKJ,GAAchqB,CAAC,CAAC,EAAvC,iBCNtB,SAASsqB,GAAW9qB,EAAe,CAC/B,MAAM6kB,EAAU,CAAA,EAChB,OAAA7kB,EAAc,OAAO,QAAQ,CAAC0E,EAAO/C,IAASkjB,EAAQljB,GAAO+C,EAAM,IAAG,CAAG,EAClEmgB,CACX,CAJS/lB,EAAAgsB,GAAA,cAQT,SAASC,GAAY/qB,EAAe,CAChC,MAAMwiB,EAAW,CAAA,EACjB,OAAAxiB,EAAc,OAAO,QAAQ,CAAC0E,EAAO/C,IAAS6gB,EAAS7gB,GAAO+C,EAAM,YAAW,CAAG,EAC3E8d,CACX,CAJSuI,EAAAA,GAAAA,iBAKT,SAASC,GAAehrB,EAAesP,EAAY1L,EAAQ,CACvD,MAAMpE,EAAQQ,EAAc,WAC5B,OAAOqP,GAAwB7P,EAAO8P,EAAY1L,IAAW,OAAYA,EAASpE,EAAM,OAAQsrB,GAAW9qB,CAAa,EAAG+qB,GAAY/qB,CAAa,CAAC,CACzJ,CAHSlB,EAAAksB,GAAA,kBCLT,SAASC,GAAejrB,EAAe2B,EAAK+C,EAAO,CAC3C1E,EAAc,SAAS2B,CAAG,EAC1B3B,EAAc,SAAS2B,CAAG,EAAE,IAAI+C,CAAK,EAGrC1E,EAAc,SAAS2B,EAAK4oB,GAAY7lB,CAAK,CAAC,CAEtD,CAPS5F,EAAAmsB,GAAA,kBAQT,SAASC,GAAUlrB,EAAesP,EAAY,CAC1C,MAAMqB,EAAWqa,GAAehrB,EAAesP,CAAU,EACzD,GAAI,CAAE,cAAAsB,EAAgB,CAAA,EAAI,WAAAC,EAAa,CAAA,KAAO1F,CAAM,EAAKwF,EAAW3Q,EAAc,qBAAqB2Q,EAAU,EAAK,EAAI,CAAA,EAC1HxF,EAAS,CAAE,GAAGA,EAAQ,GAAGyF,CAAa,EACtC,UAAWjP,KAAOwJ,EAAQ,CACtB,MAAMzG,EAAQiL,GAA6BxE,EAAOxJ,EAAI,EACtDspB,GAAejrB,EAAe2B,EAAK+C,CAAK,CAC3C,CACL,CARS5F,EAAAosB,GAAA,aA+BT,SAASC,GAAwBnrB,EAAemL,EAAQqB,EAAQ,CAC5D,IAAIjE,EAAIC,EACR,MAAM4iB,EAAe,OAAO,KAAKjgB,CAAM,EAAE,OAAQxJ,GAAQ,CAAC3B,EAAc,SAAS2B,CAAG,CAAC,EAC/E0pB,EAAeD,EAAa,OAClC,GAAI,EAACC,EAEL,QAAShiB,EAAI,EAAGA,EAAIgiB,EAAchiB,IAAK,CACnC,MAAM1H,EAAMypB,EAAa/hB,GACnBiiB,EAAcngB,EAAOxJ,GAC3B,IAAI+C,EAAQ,KAKR,MAAM,QAAQ4mB,CAAW,IACzB5mB,EAAQ4mB,EAAY,IAOpB5mB,IAAU,OACVA,GAAS8D,GAAMD,EAAKiE,EAAO7K,MAAU,MAAQ4G,IAAO,OAASA,EAAKvI,EAAc,UAAU2B,CAAG,KAAO,MAAQ6G,IAAO,OAASA,EAAK2C,EAAOxJ,IAMjH+C,GAAU,OAEjC,OAAOA,GAAU,WAChB+kB,GAAkB/kB,CAAK,GAAKglB,GAAkBhlB,CAAK,GAEpDA,EAAQ,WAAWA,CAAK,EAEnB,CAACmmB,GAAcnmB,CAAK,GAAK+E,EAAQ,KAAK6hB,CAAW,IACtD5mB,EAAQ6E,GAAkB5H,EAAK2pB,CAAW,GAE9CtrB,EAAc,SAAS2B,EAAK4oB,GAAY7lB,CAAK,CAAC,EAC1C8H,EAAO7K,KAAS,SAChB6K,EAAO7K,GAAO+C,GAEdA,IAAU,MACV1E,EAAc,cAAc2B,EAAK+C,CAAK,EAC7C,CACL,CA9CS5F,EAAAqsB,GAAA,2BA+CT,SAASI,GAAwB5pB,EAAKkP,EAAY,CAC9C,OAAKA,GAEmBA,EAAWlP,IAAQkP,EAAW,SAAcA,GAC7C,KAFnB,MAGR,CALS/R,EAAAysB,GAAA,2BAMT,SAASC,GAAUrgB,EAAQ0F,EAAY7Q,EAAe,CAClD,IAAIuI,EACJ,MAAMiE,EAAS,CAAA,EACf,UAAW7K,KAAOwJ,EAAQ,CACtB,MAAMsgB,EAAmBF,GAAwB5pB,EAAKkP,CAAU,EAChErE,EAAO7K,GACH8pB,IAAqB,OACfA,GACCljB,EAAKvI,EAAc,SAAS2B,CAAG,KAAO,MAAQ4G,IAAO,OAAS,OAASA,EAAG,IAAG,CAC3F,CACD,OAAOiE,CACX,CAXS1N,EAAA0sB,GAAA,aCvGT,SAASE,GAAwBhnB,EAAO,CACpC,OAAO,QAAQD,EAAcC,CAAK,GAAKA,EAAM,GAAG,CACpD,CAFS5F,EAAA4sB,GAAA,2BCIT,SAASC,GAAqB3rB,EAAesP,EAAYjF,EAAU,CAAA,EAAI,CACnErK,EAAc,OAAO,iBAAkBsP,CAAU,EACjD,IAAIwX,EACJ,GAAI,MAAM,QAAQxX,CAAU,EAAG,CAC3B,MAAMsc,EAAatc,EAAW,IAAKuc,GAAYC,GAAe9rB,EAAe6rB,EAASxhB,CAAO,CAAC,EAC9Fyc,EAAY,QAAQ,IAAI8E,CAAU,CACrC,SACQ,OAAOtc,GAAe,SAC3BwX,EAAYgF,GAAe9rB,EAAesP,EAAYjF,CAAO,MAE5D,CACD,MAAM0hB,EAAqB,OAAOzc,GAAe,WAC3C0b,GAAehrB,EAAesP,EAAYjF,EAAQ,MAAM,EACxDiF,EACNwX,EAAYkF,GAAchsB,EAAe+rB,EAAoB1hB,CAAO,CACvE,CACD,OAAOyc,EAAU,KAAK,IAAM9mB,EAAc,OAAO,oBAAqBsP,CAAU,CAAC,CACrF,CAjBSxQ,EAAA6sB,GAAA,wBAkBT,SAASG,GAAe9rB,EAAe6rB,EAASxhB,EAAU,CAAA,EAAI,CAC1D,IAAI9B,EACJ,MAAMoI,EAAWqa,GAAehrB,EAAe6rB,EAASxhB,EAAQ,MAAM,EACtE,GAAI,CAAE,WAAAwG,EAAa7Q,EAAc,qBAAsB,GAAI,EAAI,EAAG2Q,GAAY,GAC1EtG,EAAQ,qBACRwG,EAAaxG,EAAQ,oBAMzB,MAAMwe,EAAelY,EACf,IAAMqb,GAAchsB,EAAe2Q,EAAUtG,CAAO,EACpD,IAAM,QAAQ,UAKd4hB,EAAuB,GAAA1jB,EAAKvI,EAAc,mBAAqB,MAAQuI,IAAO,SAAkBA,EAAG,KACnG,CAAC2jB,EAAe,IAAM,CACpB,KAAM,CAAE,cAAAhE,EAAgB,EAAG,gBAAAC,EAAiB,iBAAAC,CAAgB,EAAMvX,EAClE,OAAOsb,GAAgBnsB,EAAe6rB,EAAS3D,EAAgBgE,EAAc/D,EAAiBC,EAAkB/d,CAAO,CAC1H,EACC,IAAM,QAAQ,UAKd,CAAE,KAAA2d,CAAM,EAAGnX,EACjB,GAAImX,EAAM,CACN,KAAM,CAACoE,EAAOC,CAAI,EAAIrE,IAAS,iBACzB,CAACa,EAAcoD,CAAkB,EACjC,CAACA,EAAoBpD,CAAY,EACvC,OAAOuD,EAAO,EAAC,KAAKC,CAAI,CAC3B,KAEG,QAAO,QAAQ,IAAI,CAACxD,EAAY,EAAIoD,EAAmB5hB,EAAQ,KAAK,CAAC,CAAC,CAE9E,CAtCSvL,EAAAgtB,GAAA,kBA0CT,SAASE,GAAchsB,EAAesP,EAAY,CAAE,MAAAoP,EAAQ,EAAG,mBAAA4N,EAAoB,KAAA7mB,CAAM,EAAG,GAAI,CAC5F,IAAI8C,EACJ,GAAI,CAAE,WAAAsI,EAAa7Q,EAAc,uBAAwB,cAAA4Q,KAAkBzF,GAAWnL,EAAc,qBAAqBsP,CAAU,EACnI,MAAMid,EAAavsB,EAAc,SAAS,YAAY,EAClDssB,IACAzb,EAAayb,GACjB,MAAMV,EAAa,CAAA,EACbY,EAAqB/mB,KAAU8C,EAAKvI,EAAc,kBAAoB,MAAQuI,IAAO,OAAS,OAASA,EAAG,SAAU,EAAC9C,IAC3H,UAAW9D,KAAOwJ,EAAQ,CACtB,MAAMzG,EAAQ1E,EAAc,SAAS2B,CAAG,EAClCmP,EAAc3F,EAAOxJ,GAC3B,GAAI,CAAC+C,GACDoM,IAAgB,QACf0b,GACGC,GAAqBD,EAAoB7qB,CAAG,EAChD,SAEJ,IAAImnB,EAAkB,CAAE,MAAApK,EAAO,GAAG7N,CAAU,EAIxC7Q,EAAc,oBAAsBsE,GAAe,IAAI3C,CAAG,IAC1DmnB,EAAkB,CACd,GAAGA,EACH,KAAM,GACN,MAAO,CACvB,GAEQ,IAAIhC,EAAYY,GAAe/lB,EAAK+C,EAAOoM,EAAagY,CAAe,EACnE4C,GAAwBa,CAAU,IAClCA,EAAW,IAAI5qB,CAAG,EAClBmlB,EAAYA,EAAU,KAAK,IAAMyF,EAAW,OAAO5qB,CAAG,CAAC,GAE3DiqB,EAAW,KAAK9E,CAAS,CAC5B,CACD,OAAO,QAAQ,IAAI8E,CAAU,EAAE,KAAK,IAAM,CACtChb,GAAiBsa,GAAUlrB,EAAe4Q,CAAa,CAC/D,CAAK,CACL,CAtCS9R,EAAAktB,GAAA,iBAuCT,SAASG,GAAgBnsB,EAAe6rB,EAAS3D,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAG/d,EAAS,CACpH,MAAMuhB,EAAa,CAAA,EACbc,GAAsB1sB,EAAc,gBAAgB,KAAO,GAAKmoB,EAChEwE,EAA0BvE,IAAqB,EAC/C,CAAC/e,EAAI,IAAMA,EAAI8e,EACf,CAAC9e,EAAI,IAAMqjB,EAAqBrjB,EAAI8e,EAC1C,aAAM,KAAKnoB,EAAc,eAAe,EACnC,KAAK4sB,EAAe,EACpB,QAAQ,CAACpY,EAAOnL,IAAM,CACvBuiB,EAAW,KAAKE,GAAetX,EAAOqX,EAAS,CAC3C,GAAGxhB,EACH,MAAO6d,EAAgByE,EAAwBtjB,CAAC,CAC5D,CAAS,EAAE,KAAK,IAAMmL,EAAM,OAAO,oBAAqBqX,CAAO,CAAC,CAAC,CACjE,CAAK,EACM,QAAQ,IAAID,CAAU,CACjC,CAfS9sB,EAAAqtB,GAAA,mBAmBT,SAASS,GAAgB/nB,EAAGC,EAAG,CAC3B,OAAOD,EAAE,iBAAiBC,CAAC,CAC/B,CAFShG,EAAA8tB,GAAA,mBAST,SAASH,GAAqB,CAAE,cAAAI,EAAe,eAAAC,CAAc,EAAInrB,EAAK,CAClE,MAAMorB,EAAcF,EAAc,eAAelrB,CAAG,GAAKmrB,EAAenrB,KAAS,GACjF,OAAAmrB,EAAenrB,GAAO,GACforB,CACX,CAJSjuB,EAAA2tB,GAAA,wBC7HT,MAAMO,GAAuB,CACzB7b,EAAc,QACdA,EAAc,OACdA,EAAc,MACdA,EAAc,MACdA,EAAc,IACdA,EAAc,KACdA,EAAc,IAClB,EACM8b,GAAuB,CAAC,GAAGD,EAAoB,EAAE,QAAO,EACxDE,GAAoBF,GAAqB,OAC/C,SAASG,GAAYntB,EAAe,CAChC,OAAQ4rB,GAAe,QAAQ,IAAIA,EAAW,IAAI,CAAC,CAAE,UAAA9E,EAAW,QAAAzc,CAAO,IAAOshB,GAAqB3rB,EAAe8mB,EAAWzc,CAAO,CAAC,CAAC,CAC1I,CAFSvL,EAAAquB,GAAA,eAGT,SAASC,GAAqBptB,EAAe,CACzC,IAAIiB,EAAUksB,GAAYntB,CAAa,EACvC,MAAMmK,EAAQkjB,KACd,IAAIC,EAAkB,GAKtB,MAAMC,EAA0BzuB,EAAA,CAACif,EAAKzO,IAAe,CACjD,MAAMqB,EAAWqa,GAAehrB,EAAesP,CAAU,EACzD,GAAIqB,EAAU,CACV,KAAM,CAAE,WAAAE,EAAY,cAAAD,KAAkBzF,CAAM,EAAKwF,EACjDoN,EAAM,CAAE,GAAGA,EAAK,GAAG5S,EAAQ,GAAGyF,CAAa,CAC9C,CACD,OAAOmN,CACf,EAPoC,2BAYhC,SAASyP,EAAmBC,EAAc,CACtCxsB,EAAUwsB,EAAaztB,CAAa,CACvC,CAFQlB,EAAA0uB,EAAA,sBAaT,SAASE,EAAerjB,EAASsjB,EAAmB,CAChD,IAAIplB,EACJ,MAAM/I,EAAQQ,EAAc,WACtBe,EAAUf,EAAc,kBAAkB,EAAI,GAAK,CAAA,EAKnD4rB,EAAa,CAAA,EAKbgC,EAAc,IAAI,IAMxB,IAAIC,EAAkB,CAAA,EAKlBC,EAAsB,IAO1B,QAASzkB,EAAI,EAAGA,EAAI6jB,GAAmB7jB,IAAK,CACxC,MAAM5D,EAAOwnB,GAAqB5jB,GAC5B0kB,EAAY5jB,EAAM1E,GAClBpE,GAAQkH,EAAK/I,EAAMiG,MAAW,MAAQ8C,IAAO,OAASA,EAAKxH,EAAQ0E,GACnEuoB,EAAgBztB,GAAec,CAAI,EAKnC4sB,EAAcxoB,IAASkoB,EAAoBI,EAAU,SAAW,KAClEE,IAAgB,KAChBH,EAAsBzkB,GAO1B,IAAI6kB,EAAc7sB,IAASN,EAAQ0E,IAASpE,IAAS7B,EAAMiG,IAASuoB,EAepE,GAXIE,GACAZ,GACAttB,EAAc,yBACdkuB,EAAc,IAMlBH,EAAU,cAAgB,CAAE,GAAGF,GAI9B,CAACE,EAAU,UAAYE,IAAgB,MAEnC,CAAC5sB,GAAQ,CAAC0sB,EAAU,UAErBttB,GAAoBY,CAAI,GACxB,OAAOA,GAAS,UAChB,SAOJ,MAAM8sB,EAAmBC,GAAuBL,EAAU,SAAU1sB,CAAI,EACxE,IAAIgtB,EAAoBF,GAEnB1oB,IAASkoB,GACNI,EAAU,UACV,CAACG,GACDF,GAEH3kB,EAAIykB,GAAuBE,EAKhC,MAAMM,GAAiB,MAAM,QAAQjtB,CAAI,EAAIA,EAAO,CAACA,CAAI,EAKzD,IAAIktB,EAAiBD,GAAe,OAAOf,EAAyB,CAAE,CAAA,EAClEU,IAAgB,KAChBM,EAAiB,CAAA,GAUrB,KAAM,CAAE,mBAAAC,GAAqB,EAAI,EAAGT,EAC9BU,GAAU,CACZ,GAAGD,GACH,GAAGD,CACnB,EACkBG,GAAgB5vB,EAAC6C,GAAQ,CAC3B0sB,EAAoB,GACpBT,EAAY,OAAOjsB,CAAG,EACtBosB,EAAU,eAAepsB,GAAO,EAChD,EAJkC,iBAKtB,UAAWA,KAAO8sB,GAAS,CACvB,MAAMnW,GAAOiW,EAAe5sB,GACtB4W,GAAOiW,GAAmB7sB,GAE5BksB,EAAgB,eAAelsB,CAAG,IAKlC2W,KAASC,GAKL9I,GAAkB6I,EAAI,GAAK7I,GAAkB8I,EAAI,EAC7C,CAACF,GAAeC,GAAMC,EAAI,GAAK4V,EAC/BO,GAAc/sB,CAAG,EAOjBosB,EAAU,cAAcpsB,GAAO,GAG9B2W,KAAS,OAEdoW,GAAc/sB,CAAG,EAIjBisB,EAAY,IAAIjsB,CAAG,EAGlB2W,KAAS,QAAasV,EAAY,IAAIjsB,CAAG,EAK9C+sB,GAAc/sB,CAAG,EAOjBosB,EAAU,cAAcpsB,GAAO,GAEtC,CAKDosB,EAAU,SAAW1sB,EACrB0sB,EAAU,mBAAqBQ,EAI3BR,EAAU,WACVF,EAAkB,CAAE,GAAGA,EAAiB,GAAGU,CAAc,GAEzDjB,GAAmBttB,EAAc,wBACjCquB,EAAoB,IAOpBA,GAAqB,CAACH,GACtBtC,EAAW,KAAK,GAAG0C,GAAe,IAAKxH,IAAe,CAClD,UAAWA,EACX,QAAS,CAAE,KAAArhB,EAAM,GAAG4E,CAAS,CAChC,EAAC,CAAC,CAEV,CAMD,GAAIujB,EAAY,KAAM,CAClB,MAAMe,EAAoB,CAAA,EAC1Bf,EAAY,QAASjsB,GAAQ,CACzB,MAAMitB,EAAiB5uB,EAAc,cAAc2B,CAAG,EAClDitB,IAAmB,SACnBD,EAAkBhtB,GAAOitB,EAE7C,CAAa,EACDhD,EAAW,KAAK,CAAE,UAAW+C,CAAmB,CAAA,CACnD,CACD,IAAIE,EAAgB,QAAQjD,EAAW,MAAM,EAC7C,OAAI0B,GACA9tB,EAAM,UAAY,IAClB,CAACQ,EAAc,yBACf6uB,EAAgB,IAEpBvB,EAAkB,GACXuB,EAAgB5tB,EAAQ2qB,CAAU,EAAI,QAAQ,QAAO,CAC/D,CA3NQ9sB,EAAA4uB,EAAA,kBA+NT,SAASoB,EAAUrpB,EAAMuO,EAAU3J,EAAS,CACxC,IAAI9B,EAEJ,GAAI4B,EAAM1E,GAAM,WAAauO,EACzB,OAAO,QAAQ,WAElBzL,EAAKvI,EAAc,mBAAqB,MAAQuI,IAAO,QAAkBA,EAAG,QAASiM,GAAU,CAAE,IAAIjM,EAAI,OAAQA,EAAKiM,EAAM,kBAAoB,MAAQjM,IAAO,OAAS,OAASA,EAAG,UAAU9C,EAAMuO,CAAQ,CAAI,CAAA,EACjN7J,EAAM1E,GAAM,SAAWuO,EACvB,MAAM4X,EAAa8B,EAAerjB,EAAS5E,CAAI,EAC/C,UAAW9D,KAAOwI,EACdA,EAAMxI,GAAK,cAAgB,GAE/B,OAAOiqB,CACV,CAbQ,OAAA9sB,EAAAgwB,EAAA,aAcF,CACH,eAAApB,EACA,UAAAoB,EACA,mBAAAtB,EACA,SAAU,IAAMrjB,CACxB,CACA,CApRSrL,EAAAsuB,GAAA,wBAqRT,SAASgB,GAAuB7V,EAAMD,EAAM,CACxC,OAAI,OAAOA,GAAS,SACTA,IAASC,EAEX,MAAM,QAAQD,CAAI,EAChB,CAACD,GAAeC,EAAMC,CAAI,EAE9B,EACX,CARSzZ,EAAAsvB,GAAA,0BAST,SAASW,EAAgB/a,EAAW,GAAO,CACvC,MAAO,CACH,SAAAA,EACA,cAAe,CAAE,EACjB,eAAgB,CAAE,EAClB,mBAAoB,CAAE,CAC9B,CACA,CAPSlV,EAAAiwB,EAAA,mBAQT,SAAS1B,IAAc,CACnB,MAAO,CACH,CAAClc,EAAc,SAAU4d,EAAgB,EAAI,EAC7C,CAAC5d,EAAc,QAAS4d,EAAiB,EACzC,CAAC5d,EAAc,OAAQ4d,EAAiB,EACxC,CAAC5d,EAAc,KAAM4d,EAAiB,EACtC,CAAC5d,EAAc,MAAO4d,EAAiB,EACvC,CAAC5d,EAAc,OAAQ4d,EAAiB,EACxC,CAAC5d,EAAc,MAAO4d,EAAiB,CAC/C,CACA,CAVSjwB,EAAAuuB,GAAA,eCpTT,MAAMzB,GAAa,CACf,UAAWhU,EAAwB,CAAC,CAAE,cAAA5X,EAAe,QAAAiB,CAAO,IAAO,CAM/DjB,EAAc,iBAAmBA,EAAc,eAAiBotB,GAAqBptB,CAAa,GAI9FS,GAAoBQ,CAAO,GAC3B9B,EAAS,QAAA,UAAC,IAAM8B,EAAQ,UAAUjB,CAAa,EAAG,CAACiB,CAAO,CAAC,CAEvE,CAAK,EACD,KAAM2W,EAAyBpY,GAAU,CACrC,KAAM,CAAE,OAAAoE,EAAQ,cAAA5D,CAAe,EAAGR,EAC5B,CAACwY,EAAWgX,CAAY,EAAIjX,GAAW,EACvCnY,EAAkBf,qBAAWE,EAAe,EAClDI,EAAAA,QAAAA,UAAU,IAAM,CACZa,EAAc,UAAYgY,EAC1B,MAAM8O,EAAY9mB,EAAc,gBAC5BA,EAAc,eAAe,UAAUmR,EAAc,KAAM,CAAC6G,EAAW,CACnE,OAASpY,GAAmBA,EAAgB,QACxCgE,CACxB,CAAiB,EACDkjB,GAAa,CAAC9O,GACd8O,EAAU,KAAKkI,CAAY,CAE3C,EAAW,CAAChX,CAAS,CAAC,CACtB,CAAK,CACL,ECvCMiX,GAAWnwB,EAAA,CAAC+F,EAAGC,IAAM,KAAK,IAAID,EAAIC,CAAC,EAAxB,YACjB,SAASoqB,GAAWrqB,EAAGC,EAAG,CAEtB,MAAMqqB,EAASF,GAASpqB,EAAE,EAAGC,EAAE,CAAC,EAC1BsqB,EAASH,GAASpqB,EAAE,EAAGC,EAAE,CAAC,EAChC,OAAO,KAAK,KAAKqqB,GAAU,EAAIC,GAAU,CAAC,CAC9C,CALStwB,EAAAowB,GAAA,cCUT,MAAMG,EAAW,CACb,YAAYvd,EAAOwd,EAAU,CAAE,mBAAAC,CAAkB,EAAK,CAAA,EAAI,CA2DtD,GAvDA,KAAK,WAAa,KAIlB,KAAK,cAAgB,KAIrB,KAAK,kBAAoB,KAIzB,KAAK,SAAW,GAChB,KAAK,YAAc,IAAM,CACrB,GAAI,EAAE,KAAK,eAAiB,KAAK,mBAC7B,OACJ,MAAMrb,EAAOsb,GAAW,KAAK,kBAAmB,KAAK,OAAO,EACtDC,EAAe,KAAK,aAAe,KAInCC,EAA0BR,GAAWhb,EAAK,OAAQ,CAAE,EAAG,EAAG,EAAG,CAAG,CAAA,GAAK,EAC3E,GAAI,CAACub,GAAgB,CAACC,EAClB,OACJ,KAAM,CAAE,MAAApd,CAAO,EAAG4B,EACZ,CAAE,UAAAsK,GAAcC,KACtB,KAAK,QAAQ,KAAK,CAAE,GAAGnM,EAAO,UAAAkM,CAAS,CAAE,EACzC,KAAM,CAAE,QAAAmR,EAAS,OAAAC,GAAW,KAAK,SAC5BH,IACDE,GAAWA,EAAQ,KAAK,cAAezb,CAAI,EAC3C,KAAK,WAAa,KAAK,eAE3B0b,GAAUA,EAAO,KAAK,cAAe1b,CAAI,CACrD,EACQ,KAAK,kBAAoB,CAACpC,EAAOoC,IAAS,CAItC,GAHA,KAAK,cAAgBpC,EACrB,KAAK,kBAAoB+d,GAAe3b,EAAM,KAAK,kBAAkB,EAEjErC,GAAaC,CAAK,GAAKA,EAAM,UAAY,EAAG,CAC5C,KAAK,gBAAgBA,EAAOoC,CAAI,EAChC,MACH,CAED8J,EAAK,OAAO,KAAK,YAAa,EAAI,CAC9C,EACQ,KAAK,gBAAkB,CAAClM,EAAOoC,IAAS,CACpC,KAAK,IAAG,EACR,KAAM,CAAE,MAAA4b,EAAO,aAAAC,GAAiB,KAAK,SAC/BC,EAAUR,GAAWK,GAAe3b,EAAM,KAAK,kBAAkB,EAAG,KAAK,OAAO,EAClF,KAAK,YAAc4b,GACnBA,EAAMhe,EAAOke,CAAO,EAExBD,GAAgBA,EAAaje,EAAOke,CAAO,CACvD,EAEYje,GAAaD,CAAK,GAAKA,EAAM,QAAQ,OAAS,EAC9C,OACJ,KAAK,SAAWwd,EAChB,KAAK,mBAAqBC,EAC1B,MAAMrb,EAAO1B,GAAiBV,CAAK,EAC7Bme,EAAcJ,GAAe3b,EAAM,KAAK,kBAAkB,EAC1D,CAAE,MAAA5B,CAAO,EAAG2d,EACZ,CAAE,UAAAzR,GAAcC,KACtB,KAAK,QAAU,CAAC,CAAE,GAAGnM,EAAO,UAAAkM,CAAW,CAAA,EACvC,KAAM,CAAE,eAAA0R,CAAgB,EAAGZ,EAC3BY,GACIA,EAAepe,EAAO0d,GAAWS,EAAa,KAAK,OAAO,CAAC,EAC/D,KAAK,gBAAkBtb,GAAKzB,GAAgB,OAAQ,cAAe,KAAK,iBAAiB,EAAGA,GAAgB,OAAQ,YAAa,KAAK,eAAe,EAAGA,GAAgB,OAAQ,gBAAiB,KAAK,eAAe,CAAC,CACzN,CACD,eAAeoc,EAAU,CACrB,KAAK,SAAWA,CACnB,CACD,KAAM,CACF,KAAK,iBAAmB,KAAK,kBAC7BnR,EAAW,OAAO,KAAK,WAAW,CACrC,CACL,CAjFMrf,EAAAuwB,GAAA,cAkFN,SAASQ,GAAe3b,EAAMqb,EAAoB,CAC9C,OAAOA,EAAqB,CAAE,MAAOA,EAAmBrb,EAAK,KAAK,CAAG,EAAGA,CAC5E,CAFSpV,EAAA+wB,GAAA,kBAGT,SAASM,GAActrB,EAAGC,EAAG,CACzB,MAAO,CAAE,EAAGD,EAAE,EAAIC,EAAE,EAAG,EAAGD,EAAE,EAAIC,EAAE,CAAC,CACvC,CAFShG,EAAAqxB,GAAA,iBAGT,SAASX,GAAW,CAAE,MAAAld,CAAO,EAAE8d,EAAS,CACpC,MAAO,CACH,MAAA9d,EACA,MAAO6d,GAAc7d,EAAO+d,GAAgBD,CAAO,CAAC,EACpD,OAAQD,GAAc7d,EAAOge,GAAiBF,CAAO,CAAC,EACtD,SAAUrF,GAAYqF,EAAS,EAAG,CAC1C,CACA,CAPStxB,EAAA0wB,GAAA,cAQT,SAASc,GAAiBF,EAAS,CAC/B,OAAOA,EAAQ,EACnB,CAFStxB,EAAAwxB,GAAA,oBAGT,SAASD,GAAgBD,EAAS,CAC9B,OAAOA,EAAQA,EAAQ,OAAS,EACpC,CAFStxB,EAAAuxB,GAAA,mBAGT,SAAStF,GAAYqF,EAASG,EAAW,CACrC,GAAIH,EAAQ,OAAS,EACjB,MAAO,CAAE,EAAG,EAAG,EAAG,CAAC,EAEvB,IAAI/mB,EAAI+mB,EAAQ,OAAS,EACrBI,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBD,CAAO,EACzC,KAAO/mB,GAAK,IACRmnB,EAAmBJ,EAAQ/mB,GACvB,EAAAonB,EAAU,UAAYD,EAAiB,UACvC/X,GAAsB8X,CAAS,KAGnClnB,IAEJ,GAAI,CAACmnB,EACD,MAAO,CAAE,EAAG,EAAG,EAAG,CAAC,EAEvB,MAAME,GAAQD,EAAU,UAAYD,EAAiB,WAAa,IAClE,GAAIE,IAAS,EACT,MAAO,CAAE,EAAG,EAAG,EAAG,CAAC,EAEvB,MAAMlhB,EAAkB,CACpB,GAAIihB,EAAU,EAAID,EAAiB,GAAKE,EACxC,GAAID,EAAU,EAAID,EAAiB,GAAKE,CAChD,EACI,OAAIlhB,EAAgB,IAAM,MACtBA,EAAgB,EAAI,GAEpBA,EAAgB,IAAM,MACtBA,EAAgB,EAAI,GAEjBA,CACX,CAjCS1Q,EAAAisB,GAAA,eC/GT,SAAS4F,EAAWC,EAAM,CACtB,OAAOA,EAAK,IAAMA,EAAK,GAC3B,CAFS9xB,EAAA6xB,EAAA,cAGT,SAASE,GAAOnsB,EAAOyG,EAAS,EAAG2lB,EAAc,IAAM,CACnD,OAAO,KAAK,IAAIpsB,EAAQyG,CAAM,GAAK2lB,CACvC,CAFShyB,EAAA+xB,GAAA,UAGT,SAASE,GAAchO,EAAO3X,EAAQD,EAAQqB,EAAS,GAAK,CACxDuW,EAAM,OAASvW,EACfuW,EAAM,YAAchE,EAAI3T,EAAO,IAAKA,EAAO,IAAK2X,EAAM,MAAM,EAC5DA,EAAM,MAAQ4N,EAAWxlB,CAAM,EAAIwlB,EAAWvlB,CAAM,GAChDylB,GAAO9N,EAAM,MAAO,EAAG,IAAM,GAAK,MAAMA,EAAM,KAAK,KACnDA,EAAM,MAAQ,GAClBA,EAAM,UACFhE,EAAI5T,EAAO,IAAKA,EAAO,IAAK4X,EAAM,MAAM,EAAIA,EAAM,aAClD8N,GAAO9N,EAAM,SAAS,GAAK,MAAMA,EAAM,SAAS,KAChDA,EAAM,UAAY,EAC1B,CAVSjkB,EAAAiyB,GAAA,iBAWT,SAASC,GAAajO,EAAO3X,EAAQD,EAAQqB,EAAQ,CACjDukB,GAAchO,EAAM,EAAG3X,EAAO,EAAGD,EAAO,EAAGqB,GAAW,KAA4B,OAASA,EAAO,OAAO,EACzGukB,GAAchO,EAAM,EAAG3X,EAAO,EAAGD,EAAO,EAAGqB,GAAW,KAA4B,OAASA,EAAO,OAAO,CAC7G,CAHS1N,EAAAkyB,GAAA,gBAIT,SAASC,GAAiB9lB,EAAQ+lB,EAAUxxB,EAAQ,CAChDyL,EAAO,IAAMzL,EAAO,IAAMwxB,EAAS,IACnC/lB,EAAO,IAAMA,EAAO,IAAMwlB,EAAWO,CAAQ,CACjD,CAHSpyB,EAAAmyB,GAAA,oBAIT,SAASE,GAAgBhmB,EAAQ+lB,EAAUxxB,EAAQ,CAC/CuxB,GAAiB9lB,EAAO,EAAG+lB,EAAS,EAAGxxB,EAAO,CAAC,EAC/CuxB,GAAiB9lB,EAAO,EAAG+lB,EAAS,EAAGxxB,EAAO,CAAC,CACnD,CAHSZ,EAAAqyB,GAAA,mBAIT,SAASC,GAAyBjmB,EAAQ3G,EAAQ9E,EAAQ,CACtDyL,EAAO,IAAM3G,EAAO,IAAM9E,EAAO,IACjCyL,EAAO,IAAMA,EAAO,IAAMwlB,EAAWnsB,CAAM,CAC/C,CAHS1F,EAAAsyB,GAAA,4BAIT,SAASC,GAAqBlmB,EAAQ3G,EAAQ9E,EAAQ,CAClD0xB,GAAyBjmB,EAAO,EAAG3G,EAAO,EAAG9E,EAAO,CAAC,EACrD0xB,GAAyBjmB,EAAO,EAAG3G,EAAO,EAAG9E,EAAO,CAAC,CACzD,CAHSZ,EAAAuyB,GAAA,wBCzBT,SAASC,GAAiBhf,EAAO,CAAE,IAAA3M,EAAK,IAAAC,CAAG,EAAI2rB,EAAS,CACpD,OAAI5rB,IAAQ,QAAa2M,EAAQ3M,EAE7B2M,EAAQif,EAAUxS,EAAIpZ,EAAK2M,EAAOif,EAAQ,GAAG,EAAI,KAAK,IAAIjf,EAAO3M,CAAG,EAE/DC,IAAQ,QAAa0M,EAAQ1M,IAElC0M,EAAQif,EAAUxS,EAAInZ,EAAK0M,EAAOif,EAAQ,GAAG,EAAI,KAAK,IAAIjf,EAAO1M,CAAG,GAEjE0M,CACX,CAVSxT,EAAAwyB,GAAA,oBAgBT,SAASE,GAA4BZ,EAAMjrB,EAAKC,EAAK,CACjD,MAAO,CACH,IAAKD,IAAQ,OAAYirB,EAAK,IAAMjrB,EAAM,OAC1C,IAAKC,IAAQ,OACPgrB,EAAK,IAAMhrB,GAAOgrB,EAAK,IAAMA,EAAK,KAClC,MACd,CACA,CAPS9xB,EAAA0yB,GAAA,+BAYT,SAASC,GAAwBC,EAAW,CAAE,IAAAC,EAAK,KAAAC,EAAM,OAAAC,EAAQ,MAAAC,GAAS,CACtE,MAAO,CACH,EAAGN,GAA4BE,EAAU,EAAGE,EAAME,CAAK,EACvD,EAAGN,GAA4BE,EAAU,EAAGC,EAAKE,CAAM,CAC/D,CACA,CALS/yB,EAAA2yB,GAAA,2BAST,SAASM,GAA4BC,EAAYC,EAAiB,CAC9D,IAAItsB,EAAMssB,EAAgB,IAAMD,EAAW,IACvCpsB,EAAMqsB,EAAgB,IAAMD,EAAW,IAG3C,OAAIC,EAAgB,IAAMA,EAAgB,IACtCD,EAAW,IAAMA,EAAW,MAC5B,CAACrsB,EAAKC,CAAG,EAAI,CAACA,EAAKD,CAAG,GAEnB,CAAE,IAAAA,EAAK,IAAAC,EAClB,CAVS9G,EAAAizB,GAAA,+BAcT,SAASG,GAAwBR,EAAWS,EAAgB,CACxD,MAAO,CACH,EAAGJ,GAA4BL,EAAU,EAAGS,EAAe,CAAC,EAC5D,EAAGJ,GAA4BL,EAAU,EAAGS,EAAe,CAAC,CACpE,CACA,CALSrzB,EAAAozB,GAAA,2BAUT,SAAS3lB,GAAWnB,EAAQD,EAAQ,CAChC,IAAIqB,EAAS,GACb,MAAM4lB,EAAezB,EAAWvlB,CAAM,EAChCinB,EAAe1B,EAAWxlB,CAAM,EACtC,OAAIknB,EAAeD,EACf5lB,EAASyS,GAAS9T,EAAO,IAAKA,EAAO,IAAMinB,EAAchnB,EAAO,GAAG,EAE9DgnB,EAAeC,IACpB7lB,EAASyS,GAAS7T,EAAO,IAAKA,EAAO,IAAMinB,EAAclnB,EAAO,GAAG,GAEhEzF,GAAM,EAAG,EAAG8G,CAAM,CAC7B,CAXS1N,EAAAyN,GAAA,cAeT,SAAS+lB,GAAsB9tB,EAAQ+tB,EAAa,CAChD,MAAMC,EAAsB,CAAA,EAC5B,OAAID,EAAY,MAAQ,SACpBC,EAAoB,IAAMD,EAAY,IAAM/tB,EAAO,KAEnD+tB,EAAY,MAAQ,SACpBC,EAAoB,IAAMD,EAAY,IAAM/tB,EAAO,KAEhDguB,CACX,CATS1zB,EAAAwzB,GAAA,yBAUT,MAAMG,GAAiB,IAIvB,SAASC,GAAmBC,EAAcF,GAAgB,CACtD,OAAIE,IAAgB,GAChBA,EAAc,EAETA,IAAgB,KACrBA,EAAcF,IAEX,CACH,EAAGG,GAAmBD,EAAa,OAAQ,OAAO,EAClD,EAAGC,GAAmBD,EAAa,MAAO,QAAQ,CAC1D,CACA,CAXS7zB,EAAA4zB,GAAA,sBAYT,SAASE,GAAmBD,EAAaE,EAAUC,EAAU,CACzD,MAAO,CACH,IAAKC,GAAoBJ,EAAaE,CAAQ,EAC9C,IAAKE,GAAoBJ,EAAaG,CAAQ,CACtD,CACA,CALSh0B,EAAA8zB,GAAA,sBAMT,SAASG,GAAoBJ,EAAaK,EAAO,CAC7C,IAAIzqB,EACJ,OAAO,OAAOoqB,GAAgB,SACxBA,GACCpqB,EAAKoqB,EAAYK,MAAY,MAAQzqB,IAAO,OAASA,EAAK,CACrE,CALSzJ,EAAAi0B,GAAA,uBCtHT,MAAME,GAAkBn0B,EAAA,KAAO,CAC3B,UAAW,EACX,MAAO,EACP,OAAQ,EACR,YAAa,CACjB,GALwB,mBAMlBo0B,GAAcp0B,EAAA,KAAO,CACvB,EAAGm0B,GAAiB,EACpB,EAAGA,GAAiB,CACxB,GAHoB,eAIdE,GAAar0B,EAAA,KAAO,CAAE,IAAK,EAAG,IAAK,CAAC,GAAvB,cACbs0B,EAAYt0B,EAAA,KAAO,CACrB,EAAGq0B,GAAY,EACf,EAAGA,GAAY,CACnB,GAHkB,aCXlB,SAASE,EAASpf,EAAU,CACxB,MAAO,CAACA,EAAS,GAAG,EAAGA,EAAS,GAAG,CAAC,CACxC,CAFSnV,EAAAu0B,EAAA,YCKT,SAASC,GAAwB,CAAE,IAAA3B,EAAK,KAAAC,EAAM,MAAAE,EAAO,OAAAD,CAAM,EAAK,CAC5D,MAAO,CACH,EAAG,CAAE,IAAKD,EAAM,IAAKE,CAAO,EAC5B,EAAG,CAAE,IAAKH,EAAK,IAAKE,CAAQ,CACpC,CACA,CALS/yB,EAAAw0B,GAAA,2BAMT,SAASC,GAAwB,CAAE,EAAAla,EAAG,EAAAma,GAAK,CACvC,MAAO,CAAE,IAAKA,EAAE,IAAK,MAAOna,EAAE,IAAK,OAAQma,EAAE,IAAK,KAAMna,EAAE,GAAG,CACjE,CAFSva,EAAAy0B,GAAA,2BAQT,SAASE,GAAmBnhB,EAAOud,EAAgB,CAC/C,GAAI,CAACA,EACD,OAAOvd,EACX,MAAMohB,EAAU7D,EAAe,CAAE,EAAGvd,EAAM,KAAM,EAAGA,EAAM,GAAG,CAAE,EACxDqhB,EAAc9D,EAAe,CAAE,EAAGvd,EAAM,MAAO,EAAGA,EAAM,MAAM,CAAE,EACtE,MAAO,CACH,IAAKohB,EAAQ,EACb,KAAMA,EAAQ,EACd,OAAQC,EAAY,EACpB,MAAOA,EAAY,CAC3B,CACA,CAXS70B,EAAA20B,GAAA,sBCnBT,SAASG,GAAgBxtB,EAAO,CAC5B,OAAOA,IAAU,QAAaA,IAAU,CAC5C,CAFStH,EAAA80B,GAAA,mBAGT,SAASC,GAAS,CAAE,MAAAztB,EAAO,OAAA0tB,EAAQ,OAAAC,CAAM,EAAI,CACzC,MAAQ,CAACH,GAAgBxtB,CAAK,GAC1B,CAACwtB,GAAgBE,CAAM,GACvB,CAACF,GAAgBG,CAAM,CAC/B,CAJSj1B,EAAA+0B,GAAA,YAKT,SAASppB,EAAa7B,EAAQ,CAC1B,OAAQirB,GAASjrB,CAAM,GACnBorB,GAAeprB,CAAM,GACrBA,EAAO,GACPA,EAAO,QACPA,EAAO,SACPA,EAAO,OACf,CAPS9J,EAAA2L,EAAA,gBAQT,SAASupB,GAAeprB,EAAQ,CAC5B,OAAOqrB,GAAcrrB,EAAO,CAAC,GAAKqrB,GAAcrrB,EAAO,CAAC,CAC5D,CAFS9J,EAAAk1B,GAAA,kBAGT,SAASC,GAAcvvB,EAAO,CAC1B,OAAOA,GAASA,IAAU,IAC9B,CAFS5F,EAAAm1B,GAAA,iBCbT,SAASC,GAAW5hB,EAAOlM,EAAO+tB,EAAa,CAC3C,MAAMC,EAAqB9hB,EAAQ6hB,EAC7BE,EAASjuB,EAAQguB,EACvB,OAAOD,EAAcE,CACzB,CAJSv1B,EAAAo1B,GAAA,cAQT,SAASI,GAAgBhiB,EAAOiiB,EAAWnuB,EAAO+tB,EAAaK,EAAU,CACrE,OAAIA,IAAa,SACbliB,EAAQ4hB,GAAW5hB,EAAOkiB,EAAUL,CAAW,GAE5CD,GAAW5hB,EAAOlM,EAAO+tB,CAAW,EAAII,CACnD,CALSz1B,EAAAw1B,GAAA,mBAST,SAASG,GAAe7D,EAAM2D,EAAY,EAAGnuB,EAAQ,EAAG+tB,EAAaK,EAAU,CAC3E5D,EAAK,IAAM0D,GAAgB1D,EAAK,IAAK2D,EAAWnuB,EAAO+tB,EAAaK,CAAQ,EAC5E5D,EAAK,IAAM0D,GAAgB1D,EAAK,IAAK2D,EAAWnuB,EAAO+tB,EAAaK,CAAQ,CAChF,CAHS11B,EAAA21B,GAAA,kBAOT,SAASC,GAAcC,EAAK,CAAE,EAAAtb,EAAG,EAAAma,CAAC,EAAI,CAClCiB,GAAeE,EAAI,EAAGtb,EAAE,UAAWA,EAAE,MAAOA,EAAE,WAAW,EACzDob,GAAeE,EAAI,EAAGnB,EAAE,UAAWA,EAAE,MAAOA,EAAE,WAAW,CAC7D,CAHS10B,EAAA41B,GAAA,iBAUT,SAASE,GAAgBD,EAAKE,EAAWC,EAAUC,EAAqB,GAAO,CAC3E,IAAIxsB,EAAIC,EACR,MAAMwsB,EAAaF,EAAS,OAC5B,GAAI,CAACE,EACD,OAEJH,EAAU,EAAIA,EAAU,EAAI,EAC5B,IAAII,EACAlS,EACJ,QAAS1Z,EAAI,EAAGA,EAAI2rB,EAAY3rB,IAC5B4rB,EAAOH,EAASzrB,GAChB0Z,EAAQkS,EAAK,kBACPzsB,GAAMD,EAAK0sB,EAAK,YAAc,MAAQ1sB,IAAO,OAAS,OAASA,EAAG,SAAW,MAAQC,IAAO,OAAS,OAASA,EAAG,WAAa,aAEhIusB,GACAE,EAAK,QAAQ,cACbA,EAAK,QACLA,IAASA,EAAK,MACdC,GAAaP,EAAK,CACd,EAAG,CAACM,EAAK,OAAO,OAAO,EACvB,EAAG,CAACA,EAAK,OAAO,OAAO,CACvC,CAAa,EAEDlS,IAEA8R,EAAU,GAAK9R,EAAM,EAAE,MACvB8R,EAAU,GAAK9R,EAAM,EAAE,MAEvB2R,GAAcC,EAAK5R,CAAK,GAExBgS,GAAsBtqB,EAAawqB,EAAK,YAAY,GACpDC,GAAaP,EAAKM,EAAK,YAAY,GAO3CJ,EAAU,EAAIM,GAAcN,EAAU,CAAC,EACvCA,EAAU,EAAIM,GAAcN,EAAU,CAAC,CAC3C,CAxCS/1B,EAAA81B,GAAA,mBAyCT,SAASO,GAAc/uB,EAAO,CAC1B,OAAI,OAAO,UAAUA,CAAK,GAEnBA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CAJStH,EAAAq2B,GAAA,iBAKT,SAASC,EAAcxE,EAAM3B,EAAU,CACnC2B,EAAK,IAAMA,EAAK,IAAM3B,EACtB2B,EAAK,IAAMA,EAAK,IAAM3B,CAC1B,CAHSnwB,EAAAs2B,EAAA,iBAST,SAASC,GAAczE,EAAM0E,EAAY,CAAC3zB,EAAK4zB,EAAUC,CAAS,EAAG,CACjE,MAAMC,EAAaH,EAAWE,KAAe,OAAYF,EAAWE,GAAa,GAC3ErB,EAAcpV,EAAI6R,EAAK,IAAKA,EAAK,IAAK6E,CAAU,EAEtDhB,GAAe7D,EAAM0E,EAAW3zB,GAAM2zB,EAAWC,GAAWpB,EAAamB,EAAW,KAAK,CAC7F,CALSx2B,EAAAu2B,GAAA,iBAST,MAAMK,GAAQ,CAAC,IAAK,SAAU,SAAS,EACjCC,GAAQ,CAAC,IAAK,SAAU,SAAS,EAIvC,SAAST,GAAaP,EAAK3vB,EAAW,CAClCqwB,GAAcV,EAAI,EAAG3vB,EAAW0wB,EAAK,EACrCL,GAAcV,EAAI,EAAG3vB,EAAW2wB,EAAK,CACzC,CAHS72B,EAAAo2B,GAAA,gBC1GT,SAASU,GAAmBt1B,EAAUuvB,EAAgB,CAClD,OAAOyD,GAAwBG,GAAmBnzB,EAAS,sBAAuB,EAAEuvB,CAAc,CAAC,CACvG,CAFS/wB,EAAA82B,GAAA,sBAGT,SAASC,GAAelnB,EAASmnB,EAAoBvG,EAAoB,CACrE,MAAMwG,EAAcH,GAAmBjnB,EAAS4gB,CAAkB,EAC5D,CAAE,OAAAyG,CAAQ,EAAGF,EACnB,OAAIE,IACAZ,EAAcW,EAAY,EAAGC,EAAO,OAAO,CAAC,EAC5CZ,EAAcW,EAAY,EAAGC,EAAO,OAAO,CAAC,GAEzCD,CACX,CARSj3B,EAAA+2B,GAAA,kBCYT,MAAMI,GAAsB,IAAI,QAKhC,MAAMC,EAA0B,CAC5B,YAAYl2B,EAAe,CAIvB,KAAK,eAAiB,KACtB,KAAK,WAAa,GAClB,KAAK,iBAAmB,KACxB,KAAK,YAAc,CAAE,EAAG,EAAG,EAAG,GAI9B,KAAK,YAAc,GACnB,KAAK,sBAAwB,GAI7B,KAAK,QAAUozB,IACf,KAAK,cAAgBpzB,CACxB,CACD,MAAMm2B,EAAa,CAAE,aAAAC,EAAe,EAAK,EAAK,CAAA,EAAI,CAI9C,GAAI,KAAK,cAAc,YAAc,GACjC,OACJ,MAAMlG,EAAiBpxB,EAACgT,GAAU,CAG9B,KAAK,cAAa,EACdskB,GACA,KAAK,aAAa5jB,GAAiBV,EAAO,MAAM,EAAE,KAAK,CAEvE,EAP+B,kBAQjB6d,EAAU7wB,EAAA,CAACgT,EAAOoC,IAAS,CAC7B,IAAI3L,EAEJ,KAAM,CAAE,KAAAmL,EAAM,gBAAA2iB,EAAiB,YAAAC,CAAW,EAAK,KAAK,WAChD5iB,GAAQ,CAAC2iB,IACL,KAAK,gBACL,KAAK,eAAc,EACvB,KAAK,eAAiB5iB,GAAcC,CAAI,EAEpC,CAAC,KAAK,kBAGd,KAAK,WAAa,GAClB,KAAK,iBAAmB,KACxB,KAAK,mBAAkB,EACnB,KAAK,cAAc,aACnB,KAAK,cAAc,WAAW,mBAAqB,GACnD,KAAK,cAAc,WAAW,OAAS,QAK3C2f,EAAUzC,GAAS,CACf,IAAIroB,EAAIC,EACR,IAAIqc,EAAU,KAAK,mBAAmB+L,CAAI,EAAE,IAAK,GAAI,EAIrD,GAAIpqB,EAAQ,KAAKqe,CAAO,EAAG,CACvB,MAAM0R,GAAgB/tB,GAAMD,EAAK,KAAK,cAAc,cAAgB,MAAQA,IAAO,OAAS,OAASA,EAAG,UAAY,MAAQC,IAAO,OAAS,OAASA,EAAG,UAAUooB,GAC9J2F,IAEA1R,EADe8L,EAAW4F,CAAY,GAClB,WAAW1R,CAAO,EAAI,KAEjD,CACD,KAAK,YAAY+L,GAAQ/L,CACzC,CAAa,EAEDyR,GAAgB,MAA0CA,EAAYxkB,EAAOoC,CAAI,GAChF3L,EAAK,KAAK,cAAc,kBAAoB,MAAQA,IAAO,QAAkBA,EAAG,UAAU4I,EAAc,KAAM,EAAI,EAC/H,EAxCwB,WAyCVye,EAAS9wB,EAAA,CAACgT,EAAOoC,IAAS,CAE5B,KAAM,CAAE,gBAAAmiB,EAAiB,kBAAAG,EAAmB,gBAAAC,EAAiB,OAAAC,GAAY,KAAK,WAE9E,GAAI,CAACL,GAAmB,CAAC,KAAK,eAC1B,OACJ,KAAM,CAAE,OAAA5pB,CAAQ,EAAGyH,EAEnB,GAAIsiB,GAAqB,KAAK,mBAAqB,KAAM,CACrD,KAAK,iBAAmBG,GAAoBlqB,CAAM,EAE9C,KAAK,mBAAqB,OAC1BgqB,GAAoB,MAA8CA,EAAgB,KAAK,gBAAgB,GAE3G,MACH,CAED,KAAK,WAAW,IAAKviB,EAAK,MAAOzH,CAAM,EACvC,KAAK,WAAW,IAAKyH,EAAK,MAAOzH,CAAM,EAOvC,KAAK,cAAc,SAKnBiqB,GAAW,MAAqCA,EAAO5kB,EAAOoC,CAAI,CAC9E,EA/BuB,UAgCT6b,EAAejxB,EAAA,CAACgT,EAAOoC,IAAS,KAAK,KAAKpC,EAAOoC,CAAI,EAAtC,gBACrB,KAAK,WAAa,IAAImb,GAAW8G,EAAa,CAC1C,eAAAjG,EACA,QAAAP,EACA,OAAAC,EACA,aAAAG,CACZ,EAAW,CAAE,mBAAoB,KAAK,cAAc,sBAAqB,CAAI,CAAA,CACxE,CACD,KAAKje,EAAOoC,EAAM,CACd,MAAM0iB,EAAa,KAAK,WAExB,GADA,KAAK,OAAM,EACP,CAACA,EACD,OACJ,KAAM,CAAE,SAAApU,CAAU,EAAGtO,EACrB,KAAK,eAAesO,CAAQ,EAC5B,KAAM,CAAE,UAAAqU,CAAS,EAAK,KAAK,SAAQ,EACnCA,GAAc,MAAwCA,EAAU/kB,EAAOoC,CAAI,CAC9E,CACD,QAAS,CACL,IAAI3L,EAAIC,EACR,KAAK,WAAa,GACd,KAAK,cAAc,aACnB,KAAK,cAAc,WAAW,mBAAqB,KAEtDD,EAAK,KAAK,cAAgB,MAAQA,IAAO,QAAkBA,EAAG,IAAG,EAClE,KAAK,WAAa,OAClB,KAAM,CAAE,gBAAA8tB,CAAe,EAAK,KAAK,SAAQ,EACrC,CAACA,GAAmB,KAAK,iBACzB,KAAK,eAAc,EACnB,KAAK,eAAiB,OAEzB7tB,EAAK,KAAK,cAAc,kBAAoB,MAAQA,IAAO,QAAkBA,EAAG,UAAU2I,EAAc,KAAM,EAAK,CACvH,CACD,WAAWyf,EAAMkG,EAAQrqB,EAAQ,CAC7B,KAAM,CAAE,KAAAiH,CAAI,EAAK,KAAK,SAAQ,EAE9B,GAAI,CAACjH,GAAU,CAACsqB,GAAWnG,EAAMld,EAAM,KAAK,gBAAgB,EACxD,OACJ,MAAMsjB,EAAY,KAAK,mBAAmBpG,CAAI,EAC9C,IAAItY,EAAO,KAAK,YAAYsY,GAAQnkB,EAAOmkB,GAEvC,KAAK,aAAe,KAAK,YAAYA,KACrCtY,EAAOgZ,GAAiBhZ,EAAM,KAAK,YAAYsY,GAAO,KAAK,QAAQA,EAAK,GAE5EoG,EAAU,IAAI1e,CAAI,CACrB,CACD,oBAAqB,CACjB,KAAM,CAAE,gBAAA2e,EAAiB,YAAAtE,CAAa,EAAG,KAAK,SAAQ,EAChD,CAAE,OAAAnuB,CAAM,EAAK,KAAK,cAAc,YAAc,CAAA,EAC9C0yB,EAAkB,KAAK,YACzBD,GAAmBh3B,GAAYg3B,CAAe,EACzC,KAAK,cACN,KAAK,YAAc,KAAK,yBAIxBA,GAAmBzyB,EACnB,KAAK,YAAcitB,GAAwBjtB,EAAO,UAAWyyB,CAAe,EAG5E,KAAK,YAAc,GAG3B,KAAK,QAAUvE,GAAmBC,CAAW,EAKzCuE,IAAoB,KAAK,aACzB1yB,GACA,KAAK,aACL,CAAC,KAAK,uBACN6uB,EAAUzC,GAAS,CACX,KAAK,mBAAmBA,CAAI,IAC5B,KAAK,YAAYA,GAAQ0B,GAAsB9tB,EAAO,UAAUosB,GAAO,KAAK,YAAYA,EAAK,EAEjH,CAAa,CAER,CACD,uBAAwB,CACpB,KAAM,CAAE,gBAAiB2B,EAAa,yBAAA4E,CAAwB,EAAK,KAAK,WACxE,GAAI,CAAC5E,GAAe,CAACtyB,GAAYsyB,CAAW,EACxC,MAAO,GACX,MAAM6E,EAAqB7E,EAAY,QAEjC,CAAE,WAAA3jB,CAAU,EAAK,KAAK,cAE5B,GAAI,CAACA,GAAc,CAACA,EAAW,OAC3B,MAAO,GACX,MAAMujB,EAAiB0D,GAAeuB,EAAoBxoB,EAAW,KAAM,KAAK,cAAc,sBAAqB,CAAE,EACrH,IAAIyoB,EAAsBnF,GAAwBtjB,EAAW,OAAO,UAAWujB,CAAc,EAK7F,GAAIgF,EAA0B,CAC1B,MAAMG,EAAkBH,EAAyB5D,GAAwB8D,CAAmB,CAAC,EAC7F,KAAK,sBAAwB,CAAC,CAACC,EAC3BA,IACAD,EAAsB/D,GAAwBgE,CAAe,EAEpE,CACD,OAAOD,CACV,CACD,eAAe7U,EAAU,CACrB,KAAM,CAAE,KAAA9O,EAAM,aAAA6jB,EAAc,YAAA5E,EAAa,eAAA6E,EAAgB,iBAAAC,EAAkB,oBAAAC,CAAsB,EAAG,KAAK,WACnGnF,EAAc,KAAK,aAAe,GAClCoF,EAAqBtE,EAAUzC,GAAS,CAC1C,IAAIroB,EACJ,GAAI,CAACwuB,GAAWnG,EAAMld,EAAM,KAAK,gBAAgB,EAC7C,OAEJ,IAAI7C,GAActI,EAAKgqB,GAAgB,KAAiC,OAASA,EAAY3B,MAAW,MAAQroB,IAAO,OAASA,EAAK,GACjIkvB,IACA5mB,EAAa,CAAE,IAAK,EAAG,IAAK,CAAC,GAOjC,MAAMwW,EAAkBsL,EAAc,IAAM,IACtCrL,EAAgBqL,EAAc,GAAK,IACnCvL,EAAU,CACZ,KAAM,UACN,SAAUmQ,EAAe/U,EAASoO,GAAQ,EAC1C,gBAAAvJ,EACA,cAAAC,EACA,aAAc,IACd,UAAW,EACX,UAAW,GACX,GAAGkQ,EACH,GAAG3mB,CACnB,EAIY,OAAO,KAAK,wBAAwB+f,EAAMxJ,CAAO,CAC7D,CAAS,EAED,OAAO,QAAQ,IAAIuQ,CAAkB,EAAE,KAAKD,CAAmB,CAClE,CACD,wBAAwB9G,EAAM/f,EAAY,CACtC,MAAMmmB,EAAY,KAAK,mBAAmBpG,CAAI,EAC9C,OAAOlJ,GAAekJ,EAAMoG,EAAW,EAAGnmB,CAAU,CACvD,CACD,eAAgB,CACZwiB,EAAUzC,GAAS,KAAK,mBAAmBA,CAAI,EAAE,KAAI,CAAE,CAC1D,CAOD,mBAAmBA,EAAM,CACrB,IAAIroB,EAAIC,EACR,MAAMovB,EAAU,QAAUhH,EAAK,YAAW,EACpCiH,EAAsB,KAAK,cAAc,SAAU,EAACD,GAC1D,OAAOC,GAED,KAAK,cAAc,SAASjH,GAAOpoB,GAAMD,EAAK,KAAK,cAAc,SAAQ,EAAG,WAAa,MAAQA,IAAO,OAAS,OAASA,EAAGqoB,MAAW,MAAQpoB,IAAO,OAASA,EAAK,CAAC,CAC/K,CACD,aAAa8J,EAAO,CAChB+gB,EAAUzC,GAAS,CACf,KAAM,CAAE,KAAAld,CAAI,EAAK,KAAK,SAAQ,EAE9B,GAAI,CAACqjB,GAAWnG,EAAMld,EAAM,KAAK,gBAAgB,EAC7C,OACJ,KAAM,CAAE,WAAA9E,CAAU,EAAK,KAAK,cACtBooB,EAAY,KAAK,mBAAmBpG,CAAI,EAC9C,GAAIhiB,GAAcA,EAAW,OAAQ,CACjC,KAAM,CAAE,IAAAjJ,EAAK,IAAAC,CAAK,EAAGgJ,EAAW,OAAO,UAAUgiB,GACjDoG,EAAU,IAAI1kB,EAAMse,GAAQ7R,EAAIpZ,EAAKC,EAAK,EAAG,CAAC,CACjD,CACb,CAAS,CACJ,CAMD,gCAAiC,CAC7B,IAAI2C,EACJ,GAAI,CAAC,KAAK,cAAc,QACpB,OACJ,KAAM,CAAE,KAAAmL,EAAM,gBAAAujB,CAAiB,EAAG,KAAK,SAAQ,EACzC,CAAE,WAAAroB,CAAU,EAAK,KAAK,cAC5B,GAAI,CAAC3O,GAAYg3B,CAAe,GAAK,CAACroB,GAAc,CAAC,KAAK,YACtD,OAKJ,KAAK,cAAa,EAKlB,MAAMkpB,EAAc,CAAE,EAAG,EAAG,EAAG,CAAC,EAChCzE,EAAUzC,GAAS,CACf,MAAMoG,EAAY,KAAK,mBAAmBpG,CAAI,EAC9C,GAAIoG,EAAW,CACX,MAAMnpB,EAASmpB,EAAU,MACzBc,EAAYlH,GAAQrkB,GAAW,CAAE,IAAKsB,EAAQ,IAAKA,CAAQ,EAAE,KAAK,YAAY+iB,EAAK,CACtF,CACb,CAAS,EAID,KAAM,CAAE,kBAAAvrB,CAAmB,EAAG,KAAK,cAAc,SAAQ,EACzD,KAAK,cAAc,QAAQ,MAAM,UAAYA,EACvCA,EAAkB,CAAE,EAAE,EAAE,EACxB,QACLkD,EAAKqG,EAAW,QAAU,MAAQrG,IAAO,QAAkBA,EAAG,aAAY,EAC3EqG,EAAW,aAAY,EACvB,KAAK,mBAAkB,EAKvBykB,EAAUzC,GAAS,CACf,GAAI,CAACmG,GAAWnG,EAAMld,EAAM,IAAI,EAC5B,OAIJ,MAAMsjB,EAAY,KAAK,mBAAmBpG,CAAI,EACxC,CAAE,IAAAjrB,EAAK,IAAAC,CAAG,EAAK,KAAK,YAAYgrB,GACtCoG,EAAU,IAAIjY,EAAIpZ,EAAKC,EAAKkyB,EAAYlH,EAAK,CAAC,CAC1D,CAAS,CACJ,CACD,cAAe,CACX,IAAIroB,EACJ,GAAI,CAAC,KAAK,cAAc,QACpB,OACJ0tB,GAAoB,IAAI,KAAK,cAAe,IAAI,EAChD,MAAMtnB,EAAU,KAAK,cAAc,QAI7BopB,EAAsB7kB,GAAgBvE,EAAS,cAAgBmD,GAAU,CAC3E,KAAM,CAAE,KAAA4B,EAAM,aAAAskB,EAAe,EAAI,EAAK,KAAK,WAC3CtkB,GAAQskB,GAAgB,KAAK,MAAMlmB,CAAK,CACpD,CAAS,EACKmmB,EAAyBn5B,EAAA,IAAM,CACjC,KAAM,CAAE,gBAAAm4B,CAAe,EAAK,KAAK,SAAQ,EACrCh3B,GAAYg3B,CAAe,IAC3B,KAAK,YAAc,KAAK,wBAExC,EALuC,0BAMzB,CAAE,WAAAroB,CAAU,EAAK,KAAK,cACtBspB,EAA4BtpB,EAAW,iBAAiB,UAAWqpB,CAAsB,EAC3FrpB,GAAc,CAACA,EAAW,UACzBrG,EAAKqG,EAAW,QAAU,MAAQrG,IAAO,QAAkBA,EAAG,aAAY,EAC3EqG,EAAW,aAAY,GAE3BqpB,IAKA,MAAME,EAAqB/mB,GAAY,OAAQ,SAAU,IAAM,KAAK,+BAA8B,CAAE,EAK9FgnB,EAA2BxpB,EAAW,iBAAiB,YAAc,CAAC,CAAE,MAAAmU,EAAO,iBAAAsV,KAAuB,CACpG,KAAK,YAAcA,IACnBhF,EAAUzC,GAAS,CACf,MAAMrG,EAAc,KAAK,mBAAmBqG,CAAI,EAC5C,CAACrG,IAEL,KAAK,YAAYqG,IAAS7N,EAAM6N,GAAM,UACtCrG,EAAY,IAAIA,EAAY,IAAG,EAAKxH,EAAM6N,GAAM,SAAS,EAC7E,CAAiB,EACD,KAAK,cAAc,SAEnC,GACQ,MAAO,IAAM,CACTuH,IACAJ,IACAG,IACAE,GAA6B,MAAuDA,GAChG,CACK,CACD,UAAW,CACP,MAAM54B,EAAQ,KAAK,cAAc,SAAQ,EACnC,CAAE,KAAAkU,EAAO,GAAO,kBAAA8iB,EAAoB,GAAO,gBAAAH,EAAkB,GAAO,gBAAAY,EAAkB,GAAO,YAAAtE,EAAcF,GAAgB,aAAA8E,EAAe,EAAI,EAAM/3B,EAC1J,MAAO,CACH,GAAGA,EACH,KAAAkU,EACA,kBAAA8iB,EACA,gBAAAH,EACA,gBAAAY,EACA,YAAAtE,EACA,aAAA4E,CACZ,CACK,CACL,CAtZMz4B,EAAAo3B,GAAA,6BAuZN,SAASa,GAAWuB,EAAW5kB,EAAM6kB,EAAkB,CACnD,OAAS7kB,IAAS,IAAQA,IAAS4kB,KAC9BC,IAAqB,MAAQA,IAAqBD,EAC3D,CAHSx5B,EAAAi4B,GAAA,cAWT,SAASJ,GAAoBlqB,EAAQ+rB,EAAgB,GAAI,CACrD,IAAIF,EAAY,KAChB,OAAI,KAAK,IAAI7rB,EAAO,CAAC,EAAI+rB,EACrBF,EAAY,IAEP,KAAK,IAAI7rB,EAAO,CAAC,EAAI+rB,IAC1BF,EAAY,KAETA,CACX,CATSx5B,EAAA63B,GAAA,uBChbT,SAAS8B,GAAQj5B,EAAO,CACpB,KAAM,CAAE,aAAck5B,EAAmB,cAAA14B,CAAa,EAAKR,EACrDm5B,EAAe/2B,GAAY,IAAM,IAAIs0B,GAA0Bl2B,CAAa,CAAC,EAGnFb,oBAAU,IAAMu5B,GAAqBA,EAAkB,UAAUC,CAAY,EAAG,CAACA,EAAcD,CAAiB,CAAC,EAEjHv5B,EAAS,QAAA,UAAC,IAAMw5B,EAAa,aAAc,EAAE,CAACA,CAAY,CAAC,CAC/D,CARS75B,EAAA25B,GAAA,WCST,SAASG,GAAc,CAAE,MAAAC,EAAO,WAAAC,EAAY,SAAAC,EAAU,kBAAAC,EAAmB,cAAAh5B,GAAkB,CACvF,MAAMi5B,EAAeJ,GAASC,GAAcC,GAAYC,EAClDE,EAAan5B,iBAAO,IAAI,EACxB,CAAE,mBAAAwvB,CAAkB,EAAK1wB,EAAU,QAAA,WAACL,EAAmB,EACvD8wB,EAAW,CACb,eAAgB0J,EAChB,QAASF,EACT,OAAQD,EACR,MAAO,CAAC/mB,EAAOoC,IAAS,CACpBglB,EAAW,QAAU,KACrBH,GAAYA,EAASjnB,EAAOoC,CAAI,CACnC,CACT,EACI/U,EAAAA,QAAAA,UAAU,IAAM,CACR+5B,EAAW,UAAY,MACvBA,EAAW,QAAQ,eAAe5J,CAAQ,CAEtD,CAAK,EACD,SAASha,EAAcxD,EAAO,CAC1BonB,EAAW,QAAU,IAAI7J,GAAWvd,EAAOwd,EAAU,CACjD,mBAAAC,CACZ,CAAS,CACJ,CAJQzwB,EAAAwW,EAAA,iBAKTnC,GAAgBnT,EAAe,cAAei5B,GAAgB3jB,CAAa,EAC3Eb,GAAiB,IAAMykB,EAAW,SAAWA,EAAW,QAAQ,IAAG,CAAE,CACzE,CAzBSp6B,EAAA85B,GAAA,iBCdT,MAAMllB,GAAO,CACT,IAAKkE,EAAwBghB,EAAa,EAC1C,KAAMhhB,EAAwB6gB,EAAO,CACzC,ECLA,SAASlzB,GAAcb,EAAO,CAC1B,OAAO,OAAOA,GAAU,UAAYA,EAAM,WAAW,QAAQ,CACjE,CAFS5F,EAAAyG,GAAA,iBAYT,MAAM4zB,GAAmB,uDACzB,SAASC,GAAiBvU,EAAS,CAC/B,MAAMwU,EAAQF,GAAiB,KAAKtU,CAAO,EAC3C,GAAI,CAACwU,EACD,MAAO,IACX,KAAM,EAAGC,EAAO3hB,CAAQ,EAAI0hB,EAC5B,MAAO,CAACC,EAAO3hB,CAAQ,CAC3B,CANS7Y,EAAAs6B,GAAA,oBAQT,SAASG,GAAiB1U,EAASlW,EAAS6qB,EAAQ,EAAG,CAEnD,KAAM,CAACF,EAAO3hB,CAAQ,EAAIyhB,GAAiBvU,CAAO,EAElD,GAAI,CAACyU,EACD,OAEJ,MAAM3oB,EAAW,OAAO,iBAAiBhC,CAAO,EAAE,iBAAiB2qB,CAAK,EACxE,OAAI3oB,EACOA,EAAS,OAEXpL,GAAcoS,CAAQ,EAEpB4hB,GAAiB5hB,EAAUhJ,EAAS6qB,EAAQ,CAAC,EAG7C7hB,CAEf,CAlBS7Y,EAAAy6B,GAAA,oBAwBT,SAASE,GAAoBz5B,EAAe,IAAKmL,CAAM,EAAIyF,EAAe,CACtE,MAAMjC,EAAU3O,EAAc,QAC9B,GAAI,EAAE2O,aAAmB,SACrB,MAAO,CAAE,OAAAxD,EAAQ,cAAAyF,GAGjBA,IACAA,EAAgB,CAAE,GAAGA,IAGzB5Q,EAAc,OAAO,QAAS0E,GAAU,CACpC,MAAMmgB,EAAUngB,EAAM,MACtB,GAAI,CAACa,GAAcsf,CAAO,EACtB,OACJ,MAAMlU,EAAW4oB,GAAiB1U,EAASlW,CAAO,EAC9CgC,GACAjM,EAAM,IAAIiM,CAAQ,CAC9B,CAAK,EAGD,UAAWhP,KAAOwJ,EAAQ,CACtB,MAAM0Z,EAAU1Z,EAAOxJ,GACvB,GAAI,CAAC4D,GAAcsf,CAAO,EACtB,SACJ,MAAMlU,EAAW4oB,GAAiB1U,EAASlW,CAAO,EAC9C,CAACgC,IAGLxF,EAAOxJ,GAAOgP,EAIVC,GAAiBA,EAAcjP,KAAS,SACxCiP,EAAcjP,GAAOkjB,GAE5B,CACD,MAAO,CAAE,OAAA1Z,EAAQ,cAAAyF,EACrB,CArCS9R,EAAA26B,GAAA,uBCxCT,MAAMC,GAAiB,IAAI,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,GACJ,CAAC,EACKC,GAAkB76B,EAAC6C,GAAQ+3B,GAAe,IAAI/3B,CAAG,EAA/B,mBAClBi4B,GAAmB96B,EAACqM,GACf,OAAO,KAAKA,CAAM,EAAE,KAAKwuB,EAAe,EAD1B,oBAGnBE,GAAsB/6B,EAAA,CAAC4F,EAAOoX,IAAO,CAGvCpX,EAAM,IAAIoX,EAAI,EAAK,EACnBpX,EAAM,IAAIoX,CAAE,CAChB,EAL4B,uBAMtBge,GAAgBh7B,EAAC0B,GAAMA,IAAM0F,GAAU1F,IAAMiG,EAA7B,iBACtB,IAAIszB,IACH,SAAUA,EAAsB,CAC7BA,EAAqB,MAAW,QAChCA,EAAqB,OAAY,SACjCA,EAAqB,KAAU,OAC/BA,EAAqB,MAAW,QAChCA,EAAqB,IAAS,MAC9BA,EAAqB,OAAY,QACrC,GAAGA,KAAyBA,GAAuB,CAAE,EAAC,EACtD,MAAMC,GAAmBl7B,EAAA,CAACm7B,EAAQC,IAAQ,WAAWD,EAAO,MAAM,IAAI,EAAEC,EAAI,EAAnD,oBACnBC,GAAyBr7B,EAAA,CAACs7B,EAAMC,IAAS,CAACC,EAAO,CAAE,UAAAt1B,KAAgB,CACrE,GAAIA,IAAc,QAAU,CAACA,EACzB,MAAO,GACX,MAAMu1B,EAAWv1B,EAAU,MAAM,oBAAoB,EACrD,GAAIu1B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,CAAI,EAExC,CACD,MAAMJ,EAASj1B,EAAU,MAAM,kBAAkB,EACjD,OAAIi1B,EACOD,GAAiBC,EAAO,GAAIG,CAAI,EAGhC,CAEd,CACL,EAhB+B,0BAiBzBn1B,GAAgB,IAAI,IAAI,CAAC,IAAK,IAAK,GAAG,CAAC,EACvCu1B,GAAgCn2B,GAAmB,OAAQ1C,GAAQ,CAACsD,GAAc,IAAItD,CAAG,CAAC,EAChG,SAAS84B,GAAgCz6B,EAAe,CACpD,MAAM06B,EAAoB,CAAA,EAC1B,OAAAF,GAA8B,QAAS74B,GAAQ,CAC3C,MAAM+C,EAAQ1E,EAAc,SAAS2B,CAAG,EACpC+C,IAAU,SACVg2B,EAAkB,KAAK,CAAC/4B,EAAK+C,EAAM,IAAK,CAAA,CAAC,EACzCA,EAAM,IAAI/C,EAAI,WAAW,OAAO,EAAI,EAAI,CAAC,EAErD,CAAK,EAEG+4B,EAAkB,QAClB16B,EAAc,OAAM,EACjB06B,CACX,CAbS57B,EAAA27B,GAAA,mCAcT,MAAME,GAAmB,CAErB,MAAO,CAAC,CAAE,EAAAthB,CAAG,EAAE,CAAE,YAAAuhB,EAAc,IAAK,aAAAC,EAAe,GAAG,IAAOxhB,EAAE,IAAMA,EAAE,IAAM,WAAWuhB,CAAW,EAAI,WAAWC,CAAY,EAC9H,OAAQ,CAAC,CAAE,EAAArH,CAAG,EAAE,CAAE,WAAAsH,EAAa,IAAK,cAAAC,EAAgB,GAAG,IAAOvH,EAAE,IAAMA,EAAE,IAAM,WAAWsH,CAAU,EAAI,WAAWC,CAAa,EAC/H,IAAK,CAACT,EAAO,CAAE,IAAA3I,CAAG,IAAO,WAAWA,CAAG,EACvC,KAAM,CAAC2I,EAAO,CAAE,KAAA1I,CAAI,IAAO,WAAWA,CAAI,EAC1C,OAAQ,CAAC,CAAE,EAAA4B,CAAG,EAAE,CAAE,IAAA7B,CAAK,IAAK,WAAWA,CAAG,GAAK6B,EAAE,IAAMA,EAAE,KACzD,MAAO,CAAC,CAAE,EAAAna,CAAG,EAAE,CAAE,KAAAuY,CAAM,IAAK,WAAWA,CAAI,GAAKvY,EAAE,IAAMA,EAAE,KAE1D,EAAG8gB,GAAuB,EAAG,EAAE,EAC/B,EAAGA,GAAuB,EAAG,EAAE,CACnC,EACMa,GAA2Bl8B,EAAA,CAACqM,EAAQnL,EAAei7B,IAAgB,CACrE,MAAMC,EAAal7B,EAAc,qBAC3B2O,EAAU3O,EAAc,QACxBm7B,EAAuB,iBAAiBxsB,CAAO,EAC/C,CAAE,QAAAysB,CAAS,EAAGD,EACd3uB,EAAS,CAAA,EAGX4uB,IAAY,QACZp7B,EAAc,eAAe,UAAWmL,EAAO,SAAW,OAAO,EAKrE8vB,EAAY,QAASt5B,GAAQ,CACzB6K,EAAO7K,GAAOg5B,GAAiBh5B,GAAKu5B,EAAYC,CAAoB,CAC5E,CAAK,EAEDn7B,EAAc,OAAM,EACpB,MAAMq7B,EAAar7B,EAAc,qBACjC,OAAAi7B,EAAY,QAASt5B,GAAQ,CAGzB,MAAM+C,EAAQ1E,EAAc,SAAS2B,CAAG,EACxCk4B,GAAoBn1B,EAAO8H,EAAO7K,EAAI,EACtCwJ,EAAOxJ,GAAOg5B,GAAiBh5B,GAAK05B,EAAYF,CAAoB,CAC5E,CAAK,EACMhwB,CACX,EA5BiC,4BA6B3BmwB,GAAmCx8B,EAAA,CAACkB,EAAemL,EAAQqB,EAAS,CAAE,EAAEoE,EAAgB,KAAO,CACjGzF,EAAS,CAAE,GAAGA,GACdyF,EAAgB,CAAE,GAAGA,GACrB,MAAM2qB,EAAuB,OAAO,KAAKpwB,CAAM,EAAE,OAAOwuB,EAAe,EAGvE,IAAI6B,EAAyB,CAAA,EACzBC,EAAsC,GAC1C,MAAMC,EAAuB,CAAA,EA4E7B,GA3EAH,EAAqB,QAAS55B,GAAQ,CAClC,MAAM+C,EAAQ1E,EAAc,SAAS2B,CAAG,EACxC,GAAI,CAAC3B,EAAc,SAAS2B,CAAG,EAC3B,OACJ,IAAIqd,EAAOxS,EAAO7K,GACdg6B,EAAWhR,GAAuB3L,CAAI,EAC1C,MAAMlD,EAAK3Q,EAAOxJ,GAClB,IAAIi6B,EAKJ,GAAInsB,GAAkBqM,CAAE,EAAG,CACvB,MAAM+f,EAAe/f,EAAG,OAClBggB,EAAYhgB,EAAG,KAAO,KAAO,EAAI,EACvCkD,EAAOlD,EAAGggB,GACVH,EAAWhR,GAAuB3L,CAAI,EACtC,QAAS3V,EAAIyyB,EAAWzyB,EAAIwyB,EAAcxyB,IACjCuyB,EAMDhjB,GAAU+R,GAAuB7O,EAAGzS,EAAE,IAAMuyB,CAAgD,EAL5FA,EAASjR,GAAuB7O,EAAGzS,EAAE,CAQhD,MAEGuyB,EAASjR,GAAuB7O,CAAE,EAEtC,GAAI6f,IAAaC,EAGb,GAAI9B,GAAc6B,CAAQ,GAAK7B,GAAc8B,CAAM,EAAG,CAClD,MAAM/W,EAAUngB,EAAM,MAClB,OAAOmgB,GAAY,UACnBngB,EAAM,IAAI,WAAWmgB,CAAO,CAAC,EAE7B,OAAO/I,GAAO,SACd3Q,EAAOxJ,GAAO,WAAWma,CAAE,EAEtB,MAAM,QAAQA,CAAE,GAAK8f,IAAWn1B,IACrC0E,EAAOxJ,GAAOma,EAAG,IAAI,UAAU,EAEtC,MACS6f,GAAa,KAA8B,OAASA,EAAS,aAClEC,GAAW,KAA4B,OAASA,EAAO,aACvD5c,IAAS,GAAKlD,IAAO,GAGlBkD,IAAS,EACTta,EAAM,IAAIk3B,EAAO,UAAU5c,CAAI,CAAC,EAGhC7T,EAAOxJ,GAAOg6B,EAAS,UAAU7f,CAAE,GAMlC2f,IACDD,EACIf,GAAgCz6B,CAAa,EACjDy7B,EAAsC,IAE1CC,EAAqB,KAAK/5B,CAAG,EAC7BiP,EAAcjP,GACViP,EAAcjP,KAAS,OACjBiP,EAAcjP,GACdwJ,EAAOxJ,GACjBk4B,GAAoBn1B,EAAOoX,CAAE,EAG7C,CAAK,EACG4f,EAAqB,OAAQ,CAC7B,MAAMK,EAAUL,EAAqB,QAAQ,QAAQ,GAAK,EACpD,OAAO,YACP,KACAM,EAAkBhB,GAAyB7vB,EAAQnL,EAAe07B,CAAoB,EAE5F,OAAIF,EAAuB,QACvBA,EAAuB,QAAQ,CAAC,CAAC75B,EAAK+C,CAAK,IAAM,CAC7C1E,EAAc,SAAS2B,CAAG,EAAE,IAAI+C,CAAK,CACrD,CAAa,EAGL1E,EAAc,OAAM,EAEhBhB,GAAa+8B,IAAY,MACzB,OAAO,SAAS,CAAE,IAAKA,CAAS,CAAA,EAE7B,CAAE,OAAQC,EAAiB,cAAAprB,EACrC,KAEG,OAAO,CAAE,OAAAzF,EAAQ,cAAAyF,EAEzB,EA1GyC,oCAkHzC,SAASqrB,GAAej8B,EAAemL,EAAQqB,EAAQoE,EAAe,CAClE,OAAOgpB,GAAiBzuB,CAAM,EACxBmwB,GAAiCt7B,EAAemL,EAAQqB,EAAQoE,CAAa,EAC7E,CAAE,OAAAzF,EAAQ,cAAAyF,EACpB,CAJS9R,EAAAm9B,GAAA,kBC3NT,MAAMC,GAAkBp9B,EAAA,CAACkB,EAAemL,EAAQqB,EAAQoE,IAAkB,CACtE,MAAMD,EAAW8oB,GAAoBz5B,EAAemL,EAAQyF,CAAa,EACzE,OAAAzF,EAASwF,EAAS,OAClBC,EAAgBD,EAAS,cAClBsrB,GAAej8B,EAAemL,EAAQqB,EAAQoE,CAAa,CACtE,EALwB,mBCNlBurB,GAAuB,CAAE,QAAS,MAClCC,GAA2B,CAAE,QAAS,EAAO,ECCnD,SAASC,IAA2B,CAEhC,GADAD,GAAyB,QAAU,GAC/B,EAACp9B,EAEL,GAAI,OAAO,WAAY,CACnB,MAAMs9B,EAAmB,OAAO,WAAW,0BAA0B,EAC/DC,EAA8Bz9B,EAAA,IAAOq9B,GAAqB,QAAUG,EAAiB,QAAvD,+BACpCA,EAAiB,YAAYC,CAA2B,EACxDA,GACH,MAEGJ,GAAqB,QAAU,EAEvC,CAbSr9B,EAAAu9B,GAAA,4BCET,SAASG,GAA4B7tB,EAAS2J,EAAMC,EAAM,CACtD,KAAM,CAAE,WAAAgU,CAAY,EAAGjU,EACvB,UAAW3W,KAAO2W,EAAM,CACpB,MAAMmkB,EAAYnkB,EAAK3W,GACjB+6B,EAAYnkB,EAAK5W,GACvB,GAAI8C,EAAcg4B,CAAS,EAKvB9tB,EAAQ,SAAShN,EAAK86B,CAAS,EAC3B/Q,GAAwBa,CAAU,GAClCA,EAAW,IAAI5qB,CAAG,UAUjB8C,EAAci4B,CAAS,EAK5B/tB,EAAQ,SAAShN,EAAK4oB,GAAYkS,CAAS,CAAC,EACxC/Q,GAAwBa,CAAU,GAClCA,EAAW,OAAO5qB,CAAG,UAGpB+6B,IAAcD,EAMnB,GAAI9tB,EAAQ,SAAShN,CAAG,EAAG,CACvB,MAAMg7B,EAAgBhuB,EAAQ,SAAShN,CAAG,EAE1C,CAACg7B,EAAc,aAAeA,EAAc,IAAIF,CAAS,CAC5D,KACI,CACD,MAAMG,EAAcjuB,EAAQ,eAAehN,CAAG,EAC9CgN,EAAQ,SAAShN,EAAK4oB,GAAYqS,IAAgB,OAAYA,EAAcH,CAAS,CAAC,CACzF,CAER,CAED,UAAW96B,KAAO4W,EACVD,EAAK3W,KAAS,QACdgN,EAAQ,YAAYhN,CAAG,EAE/B,OAAO2W,CACX,CAvDSxZ,EAAA09B,GAAA,+BCeT,MAAMK,GAAe,OAAO,KAAKr7B,EAAkB,EAC7Cs7B,GAAcD,GAAa,OAC3BE,GAAoB,CACtB,iBACA,oBACA,SACA,UACA,sBACA,gBACA,uBACA,yBACJ,EAKA,MAAMC,EAAc,CAChB,YAAY,CAAE,OAAAt9B,EAAQ,MAAAF,EAAO,oBAAAK,EAAqB,YAAAN,CAAc,EAAE8K,EAAU,GAAI,CAK5E,KAAK,QAAU,KAIf,KAAK,SAAW,IAAI,IAIpB,KAAK,cAAgB,GACrB,KAAK,sBAAwB,GAQ7B,KAAK,mBAAqB,KAM1B,KAAK,OAAS,IAAI,IAKlB,KAAK,UAAY,GAKjB,KAAK,mBAAqB,IAAI,IAM9B,KAAK,iBAAmB,GAIxB,KAAK,OAAS,GAMd,KAAK,uBAAyB,GAC9B,KAAK,aAAe,IAAM,KAAK,OAAO,SAAU,KAAK,YAAY,EACjE,KAAK,OAAS,IAAM,CACZ,CAAC,KAAK,UAEV,KAAK,aAAY,EACjB,KAAK,eAAe,KAAK,QAAS,KAAK,YAAa,KAAK,MAAM,MAAO,KAAK,UAAU,EACjG,EACQ,KAAK,eAAiB,IAAM2T,EAAK,OAAO,KAAK,OAAQ,GAAO,EAAI,EAChE,KAAM,CAAE,aAAA5T,EAAc,YAAA2E,CAAa,EAAGxP,EACtC,KAAK,aAAe6K,EACpB,KAAK,WAAa,CAAE,GAAGA,GACvB,KAAK,cAAgB5K,EAAM,QAAU,CAAE,GAAG4K,CAAc,EAAG,GAC3D,KAAK,YAAc2E,EACnB,KAAK,OAASrP,EACd,KAAK,MAAQF,EACb,KAAK,MAAQE,EAASA,EAAO,MAAQ,EAAI,EACzC,KAAK,oBAAsBG,EAC3B,KAAK,QAAUwK,EACf,KAAK,sBAAwB1J,GAAsBnB,CAAK,EACxD,KAAK,cAAgBqB,GAAcrB,CAAK,EACpC,KAAK,gBACL,KAAK,gBAAkB,IAAI,KAE/B,KAAK,uBAAyB,QAAQE,GAAUA,EAAO,OAAO,EAW9D,KAAM,CAAE,WAAA6sB,KAAe0Q,CAAmB,EAAK,KAAK,4BAA4Bz9B,CAAK,EACrF,UAAWmC,KAAOs7B,EAAqB,CACnC,MAAMv4B,EAAQu4B,EAAoBt7B,GAC9ByI,EAAazI,KAAS,QAAa8C,EAAcC,CAAK,IACtDA,EAAM,IAAI0F,EAAazI,GAAM,EAAK,EAC9B+pB,GAAwBa,CAAU,GAClCA,EAAW,IAAI5qB,CAAG,EAG7B,CACJ,CAQD,4BAA4Bu7B,EAAQ,CAChC,MAAO,EACV,CACD,MAAM58B,EAAU,CACZ,IAAIiI,EACJ,KAAK,QAAUjI,EACX,KAAK,YACL,KAAK,WAAW,MAAMA,CAAQ,EAE9B,KAAK,QAAU,KAAK,eAAiB,CAAC,KAAK,wBAC3C,KAAK,uBAAyBiI,EAAK,KAAK,UAAY,MAAQA,IAAO,OAAS,OAASA,EAAG,gBAAgB,IAAI,GAEhH,KAAK,OAAO,QAAQ,CAAC7D,EAAO/C,IAAQ,KAAK,kBAAkBA,EAAK+C,CAAK,CAAC,EACjE03B,GAAyB,SAC1BC,KAEJ,KAAK,mBACD,KAAK,sBAAwB,QACvB,GACA,KAAK,sBAAwB,SACzB,GACAF,GAAqB,QAC/B,KAAK,QACL,KAAK,OAAO,SAAS,IAAI,IAAI,EACjC,KAAK,SAAS,KAAK,KAAK,CAC3B,CACD,SAAU,CACN,IAAI5zB,EAAIC,EAAIC,GACXF,EAAK,KAAK,cAAgB,MAAQA,IAAO,QAAkBA,EAAG,QAAO,EACtE4V,EAAW,OAAO,KAAK,YAAY,EACnCA,EAAW,OAAO,KAAK,MAAM,EAC7B,KAAK,mBAAmB,QAASgf,GAAWA,EAAQ,CAAA,GACnD30B,EAAK,KAAK,yBAA2B,MAAQA,IAAO,QAAkBA,EAAG,KAAK,IAAI,GAClFC,EAAK,KAAK,UAAY,MAAQA,IAAO,QAAkBA,EAAG,SAAS,OAAO,IAAI,EAC/E,UAAW9G,KAAO,KAAK,OACnB,KAAK,OAAOA,GAAK,MAAK,EAE1B,KAAK,QAAU,IAClB,CACD,kBAAkBA,EAAK+C,EAAO,CAC1B,MAAM04B,EAAmB94B,GAAe,IAAI3C,CAAG,EACzC07B,EAAiB34B,EAAM,SAAUk4B,GAAgB,CACnD,KAAK,aAAaj7B,GAAOi7B,EACzB,KAAK,MAAM,UACP5e,EAAK,OAAO,KAAK,aAAc,GAAO,EAAI,EAC1Cof,GAAoB,KAAK,aACzB,KAAK,WAAW,iBAAmB,GAEnD,CAAS,EACKE,EAAwB54B,EAAM,gBAAgB,KAAK,cAAc,EACvE,KAAK,mBAAmB,IAAI/C,EAAK,IAAM,CACnC07B,IACAC,GACZ,CAAS,CACJ,CACD,iBAAiBC,EAAO,CAIpB,MAAI,CAAC,KAAK,SACN,CAAC,KAAK,0BACN,KAAK,OAASA,EAAM,KACb,EACJ,KAAK,yBAAyB,KAAK,QAASA,EAAM,OAAO,CACnE,CACD,aAAaC,EAAeC,EAAUl7B,EAAmBS,EAAc06B,EAA2Bt6B,EAA0B,CACxH,MAAM1B,EAAW,CAAA,EAQjB,QAAS2H,EAAI,EAAGA,EAAIyzB,GAAazzB,IAAK,CAClC,MAAMzI,EAAOi8B,GAAaxzB,GACpB,CAAE,UAAAs0B,EAAW,UAAAr+B,CAAW,EAAGkC,GAAmBZ,GAMhD+8B,EAAUH,CAAa,GAAKl+B,GAC5BoC,EAAS,KAAK6M,EAAa,QAAA,cAACjP,EAAW,CACnC,IAAKsB,EACL,GAAG48B,EACH,cAAe,IAClB,CAAA,CAAC,CAET,CACD,GAAI,CAAC,KAAK,YAAcE,EAA2B,CAC/C,KAAK,WAAa,IAAIA,EAA0B16B,EAAc,KAAK,aAAc,KAAK,QAAU,KAAK,OAAO,UAAU,EACtH,KAAM,CAAE,SAAAH,EAAU,OAAA2B,EAAQ,KAAAkP,EAAM,gBAAAujB,EAAiB,aAAA2G,CAAc,EAAGJ,EAClE,KAAK,WAAW,WAAW,CACvB,SAAA36B,EACA,OAAA2B,EACA,oBAAqB,QAAQkP,CAAI,GAC5BujB,GAAmBh3B,GAAYg3B,CAAe,EACnD,cAAe,KACf,eAAgB,IAAM,KAAK,eAAgB,EAQ3C,cAAe,OAAOzyB,GAAW,SAAWA,EAAS,OACrD,uBAAwBpB,EACxB,aAAAw6B,CAChB,CAAa,CACJ,CACD,OAAOl8B,CACV,CACD,cAAe,CACX,KAAK,MAAM,KAAK,YAAa,KAAK,aAAc,KAAK,QAAS,KAAK,KAAK,CAC3E,CAMD,oBAAqB,CACjB,OAAO,KAAK,QACN,KAAK,2BAA2B,KAAK,QAAS,KAAK,KAAK,EACxD0xB,GACT,CACD,eAAezxB,EAAK,CAChB,OAAO,KAAK,aAAaA,EAC5B,CACD,eAAeA,EAAK+C,EAAO,CACvB,KAAK,aAAa/C,GAAO+C,CAC5B,CAQD,qBAAqByG,EAAQ0yB,EAAY,GAAM,CAC3C,OAAO,KAAK,iCAAiC1yB,EAAQ,KAAK,MAAO0yB,CAAS,CAC7E,CAKD,SAASr+B,EAAO,EACRA,EAAM,mBAAqB,KAAK,MAAM,oBACtC,KAAK,eAAc,EAEvB,KAAK,MAAQA,EAIb,QAAS6J,EAAI,EAAGA,EAAI0zB,GAAkB,OAAQ1zB,IAAK,CAC/C,MAAM1H,EAAMo7B,GAAkB1zB,GAC1B,KAAK,uBAAuB1H,KAC5B,KAAK,uBAAuBA,KAC5B,OAAO,KAAK,uBAAuBA,IAEvC,MAAMgR,EAAWnT,EAAM,KAAOmC,GAC1BgR,IACA,KAAK,uBAAuBhR,GAAO,KAAK,GAAGA,EAAKgR,CAAQ,EAE/D,CACD,KAAK,iBAAmB6pB,GAA4B,KAAM,KAAK,4BAA4Bh9B,CAAK,EAAG,KAAK,gBAAgB,CAC3H,CACD,UAAW,CACP,OAAO,KAAK,KACf,CAID,WAAWoB,EAAM,CACb,IAAI2H,EACJ,OAAQA,EAAK,KAAK,MAAM,YAAc,MAAQA,IAAO,OAAS,OAASA,EAAG3H,EAC7E,CAID,sBAAuB,CACnB,OAAO,KAAK,MAAM,UACrB,CACD,uBAAwB,CACpB,OAAO,KAAK,MAAM,kBACrB,CACD,uBAAwB,CACpB,IAAI2H,EACJ,OAAO,KAAK,cAAgB,MAAQA,EAAK,KAAK,UAAY,MAAQA,IAAO,OAAS,OAASA,EAAG,sBAAqB,CACtH,CACD,kBAAkBu1B,EAAgB,GAAO,CACrC,IAAIv1B,EAAIC,EACR,GAAIs1B,EACA,OAAQv1B,EAAK,KAAK,UAAY,MAAQA,IAAO,OAAS,OAASA,EAAG,kBAAiB,EACvF,GAAI,CAAC,KAAK,sBAAuB,CAC7B,MAAMxH,IAAYyH,EAAK,KAAK,UAAY,MAAQA,IAAO,OAAS,OAASA,EAAG,kBAAiB,IAAO,CAAA,EACpG,OAAI,KAAK,MAAM,UAAY,SACvBzH,EAAQ,QAAU,KAAK,MAAM,SAE1BA,CACV,CACD,MAAMA,EAAU,CAAA,EAChB,QAASsI,EAAI,EAAGA,EAAI00B,GAAiB10B,IAAK,CACtC,MAAMzI,EAAOF,GAAa2I,GACpBhI,EAAO,KAAK,MAAMT,IACpBL,GAAec,CAAI,GAAKA,IAAS,MACjCN,EAAQH,GAAQS,EAEvB,CACD,OAAON,CACV,CAID,gBAAgByT,EAAO,CACnB,IAAIjM,EACJ,MAAMy1B,EAAqB,KAAK,wBAChC,GAAIA,EACA,OAACz1B,EAAKy1B,EAAmB,mBAAqB,MAAQz1B,IAAO,QAAkBA,EAAG,IAAIiM,CAAK,EACpF,IAAMwpB,EAAmB,gBAAgB,OAAOxpB,CAAK,CAEnE,CAID,SAAS7S,EAAK+C,EAAO,CAEb,KAAK,SAAS/C,CAAG,GACjB,KAAK,YAAYA,CAAG,EACxB,KAAK,OAAO,IAAIA,EAAK+C,CAAK,EAC1B,KAAK,aAAa/C,GAAO+C,EAAM,IAAG,EAClC,KAAK,kBAAkB/C,EAAK+C,CAAK,CACpC,CAID,YAAY/C,EAAK,CACb,IAAI4G,EACJ,KAAK,OAAO,OAAO5G,CAAG,GACrB4G,EAAK,KAAK,mBAAmB,IAAI5G,CAAG,KAAO,MAAQ4G,IAAO,QAAkBA,EAAE,EAC/E,KAAK,mBAAmB,OAAO5G,CAAG,EAClC,OAAO,KAAK,aAAaA,GACzB,KAAK,2BAA2BA,EAAK,KAAK,WAAW,CACxD,CAID,SAASA,EAAK,CACV,OAAO,KAAK,OAAO,IAAIA,CAAG,CAC7B,CAKD,SAASA,EAAKiI,EAAc,CACxB,GAAI,KAAK,MAAM,QAAU,KAAK,MAAM,OAAOjI,GACvC,OAAO,KAAK,MAAM,OAAOA,GAE7B,IAAI+C,EAAQ,KAAK,OAAO,IAAI/C,CAAG,EAC/B,OAAI+C,IAAU,QAAakF,IAAiB,SACxClF,EAAQ6lB,GAAY3gB,CAAY,EAChC,KAAK,SAASjI,EAAK+C,CAAK,GAErBA,CACV,CAMD,UAAU/C,EAAK,CACX,OAAO,KAAK,aAAaA,KAAS,QAAa,CAAC,KAAK,QAC/C,KAAK,aAAaA,GAClB,KAAK,sBAAsB,KAAK,QAASA,EAAK,KAAK,OAAO,CACnE,CAKD,cAAcA,EAAK+C,EAAO,CACtB,KAAK,WAAW/C,GAAO+C,CAC1B,CAKD,cAAc/C,EAAK,CACf,IAAI4G,EACJ,KAAM,CAAE,QAAAvH,CAAO,EAAK,KAAK,MACnBi9B,EAAmB,OAAOj9B,GAAY,UAAY,OAAOA,GAAY,UACpEuH,EAAK8G,GAAwB,KAAK,MAAOrO,CAAO,KAAO,MAAQuH,IAAO,OAAS,OAASA,EAAG5G,GAC5F,OAIN,GAAIX,GAAWi9B,IAAqB,OAChC,OAAOA,EAMX,MAAM9yB,EAAS,KAAK,uBAAuB,KAAK,MAAOxJ,CAAG,EAC1D,OAAIwJ,IAAW,QAAa,CAAC1G,EAAc0G,CAAM,EACtCA,EAKJ,KAAK,cAAcxJ,KAAS,QAC/Bs8B,IAAqB,OACnB,OACA,KAAK,WAAWt8B,EACzB,CACD,GAAG0P,EAAW4C,EAAU,CACpB,OAAK,KAAK,OAAO5C,KACb,KAAK,OAAOA,GAAa,IAAI0Y,IAE1B,KAAK,OAAO1Y,GAAW,IAAI4C,CAAQ,CAC7C,CACD,OAAO5C,KAAc6sB,EAAM,CACvB,IAAI31B,GACHA,EAAK,KAAK,OAAO8I,MAAgB,MAAQ9I,IAAO,QAAkBA,EAAG,OAAO,GAAG21B,CAAI,CACvF,CACL,CAjbMp/B,EAAAk+B,GAAA,iBAkbN,MAAMt8B,GAAe,CAAC,UAAW,GAAGssB,EAAoB,EAClD+Q,GAAkBr9B,GAAa,OCndrC,MAAMy9B,WAAyBnB,EAAc,CACzC,yBAAyBn4B,EAAGC,EAAG,CAM3B,OAAOD,EAAE,wBAAwBC,CAAC,EAAI,EAAI,EAAI,EACjD,CACD,uBAAuBtF,EAAOmC,EAAK,CAC/B,IAAI4G,EACJ,OAAQA,EAAK/I,EAAM,SAAW,MAAQ+I,IAAO,OAAS,OAASA,EAAG5G,EACrE,CACD,2BAA2BA,EAAK,CAAE,KAAA4I,EAAM,MAAAD,CAAK,EAAI,CAC7C,OAAOC,EAAK5I,GACZ,OAAO2I,EAAM3I,EAChB,CACD,iCAAiC,CAAE,WAAAkP,EAAY,cAAAD,KAAkBzF,CAAM,EAAI,CAAE,gBAAAizB,CAAiB,EAAEC,EAAW,CACvG,IAAI7xB,EAASgf,GAAUrgB,EAAQ0F,GAAc,CAAA,EAAI,IAAI,EAYrD,GARIutB,IACIxtB,IACAA,EAAgBwtB,EAAgBxtB,CAAa,GAC7CzF,IACAA,EAASizB,EAAgBjzB,CAAM,GAC/BqB,IACAA,EAAS4xB,EAAgB5xB,CAAM,IAEnC6xB,EAAW,CACXlT,GAAwB,KAAMhgB,EAAQqB,CAAM,EAC5C,MAAMhD,EAAS0yB,GAAgB,KAAM/wB,EAAQqB,EAAQoE,CAAa,EAClEA,EAAgBpH,EAAO,cACvB2B,EAAS3B,EAAO,MACnB,CACD,MAAO,CACH,WAAAqH,EACA,cAAAD,EACA,GAAGzF,CACf,CACK,CACL,CA1CMrM,EAAAq/B,GAAA,oBCKN,SAASG,GAAiB3vB,EAAS,CAC/B,OAAO,OAAO,iBAAiBA,CAAO,CAC1C,CAFS2vB,EAAAA,GAAAA,sBAGT,MAAMC,WAA0BJ,EAAiB,CAC7C,sBAAsB79B,EAAUqB,EAAK,CACjC,GAAI2C,GAAe,IAAI3C,CAAG,EAAG,CACzB,MAAM68B,EAAcliB,GAAoB3a,CAAG,EAC3C,OAAO68B,GAAcA,EAAY,SAAW,CAC/C,KACI,CACD,MAAMC,EAAgBH,GAAiBh+B,CAAQ,EACzCoE,GAASa,GAAc5D,CAAG,EAC1B88B,EAAc,iBAAiB98B,CAAG,EAClC88B,EAAc98B,KAAS,EAC7B,OAAO,OAAO+C,GAAU,SAAWA,EAAM,KAAI,EAAKA,CACrD,CACJ,CACD,2BAA2BpE,EAAU,CAAE,mBAAAivB,GAAsB,CACzD,OAAOqG,GAAmBt1B,EAAUivB,CAAkB,CACzD,CACD,MAAMxgB,EAAa3E,EAAcC,EAAS7K,EAAO,CAC7C0K,GAAgB6E,EAAa3E,EAAcC,EAAS7K,EAAM,iBAAiB,CAC9E,CACD,4BAA4BA,EAAO,CAC/B,OAAOyP,GAA4BzP,CAAK,CAC3C,CACD,eAAec,EAAUyO,EAAaxD,EAAWqD,EAAY,CACzDF,GAAWpO,EAAUyO,EAAaxD,EAAWqD,CAAU,CAC1D,CACL,CA1BM9P,EAAAy/B,GAAA,qBCDN,MAAMG,WAAyBP,EAAiB,CAC5C,aAAc,CACV,MAAM,GAAG,SAAS,EAClB,KAAK,SAAW,EACnB,CACD,uBAAuB3+B,EAAOmC,EAAK,CAC/B,OAAOnC,EAAMmC,EAChB,CACD,sBAAsBrB,EAAUqB,EAAK,CACjC,IAAI4G,EACJ,OAAIjE,GAAe,IAAI3C,CAAG,IACb4G,EAAK+T,GAAoB3a,CAAG,KAAO,MAAQ4G,IAAO,OAAS,OAASA,EAAG,UAAY,GAEhG5G,EAAOkN,GAAoB,IAAIlN,CAAG,EAAuBA,EAAnB6M,GAAY7M,CAAG,EAC9CrB,EAAS,aAAaqB,CAAG,EACnC,CACD,4BAA6B,CACzB,OAAOyxB,EAAS,CACnB,CACD,4BAA4B5zB,EAAO,CAC/B,OAAOyP,GAA4BzP,CAAK,CAC3C,CACD,MAAMuP,EAAa3E,EAAcC,EAAS7K,EAAO,CAC7CiO,GAAcsB,EAAa3E,EAAcC,EAAS,KAAK,SAAU7K,EAAM,iBAAiB,CAC3F,CACD,eAAec,EAAUyO,EAAaxD,EAAWqD,EAAY,CACzDE,GAAUxO,EAAUyO,EAAaxD,EAAWqD,CAAU,CACzD,CACD,MAAMtO,EAAU,CACZ,KAAK,SAAWwN,GAASxN,EAAS,OAAO,EACzC,MAAM,MAAMA,CAAQ,CACvB,CACL,CAhCMxB,EAAA4/B,GAAA,oBCPN,MAAMC,GAAyB7/B,EAAA,CAACQ,EAAW+K,IAChCpG,GAAe3E,CAAS,EACzB,IAAIo/B,GAAiBr0B,EAAS,CAAE,2BAA4B,EAAK,CAAE,EACnE,IAAIk0B,GAAkBl0B,EAAS,CAAE,2BAA4B,EAAM,CAAA,EAH9C,0BCF/B,SAASu0B,GAAgBC,EAAQjO,EAAM,CACnC,OAAIA,EAAK,MAAQA,EAAK,IACX,EACHiO,GAAUjO,EAAK,IAAMA,EAAK,KAAQ,GAC9C,CAJS9xB,EAAA8/B,GAAA,mBAYT,MAAME,GAAsB,CACxB,QAAS,CAACjxB,EAAQonB,IAAS,CACvB,GAAI,CAACA,EAAK,OACN,OAAOpnB,EAKX,GAAI,OAAOA,GAAW,SAClB,GAAIpH,EAAG,KAAKoH,CAAM,EACdA,EAAS,WAAWA,CAAM,MAG1B,QAAOA,EAOf,MAAMwL,EAAIulB,GAAgB/wB,EAAQonB,EAAK,OAAO,CAAC,EACzCzB,EAAIoL,GAAgB/wB,EAAQonB,EAAK,OAAO,CAAC,EAC/C,MAAO,GAAG5b,MAAMma,IACnB,CACL,EClCMuL,GAAW,QACXC,GAAmB,CACrB,QAAS,CAACnxB,EAAQ,CAAE,UAAAgnB,EAAW,gBAAAoK,CAAe,IAAO,CACjD,MAAMC,EAAWrxB,EAIXsxB,EAAuBtxB,EAAO,SAAS,MAAM,EAC7CuxB,EAAe,CAAA,EACjBD,IACAtxB,EAASA,EAAO,QAAQsrB,GAAmBE,IACvC+F,EAAa,KAAK/F,CAAK,EAChB0F,GACV,GAEL,MAAMM,EAAS51B,EAAQ,MAAMoE,CAAM,EAEnC,GAAIwxB,EAAO,OAAS,EAChB,OAAOH,EACX,MAAM5e,EAAW7W,EAAQ,kBAAkBoE,CAAM,EAC3CpB,EAAS,OAAO4yB,EAAO,IAAO,SAAW,EAAI,EAE7CC,EAASL,EAAgB,EAAE,MAAQpK,EAAU,EAC7C0K,EAASN,EAAgB,EAAE,MAAQpK,EAAU,EACnDwK,EAAO,EAAI5yB,IAAW6yB,EACtBD,EAAO,EAAI5yB,IAAW8yB,EAOtB,MAAMC,EAAezgB,EAAIugB,EAAQC,EAAQ,EAAG,EAExC,OAAOF,EAAO,EAAI5yB,IAAY,WAC9B4yB,EAAO,EAAI5yB,IAAW+yB,GAEtB,OAAOH,EAAO,EAAI5yB,IAAY,WAC9B4yB,EAAO,EAAI5yB,IAAW+yB,GAC1B,IAAIp2B,EAASkX,EAAS+e,CAAM,EAC5B,GAAIF,EAAsB,CACtB,IAAI91B,EAAI,EACRD,EAASA,EAAO,QAAQ21B,GAAU,IAAM,CACpC,MAAMU,EAAcL,EAAa/1B,GACjC,OAAAA,IACOo2B,CACvB,CAAa,CACJ,CACD,OAAOr2B,CACV,CACL,EC5CA,MAAMs2B,WAAiCv9B,GAAe7C,SAAU,CAM5DqgC,mBAAoB,CAChB,KAAM,CAAE3/B,cAAAA,EAAe4/B,YAAAA,EAAaC,kBAAAA,EAAmBh9B,SAAAA,GAAa,KAAKrD,MACnE,CAAEoP,WAAAA,CAAY,EAAG5O,EACvBmE,GAAkB27B,EAAsB,EACpClxB,IACIgxB,EAAYG,OACZH,EAAYG,MAAMC,IAAIpxB,CAAU,EAChCixB,GAAqBA,EAAkB3nB,UAAYrV,GACnDg9B,EAAkB3nB,SAAStJ,CAAU,EAEzCA,EAAW4H,KAAKypB,YAChBrxB,EAAWsxB,iBAAiB,oBAAqB,IAAM,CACnD,KAAKlR,aAAY,CACrB,CAAC,EACDpgB,EAAWuxB,WAAW,CAClB,GAAGvxB,EAAWvE,QACd4N,eAAgB,IAAM,KAAK+W,aAAY,CAC3C,CAAC,GAELltB,GAAsBs+B,eAAiB,EAC3C,CACAC,wBAAwBC,EAAW,CAC/B,KAAM,CAAEC,iBAAAA,EAAkBvgC,cAAAA,EAAe0T,KAAAA,EAAMsE,UAAAA,GAAc,KAAKxY,MAC5DoP,EAAa5O,EAAc4O,WACjC,OAAKA,IASLA,EAAWoJ,UAAYA,EACnBtE,GACA4sB,EAAUC,mBAAqBA,GAC/BA,IAAqBt9B,OACrB2L,EAAW4xB,WAAU,EAGrB,KAAKxR,aAAY,EAEjBsR,EAAUtoB,YAAcA,IACpBA,EACApJ,EAAW6xB,QAAO,EAEZ7xB,EAAW8xB,YAMjB1iB,EAAK2iB,WAAW,IAAM,CAClB,IAAIp4B,EACGA,GAAAA,EAAKqG,EAAWgyB,SAAQ,KAAQ,MAAQr4B,IAAO,SAAkBA,EAAGs4B,QAAQ1zB,QAC/E,KAAK6hB,aAAY,CAEzB,CAAC,IAGF,IACX,CACA8R,oBAAqB,CACjB,KAAM,CAAElyB,WAAAA,CAAW,EAAI,KAAKpP,MAAMQ,cAC9B4O,IACAA,EAAW4H,KAAKypB,YACZ,CAACrxB,EAAW2Y,kBAAoB3Y,EAAWmyB,OAAM,GACjD,KAAK/R,aAAY,EAG7B,CACAgS,sBAAuB,CACnB,KAAM,CAAEhhC,cAAAA,EAAe4/B,YAAAA,EAAaC,kBAAmBoB,GAAoB,KAAKzhC,MAC1E,CAAEoP,WAAAA,CAAY,EAAG5O,EACnB4O,IACAA,EAAWsyB,0BAAyB,EAChCtB,GAAgB,MAA0CA,EAAYG,OACtEH,EAAYG,MAAM5C,OAAOvuB,CAAU,EACnCqyB,GAAmB,MAA6CA,EAAeE,YAC/EF,EAAeE,WAAWvyB,CAAU,EAEhD,CACAogB,cAAe,CACX,KAAM,CAAEA,aAAAA,GAAiB,KAAKxvB,MAC9BwvB,GAAiB,MAA2CA,GAChE,CACA7E,QAAS,CACL,OAAO,IACX,CACJ,CA/FMuV,EAAAA,GAAAA,4BAgGN,SAAS0B,GAAc5hC,EAAO,CAC1B,KAAM,CAACwY,EAAWgX,CAAY,EAAIjX,GAAW,EACvC6nB,EAAc/gC,qBAAWoD,EAAkB,EACjD,OAAAqB,GAAAo8B,GAAA,CAAA,GAAoElgC,EAAK,YAAeogC,EAAW,kBAAqB/gC,EAAU,QAAA,WAACuD,EAAwB,EAAC,UAAa4V,EAAS,aAAgBgX,CAAY,CAAA,CAClN,CAJSoS,EAAAA,GAAAA,iBAKT,MAAMtB,GAAyB,CAC3BuB,aAAc,CACV,GAAGvC,GACHwC,QAAS,CACL,sBACA,uBACA,yBACA,yBAAyB,CAEhC,EACDC,oBAAqBzC,GACrB0C,qBAAsB1C,GACtB2C,uBAAwB3C,GACxB4C,wBAAyB5C,GACzB6C,UAAW3C,EACf,EC5HM4C,GAAiB,CACnB,cAAeR,EACnB,EC2BA,SAASngC,GAAQ+d,EAAMlD,EAAIjL,EAAa,CAAA,EAAI,CACxC,MAAMnM,EAAQD,EAAcua,CAAI,EAAIA,EAAOuL,GAAYvL,CAAI,EAC3D,OAAA0I,GAAe,GAAIhjB,EAAOoX,EAAIjL,CAAU,EACjC,CACH,KAAM,IAAMnM,EAAM,KAAM,EACxB,YAAa,IAAMA,EAAM,YAAa,CAC9C,CACA,CAPS5F,EAAAmC,GAAA,WCzBT,MAAM4gC,GAAU,CAAC,UAAW,WAAY,aAAc,aAAa,EAC7DC,GAAaD,GAAQ,OACrBE,GAAWjjC,EAAC4F,GAAU,OAAOA,GAAU,SAAW,WAAWA,CAAK,EAAIA,EAA3D,YACXs9B,GAAOljC,EAAC4F,GAAU,OAAOA,GAAU,UAAY+B,EAAG,KAAK/B,CAAK,EAArD,QACb,SAASu9B,GAAU92B,EAAQ+2B,EAAQC,EAAMljB,EAAUmjB,EAAwBC,EAAc,CACrF,IAAI95B,EAAIC,EAAIC,EAAIC,EACZ05B,GACAj3B,EAAO,QAAU4T,EAAI,GAGpBxW,EAAK45B,EAAK,WAAa,MAAQ55B,IAAO,OAASA,EAAK,EAAG+5B,GAAgBrjB,CAAQ,CAAC,EACjF9T,EAAO,YAAc4T,GAAKvW,EAAK05B,EAAO,WAAa,MAAQ15B,IAAO,OAASA,EAAK,EAAG,EAAG+5B,GAAiBtjB,CAAQ,CAAC,GAE3GojB,IACLl3B,EAAO,QAAU4T,GAAKtW,EAAKy5B,EAAO,WAAa,MAAQz5B,IAAO,OAASA,EAAK,GAAIC,EAAKy5B,EAAK,WAAa,MAAQz5B,IAAO,OAASA,EAAK,EAAGuW,CAAQ,GAKnJ,QAAS5V,EAAI,EAAGA,EAAIy4B,GAAYz4B,IAAK,CACjC,MAAMm5B,EAAc,SAASX,GAAQx4B,WACrC,IAAIo5B,EAAeC,GAAUR,EAAQM,CAAW,EAC5CG,EAAaD,GAAUP,EAAMK,CAAW,EAC5C,GAAIC,IAAiB,QAAaE,IAAe,OAC7C,SACJF,IAAiBA,EAAe,GAChCE,IAAeA,EAAa,GACbF,IAAiB,GAC5BE,IAAe,GACfX,GAAKS,CAAY,IAAMT,GAAKW,CAAU,GAEtCx3B,EAAOq3B,GAAe,KAAK,IAAIzjB,EAAIgjB,GAASU,CAAY,EAAGV,GAASY,CAAU,EAAG1jB,CAAQ,EAAG,CAAC,GACzFzY,EAAQ,KAAKm8B,CAAU,GAAKn8B,EAAQ,KAAKi8B,CAAY,KACrDt3B,EAAOq3B,IAAgB,MAI3Br3B,EAAOq3B,GAAeG,CAE7B,EAIGT,EAAO,QAAUC,EAAK,UACtBh3B,EAAO,OAAS4T,EAAImjB,EAAO,QAAU,EAAGC,EAAK,QAAU,EAAGljB,CAAQ,EAE1E,CA1CSngB,EAAAmjC,GAAA,aA2CT,SAASS,GAAU95B,EAAQg6B,EAAY,CACnC,IAAIr6B,EACJ,OAAQA,EAAKK,EAAOg6B,MAAiB,MAAQr6B,IAAO,OAASA,EAAKK,EAAO,YAC7E,CAHS9J,EAAA4jC,GAAA,aA2BT,MAAMJ,GAAkBO,GAAS,EAAG,GAAKpoB,EAAO,EAC1C8nB,GAAmBM,GAAS,GAAK,IAAMhqB,EAAI,EACjD,SAASgqB,GAASl9B,EAAKC,EAAKuU,EAAQ,CAChC,OAAQzb,GAEAA,EAAIiH,EACG,EACPjH,EAAIkH,EACG,EACJuU,EAAO8E,GAAStZ,EAAKC,EAAKlH,CAAC,CAAC,CAE3C,CATSI,EAAA+jC,GAAA,YC7ET,SAASC,GAAalS,EAAMmS,EAAY,CACpCnS,EAAK,IAAMmS,EAAW,IACtBnS,EAAK,IAAMmS,EAAW,GAC1B,CAHSjkC,EAAAgkC,GAAA,gBAST,SAASE,EAAYrO,EAAKsO,EAAW,CACjCH,GAAanO,EAAI,EAAGsO,EAAU,CAAC,EAC/BH,GAAanO,EAAI,EAAGsO,EAAU,CAAC,CACnC,CAHSnkC,EAAAkkC,EAAA,eCPT,SAASE,GAAiB5wB,EAAOiiB,EAAWnuB,EAAO+tB,EAAaK,EAAU,CACtE,OAAAliB,GAASiiB,EACTjiB,EAAQ4hB,GAAW5hB,EAAO,EAAIlM,EAAO+tB,CAAW,EAC5CK,IAAa,SACbliB,EAAQ4hB,GAAW5hB,EAAO,EAAIkiB,EAAUL,CAAW,GAEhD7hB,CACX,CAPSxT,EAAAokC,GAAA,oBAWT,SAASC,GAAgBvS,EAAM2D,EAAY,EAAGnuB,EAAQ,EAAGoG,EAAS,GAAKgoB,EAAUuO,EAAanS,EAAMwS,EAAaxS,EAAM,CAMnH,GALIpqB,EAAQ,KAAK+tB,CAAS,IACtBA,EAAY,WAAWA,CAAS,EAEhCA,EADyBxV,EAAIqkB,EAAW,IAAKA,EAAW,IAAK7O,EAAY,GAAG,EAC7C6O,EAAW,KAE1C,OAAO7O,GAAc,SACrB,OACJ,IAAIJ,EAAcpV,EAAIgkB,EAAW,IAAKA,EAAW,IAAKv2B,CAAM,EACxDokB,IAASmS,IACT5O,GAAeI,GACnB3D,EAAK,IAAMsS,GAAiBtS,EAAK,IAAK2D,EAAWnuB,EAAO+tB,EAAaK,CAAQ,EAC7E5D,EAAK,IAAMsS,GAAiBtS,EAAK,IAAK2D,EAAWnuB,EAAO+tB,EAAaK,CAAQ,CACjF,CAbS11B,EAAAqkC,GAAA,mBAkBT,SAASE,GAAqBzS,EAAM0E,EAAY,CAAC3zB,EAAK4zB,EAAUC,CAAS,EAAGhpB,EAAQ42B,EAAY,CAC5FD,GAAgBvS,EAAM0E,EAAW3zB,GAAM2zB,EAAWC,GAAWD,EAAWE,GAAYF,EAAW,MAAO9oB,EAAQ42B,CAAU,CAC5H,CAFStkC,EAAAukC,GAAA,wBAMT,MAAM3N,GAAQ,CAAC,IAAK,SAAU,SAAS,EACjCC,GAAQ,CAAC,IAAK,SAAU,SAAS,EAKvC,SAAS2N,GAAoB3O,EAAKW,EAAY2N,EAAWM,EAAW,CAChEF,GAAqB1O,EAAI,EAAGW,EAAYI,GAAOuN,GAAc,KAA+B,OAASA,EAAU,EAAGM,GAAc,KAA+B,OAASA,EAAU,CAAC,EACnLF,GAAqB1O,EAAI,EAAGW,EAAYK,GAAOsN,GAAc,KAA+B,OAASA,EAAU,EAAGM,GAAc,KAA+B,OAASA,EAAU,CAAC,CACvL,CAHSzkC,EAAAwkC,GAAA,uBC9CT,SAASE,GAAgBzgB,EAAO,CAC5B,OAAOA,EAAM,YAAc,GAAKA,EAAM,QAAU,CACpD,CAFSjkB,EAAA0kC,GAAA,mBAGT,SAASC,GAAY1gB,EAAO,CACxB,OAAOygB,GAAgBzgB,EAAM,CAAC,GAAKygB,GAAgBzgB,EAAM,CAAC,CAC9D,CAFSjkB,EAAA2kC,GAAA,eAGT,SAASC,GAAU7+B,EAAGC,EAAG,CACrB,OAAQD,EAAE,EAAE,MAAQC,EAAE,EAAE,KACpBD,EAAE,EAAE,MAAQC,EAAE,EAAE,KAChBD,EAAE,EAAE,MAAQC,EAAE,EAAE,KAChBD,EAAE,EAAE,MAAQC,EAAE,EAAE,GACxB,CALShG,EAAA4kC,GAAA,aAMT,SAASC,GAAYhP,EAAK,CACtB,OAAOhE,EAAWgE,EAAI,CAAC,EAAIhE,EAAWgE,EAAI,CAAC,CAC/C,CAFS71B,EAAA6kC,GAAA,eCZT,MAAMC,EAAU,CACZ,aAAc,CACV,KAAK,QAAU,EAClB,CACD,IAAI3O,EAAM,CACNtL,GAAc,KAAK,QAASsL,CAAI,EAChCA,EAAK,eAAc,CACtB,CACD,OAAOA,EAAM,CAKT,GAJAnL,GAAW,KAAK,QAASmL,CAAI,EACzBA,IAAS,KAAK,WACd,KAAK,SAAW,QAEhBA,IAAS,KAAK,KAAM,CACpB,MAAM4O,EAAW,KAAK,QAAQ,KAAK,QAAQ,OAAS,GAChDA,GACA,KAAK,QAAQA,CAAQ,CAE5B,CACJ,CACD,SAAS5O,EAAM,CACX,MAAM6O,EAAc,KAAK,QAAQ,UAAWC,GAAW9O,IAAS8O,CAAM,EACtE,GAAID,IAAgB,EAChB,MAAO,GAIX,IAAID,EACJ,QAAS,EAAIC,EAAa,GAAK,EAAG,IAAK,CACnC,MAAMC,EAAS,KAAK,QAAQ,GAC5B,GAAIA,EAAO,YAAc,GAAO,CAC5BF,EAAWE,EACX,KACH,CACJ,CACD,OAAIF,GACA,KAAK,QAAQA,CAAQ,EACd,IAGA,EAEd,CACD,QAAQ5O,EAAM+O,EAAuB,CACjC,IAAIz7B,EACJ,MAAMs7B,EAAW,KAAK,KACtB,GAAI5O,IAAS4O,IAEb,KAAK,SAAWA,EAChB,KAAK,KAAO5O,EACZA,EAAK,KAAI,EACL4O,GAAU,CACVA,EAAS,UAAYA,EAAS,iBAC9B5O,EAAK,eAAc,EACnBA,EAAK,WAAa4O,EACdG,IACA/O,EAAK,WAAW,gBAAkB,IAElC4O,EAAS,WACT5O,EAAK,SAAW4O,EAAS,SACzB5O,EAAK,SAAS,aACV4O,EAAS,iBAAmBA,EAAS,cAExC,GAAAt7B,EAAK0sB,EAAK,QAAU,MAAQ1sB,IAAO,SAAkBA,EAAG,aACzD0sB,EAAK,cAAgB,IAEzB,KAAM,CAAE,UAAAgP,CAAS,EAAKhP,EAAK,QACvBgP,IAAc,IACdJ,EAAS,KAAI,CAcpB,CACJ,CACD,uBAAwB,CACpB,KAAK,QAAQ,QAAS5O,GAAS,CAC3B,IAAI1sB,EAAIC,EAAIC,EAAIC,EAAIw7B,GACnB17B,GAAMD,EAAK0sB,EAAK,SAAS,kBAAoB,MAAQzsB,IAAO,QAAkBA,EAAG,KAAKD,CAAE,GACxF27B,GAAMz7B,EAAKwsB,EAAK,gBAAkB,MAAQxsB,IAAO,OAAS,QAAUC,EAAKD,EAAG,SAAS,kBAAoB,MAAQy7B,IAAO,QAAkBA,EAAG,KAAKx7B,CAAE,CACjK,CAAS,CACJ,CACD,gBAAiB,CACb,KAAK,QAAQ,QAASusB,GAAS,CAC3BA,EAAK,UAAYA,EAAK,eAAe,EAAK,CACtD,CAAS,CACJ,CAKD,oBAAqB,CACb,KAAK,MAAQ,KAAK,KAAK,WACvB,KAAK,KAAK,SAAW,OAE5B,CACL,CAzGMn2B,EAAA8kC,GAAA,aCFN,SAASO,GAAyBphB,EAAO8R,EAAWuP,EAAiB,CACjE,IAAIp/B,EAAY,GAOhB,MAAMq/B,EAAathB,EAAM,EAAE,UAAY8R,EAAU,EAC3CyP,EAAavhB,EAAM,EAAE,UAAY8R,EAAU,EAWjD,IAVIwP,GAAcC,KACdt/B,EAAY,eAAeq/B,QAAiBC,aAM5CzP,EAAU,IAAM,GAAKA,EAAU,IAAM,KACrC7vB,GAAa,SAAS,EAAI6vB,EAAU,MAAM,EAAIA,EAAU,OAExDuP,EAAiB,CACjB,KAAM,CAAE,OAAAG,EAAQ,QAAAC,EAAS,QAAAC,CAAO,EAAKL,EACjCG,IACAv/B,GAAa,UAAUu/B,UACvBC,IACAx/B,GAAa,WAAWw/B,UACxBC,IACAz/B,GAAa,WAAWy/B,SAC/B,CAKD,MAAMC,EAAgB3hB,EAAM,EAAE,MAAQ8R,EAAU,EAC1C8P,EAAgB5hB,EAAM,EAAE,MAAQ8R,EAAU,EAChD,OAAI6P,IAAkB,GAAKC,IAAkB,KACzC3/B,GAAa,SAAS0/B,MAAkBC,MAErC3/B,GAAa,MACxB,CAvCSlG,EAAAqlC,GAAA,4BCAT,MAAMS,GAAiB9lC,EAAA,CAAC+F,EAAGC,IAAMD,EAAE,MAAQC,EAAE,MAAtB,kBCGvB,MAAM+/B,EAAS,CACX,aAAc,CACV,KAAK,SAAW,GAChB,KAAK,QAAU,EAClB,CACD,IAAIrwB,EAAO,CACPmV,GAAc,KAAK,SAAUnV,CAAK,EAClC,KAAK,QAAU,EAClB,CACD,OAAOA,EAAO,CACVsV,GAAW,KAAK,SAAUtV,CAAK,EAC/B,KAAK,QAAU,EAClB,CACD,QAAQP,EAAU,CACd,KAAK,SAAW,KAAK,SAAS,KAAK2wB,EAAc,EACjD,KAAK,QAAU,GACf,KAAK,SAAS,QAAQ3wB,CAAQ,CACjC,CACL,CAlBMnV,EAAA+lC,GAAA,YCmBN,MAAMC,GAAgB,CAAC,GAAI,IAAK,IAAK,GAAG,EAKlCC,GAAkB,IACxB,IAAIhjC,GAAK,EACT,SAASijC,GAAqB,CAAE,qBAAAC,EAAsB,cAAAC,EAAe,cAAAC,EAAe,kBAAAC,EAAmB,eAAAC,GAAmB,CACtH,OAAOvmC,EAAA,KAAqB,CACxB,YAAYwmC,EAAWl7B,EAAe,CAAE,EAAE1K,EAASwlC,GAAkB,KAAmC,OAASA,EAAa,EAAI,CAI9H,KAAK,GAAKnjC,KAIV,KAAK,YAAc,EAOnB,KAAK,SAAW,IAAI,IAKpB,KAAK,QAAU,GAMf,KAAK,gBAAkB,GACvB,KAAK,mBAAqB,GAO1B,KAAK,cAAgB,GACrB,KAAK,iBAAmB,GAKxB,KAAK,kBAAoB,GAIzB,KAAK,sBAAwB,GAC7B,KAAK,sBAAwB,GAK7B,KAAK,WAAa,GAIlB,KAAK,MAAQ,GAKb,KAAK,WAAa,GAIlB,KAAK,qBAAuB,GAS5B,KAAK,UAAY,CAAE,EAAG,EAAG,EAAG,GAI5B,KAAK,cAAgB,IAAI,IAEzB,KAAK,eAAiB,IAAI,IAC1B,KAAK,kBAAoB,IAAM,CACvB,KAAK,aACL,KAAK,WAAa,GAClB,KAAK,kBAAiB,EAE1C,EAMY,KAAK,iBAAmB,IAAM,CAC1B,KAAK,MAAM,QAAQwjC,EAAmB,EACtC,KAAK,MAAM,QAAQC,EAAkB,EACrC,KAAK,MAAM,QAAQC,EAAc,CACjD,EACY,KAAK,aAAe,GACpB,KAAK,UAAY,GACjB,KAAK,kBAAoB,EAKzB,KAAK,YAAc,IAAI,IACvB,KAAK,UAAYH,EACjB,KAAK,aAAel7B,EACpB,KAAK,KAAO1K,EAASA,EAAO,MAAQA,EAAS,KAC7C,KAAK,KAAOA,EAAS,CAAC,GAAGA,EAAO,KAAMA,CAAM,EAAI,GAChD,KAAK,OAASA,EACd,KAAK,MAAQA,EAASA,EAAO,MAAQ,EAAI,EACzC4lC,GAAa,KAAK,KAAK,sBAAsBA,EAAW,IAAI,EAC5D,QAASj8B,EAAI,EAAGA,EAAI,KAAK,KAAK,OAAQA,IAClC,KAAK,KAAKA,GAAG,qBAAuB,GAEpC,KAAK,OAAS,OACd,KAAK,MAAQ,IAAIw7B,GACxB,CACD,iBAAiBjkC,EAAM0Q,EAAS,CAC5B,OAAK,KAAK,cAAc,IAAI1Q,CAAI,GAC5B,KAAK,cAAc,IAAIA,EAAM,IAAImpB,EAAqB,EAEnD,KAAK,cAAc,IAAInpB,CAAI,EAAE,IAAI0Q,CAAO,CAClD,CACD,gBAAgB1Q,KAASs9B,EAAM,CAC3B,MAAMwH,EAAsB,KAAK,cAAc,IAAI9kC,CAAI,EACvD8kC,GAAwB,MAAkDA,EAAoB,OAAO,GAAGxH,CAAI,CAC/G,CACD,aAAat9B,EAAM,CACf,OAAO,KAAK,cAAc,IAAIA,CAAI,CACrC,CACD,sBAAsB0kC,EAAWrQ,EAAM,CACnC,KAAK,eAAe,IAAIqQ,EAAWrQ,CAAI,CAC1C,CAID,MAAM30B,EAAUqlC,EAAgB,GAAO,CACnC,IAAIp9B,EACJ,GAAI,KAAK,SACL,OACJ,KAAK,MACDjI,aAAoB,YAAcA,EAAS,UAAY,MAC3D,KAAK,SAAWA,EAChB,KAAM,CAAE,SAAAuC,EAAU,OAAA2B,EAAQ,cAAAxE,CAAa,EAAK,KAAK,QAUjD,GATIA,GAAiB,CAACA,EAAc,SAChCA,EAAc,MAAMM,CAAQ,EAEhC,KAAK,KAAK,MAAM,IAAI,IAAI,GACvBiI,EAAK,KAAK,UAAY,MAAQA,IAAO,QAAkBA,EAAG,SAAS,IAAI,IAAI,EAC5E,KAAK,WAAa,KAAK,KAAK,eAAe,OAAO,KAAK,SAAS,EAC5Do9B,IAAkBnhC,GAAU3B,KAC5B,KAAK,cAAgB,IAErBoiC,EAAsB,CACtB,IAAIzb,EACJ,MAAMoc,EAAsB9mC,EAAA,IAAO,KAAK,KAAK,sBAAwB,GAAzC,uBAC5BmmC,EAAqB3kC,EAAU,IAAM,CACjC,KAAK,KAAK,sBAAwB,GAClCkpB,GAAeA,EAAW,EAC1BA,EAAc9K,GAAMknB,EAAqB,GAAG,EACxC9jC,GAAsB,yBACtBA,GAAsB,uBAAyB,GAC/C,KAAK,MAAM,QAAQ+jC,EAAe,EAE1D,CAAiB,CACJ,CACGhjC,GACA,KAAK,KAAK,mBAAmBA,EAAU,IAAI,EAG3C,KAAK,QAAQ,UAAY,IACzB7C,IACC6C,GAAY2B,IACb,KAAK,iBAAiB,YAAa,CAAC,CAAE,MAAAue,EAAO,iBAAAsV,EAAkB,yBAAAyN,EAA0B,OAAQC,KAAiB,CAC9G,IAAIx9B,EAAIC,EAAIC,EAAIC,EAAIw7B,EACpB,GAAI,KAAK,yBAA0B,CAC/B,KAAK,OAAS,OACd,KAAK,eAAiB,OACtB,MACH,CAED,MAAM8B,GAAoBx9B,GAAMD,EAAK,KAAK,QAAQ,cAAgB,MAAQA,IAAO,OAASA,EAAKvI,EAAc,0BAA4B,MAAQwI,IAAO,OAASA,EAAKy9B,GAChK,CAAE,uBAAAC,EAAwB,0BAAAC,CAA4B,EAAGnmC,EAAc,SAAQ,EAK/EomC,EAAgB,CAAC,KAAK,cACxB,CAAC1C,GAAU,KAAK,aAAcqC,CAAS,GACvCD,EAMEO,EAA+B,CAAChO,GAAoByN,EAC1D,KAAMr9B,EAAK,KAAK,cAAgB,MAAQA,IAAO,OAAS,OAASA,EAAG,WAChE49B,GACChO,IACI+N,GAAiB,CAAC,KAAK,kBAAoB,CAC5C,KAAK,aACL,KAAK,aAAe,KAAK,WACzB,KAAK,aAAa,aAAe,QAErC,KAAK,mBAAmBrjB,EAAOsjB,CAA4B,EAC3D,MAAMC,EAAmB,CACrB,GAAG5d,GAAmBsd,EAAkB,QAAQ,EAChD,OAAQE,EACR,WAAYC,CACxC,EAC4BnmC,EAAc,qBACdsmC,EAAiB,MAAQ,EACzBA,EAAiB,KAAO,IAE5B,KAAK,eAAeA,CAAgB,CACvC,KAOO,CAACjO,GACD,KAAK,oBAAsB,GAC3BwN,GAAgB,IAAI,EAExB,KAAK,OAAM,KAAQ3B,GAAMx7B,EAAK,KAAK,SAAS,kBAAoB,MAAQw7B,IAAO,QAAkBA,EAAG,KAAKx7B,CAAE,GAE/G,KAAK,aAAeq9B,CACxC,CAAiB,CAER,CACD,SAAU,CACN,IAAIx9B,EAAIC,EACR,KAAK,QAAQ,UAAY,KAAK,WAAU,EACxC,KAAK,KAAK,MAAM,OAAO,IAAI,GAC1BD,EAAK,KAAK,SAAU,KAAM,MAAQA,IAAO,QAAkBA,EAAG,OAAO,IAAI,GACzEC,EAAK,KAAK,UAAY,MAAQA,IAAO,QAAkBA,EAAG,SAAS,OAAO,IAAI,EAC/E,KAAK,SAAW,OAChB2V,EAAW,UAAU,KAAK,gBAAgB,CAC7C,CAED,aAAc,CACV,KAAK,sBAAwB,EAChC,CACD,eAAgB,CACZ,KAAK,sBAAwB,EAChC,CACD,iBAAkB,CACd,OAAO,KAAK,uBAAyB,KAAK,qBAC7C,CACD,wBAAyB,CACrB,IAAI5V,EACJ,OAAQ,KAAK,sBACPA,EAAK,KAAK,UAAY,MAAQA,IAAO,OAAS,OAASA,EAAG,uBAAsB,IAClF,EACP,CAED,aAAc,CACV,IAAIA,EACA,KAAK,gBAAiB,IAE1B,KAAK,WAAa,IACjBA,EAAK,KAAK,SAAW,MAAQA,IAAO,QAAkBA,EAAG,QAAQg+B,EAAa,EAC/E,KAAK,cACR,CACD,WAAWC,EAAwB,GAAM,CACrC,IAAIj+B,EAAIC,EAAIC,EACZ,GAAI,KAAK,KAAK,kBAAmB,EAC5BD,GAAMD,EAAK,KAAK,SAAS,kBAAoB,MAAQC,IAAO,QAAkBA,EAAG,KAAKD,CAAE,EACzF,MACH,CAED,GADA,CAAC,KAAK,KAAK,YAAc,KAAK,KAAK,cAC/B,KAAK,cACL,OACJ,KAAK,cAAgB,GACrB,QAASc,EAAI,EAAGA,EAAI,KAAK,KAAK,OAAQA,IAAK,CACvC,MAAM4rB,EAAO,KAAK,KAAK5rB,GACvB4rB,EAAK,qBAAuB,GAC5BA,EAAK,aAAa,UAAU,CAC/B,CACD,KAAM,CAAE,SAAApyB,EAAU,OAAA2B,GAAW,KAAK,QAClC,GAAI3B,IAAa,QAAa,CAAC2B,EAC3B,OACJ,MAAMa,GAAqBoD,EAAK,KAAK,QAAQ,iBAAmB,MAAQA,IAAO,OAAS,OAASA,EAAG,SAAQ,EAAG,kBAC/G,KAAK,2BAA6BpD,GAAsB,KAAuC,OAASA,EAAkB,KAAK,aAAc,EAAE,EAC/I,KAAK,eAAc,EACnBmhC,GAAyB,KAAK,gBAAgB,YAAY,CAC7D,CAED,WAAY,CAKR,GAJyB,KAAK,kBAIR,CAClB,KAAK,cAAa,EAClB,KAAK,kBAAiB,EACtB,KAAK,MAAM,QAAQC,EAAiB,EACpC,MACH,CACG,CAAC,KAAK,aAEV,KAAK,WAAa,GAOd,KAAK,eAAe,OACpB,KAAK,eAAe,QAAQC,EAAc,EAC1C,KAAK,eAAe,SAKxB,KAAK,MAAM,QAAQC,EAAmB,EAKtC,KAAK,MAAM,QAAQC,EAAY,EAK/B,KAAK,MAAM,QAAQC,EAAkB,EACrC,KAAK,kBAAiB,EAEtBzoB,GAAU,OAAM,EAChBA,GAAU,UAAS,EACnBA,GAAU,OAAM,EACnB,CACD,mBAAoB,CAChB,KAAK,MAAM,QAAQ0oB,EAAa,EAChC,KAAK,YAAY,QAAQC,EAAmB,CAC/C,CACD,0BAA2B,CACvB/oB,EAAK,UAAU,KAAK,iBAAkB,GAAO,EAAI,CACpD,CACD,2BAA4B,CAMxBA,EAAK,WAAW,IAAM,CACd,KAAK,cACL,KAAK,KAAK,YAGV,KAAK,KAAK,mBAE9B,CAAa,CACJ,CAID,gBAAiB,CACT,KAAK,UAAY,CAAC,KAAK,WAE3B,KAAK,SAAW,KAAK,UACxB,CACD,cAAe,CACX,IAAIzV,EAKJ,GAJI,CAAC,KAAK,WAGV,KAAK,aAAY,EACb,EAAE,KAAK,QAAQ,qBAAuB,KAAK,OAAM,IACjD,CAAC,KAAK,eACN,OASJ,GAAI,KAAK,YAAc,CAAC,KAAK,WAAW,SACpC,QAASc,EAAI,EAAGA,EAAI,KAAK,KAAK,OAAQA,IACrB,KAAK,KAAKA,GAClB,aAAY,EAGzB,MAAM29B,EAAa,KAAK,OACxB,KAAK,OAAS,KAAK,QAAQ,EAAK,EAChC,KAAK,gBAAkB5T,IACvB,KAAK,cAAgB,GACrB,KAAK,gBAAkB,OACvB,KAAK,gBAAgB,UAAW,KAAK,OAAO,SAAS,GACpD7qB,EAAK,KAAK,QAAQ,iBAAmB,MAAQA,IAAO,QAAkBA,EAAG,OAAO,gBAAiB,KAAK,OAAO,UAAWy+B,GAAe,KAAgC,OAASA,EAAW,SAAS,CACxM,CACD,aAAaC,EAAQ,UAAW,CAC5B,IAAIC,EAAmB,QAAQ,KAAK,QAAQ,cAAgB,KAAK,QAAQ,EACrE,KAAK,QACL,KAAK,OAAO,cAAgB,KAAK,KAAK,aACtC,KAAK,OAAO,QAAUD,IACtBC,EAAmB,IAEnBA,IACA,KAAK,OAAS,CACV,YAAa,KAAK,KAAK,YACvB,MAAAD,EACA,OAAQ7B,EAAkB,KAAK,QAAQ,EACvC,OAAQD,EAAc,KAAK,QAAQ,CACvD,EAES,CACD,gBAAiB,CACb,IAAI58B,EACJ,GAAI,CAAC88B,EACD,OACJ,MAAM8B,EAAmB,KAAK,eAAiB,KAAK,qBAC9CC,EAAgB,KAAK,iBAAmB,CAAC3D,GAAY,KAAK,eAAe,EACzEp+B,GAAqBkD,EAAK,KAAK,QAAQ,iBAAmB,MAAQA,IAAO,OAAS,OAASA,EAAG,SAAQ,EAAG,kBACzG8+B,EAAyBhiC,GAAsB,KAAuC,OAASA,EAAkB,KAAK,aAAc,EAAE,EACtIiiC,EAA8BD,IAA2B,KAAK,2BAChEF,IACCC,GACG38B,EAAa,KAAK,YAAY,GAC9B68B,KACJjC,EAAe,KAAK,SAAUgC,CAAsB,EACpD,KAAK,qBAAuB,GAC5B,KAAK,eAAc,EAE1B,CACD,QAAQE,EAAkB,GAAM,CAC5B,MAAMC,EAAU,KAAK,iBACrB,IAAI9V,EAAY,KAAK,oBAAoB8V,CAAO,EAMhD,OAAID,IACA7V,EAAY,KAAK,gBAAgBA,CAAS,GAE9C+V,GAAS/V,CAAS,EACX,CACH,YAAa,KAAK,KAAK,YACvB,YAAa8V,EACb,UAAA9V,EACA,aAAc,CAAE,EAChB,OAAQ,KAAK,EAC7B,CACS,CACD,gBAAiB,CACb,KAAM,CAAE,cAAA1xB,CAAa,EAAK,KAAK,QAC/B,GAAI,CAACA,EACD,OAAOozB,EAAS,EACpB,MAAMuB,EAAM30B,EAAc,qBAEpB,CAAE,OAAAg2B,CAAM,EAAK,KAAK,KACxB,OAAIA,IACAZ,EAAcT,EAAI,EAAGqB,EAAO,OAAO,CAAC,EACpCZ,EAAcT,EAAI,EAAGqB,EAAO,OAAO,CAAC,GAEjCrB,CACV,CACD,oBAAoBA,EAAK,CACrB,MAAM+S,EAAmBtU,IACzB4P,EAAY0E,EAAkB/S,CAAG,EAKjC,QAAStrB,EAAI,EAAGA,EAAI,KAAK,KAAK,OAAQA,IAAK,CACvC,MAAM4rB,EAAO,KAAK,KAAK5rB,GACjB,CAAE,OAAA2sB,EAAQ,QAAA3rB,CAAS,EAAG4qB,EAC5B,GAAIA,IAAS,KAAK,MAAQe,GAAU3rB,EAAQ,aAAc,CAKtD,GAAI2rB,EAAO,OAAQ,CACfgN,EAAY0E,EAAkB/S,CAAG,EACjC,KAAM,CAAE,OAAQgT,GAAe,KAAK,KAKhCA,IACAvS,EAAcsS,EAAiB,EAAG,CAACC,EAAW,OAAO,CAAC,EACtDvS,EAAcsS,EAAiB,EAAG,CAACC,EAAW,OAAO,CAAC,EAE7D,CACDvS,EAAcsS,EAAiB,EAAG1R,EAAO,OAAO,CAAC,EACjDZ,EAAcsS,EAAiB,EAAG1R,EAAO,OAAO,CAAC,CACpD,CACJ,CACD,OAAO0R,CACV,CACD,eAAe/S,EAAKiT,EAAgB,GAAO,CACvC,MAAMC,EAAiBzU,IACvB4P,EAAY6E,EAAgBlT,CAAG,EAC/B,QAAStrB,EAAI,EAAGA,EAAI,KAAK,KAAK,OAAQA,IAAK,CACvC,MAAM4rB,EAAO,KAAK,KAAK5rB,GACnB,CAACu+B,GACD3S,EAAK,QAAQ,cACbA,EAAK,QACLA,IAASA,EAAK,MACdC,GAAa2S,EAAgB,CACzB,EAAG,CAAC5S,EAAK,OAAO,OAAO,EACvB,EAAG,CAACA,EAAK,OAAO,OAAO,CAC/C,CAAqB,EAEAxqB,EAAawqB,EAAK,YAAY,GAEnCC,GAAa2S,EAAgB5S,EAAK,YAAY,CACjD,CACD,OAAIxqB,EAAa,KAAK,YAAY,GAC9ByqB,GAAa2S,EAAgB,KAAK,YAAY,EAE3CA,CACV,CACD,gBAAgBlT,EAAK,CACjB,IAAIpsB,EACJ,MAAMu/B,EAAsB1U,IAC5B4P,EAAY8E,EAAqBnT,CAAG,EACpC,QAAStrB,EAAI,EAAGA,EAAI,KAAK,KAAK,OAAQA,IAAK,CACvC,MAAM4rB,EAAO,KAAK,KAAK5rB,GAGvB,GAFI,CAAC4rB,EAAK,UAEN,CAACxqB,EAAawqB,EAAK,YAAY,EAC/B,SACJpB,GAASoB,EAAK,YAAY,GAAKA,EAAK,eAAc,EAClD,MAAMsO,EAAYnQ,IACZ2U,EAAU9S,EAAK,iBACrB+N,EAAYO,EAAWwE,CAAO,EAC9BzE,GAAoBwE,EAAqB7S,EAAK,cAAe1sB,EAAK0sB,EAAK,YAAc,MAAQ1sB,IAAO,OAAS,OAASA,EAAG,UAAWg7B,CAAS,CAChJ,CACD,OAAI94B,EAAa,KAAK,YAAY,GAC9B64B,GAAoBwE,EAAqB,KAAK,YAAY,EAEvDA,CACV,CAID,eAAe/kB,EAAO,CAClB,KAAK,YAAcA,EACnB,KAAK,kBAAoB,GACzB,KAAK,KAAK,0BACb,CACD,WAAW1Y,EAAS,CAChB,KAAK,QAAU,CACX,GAAG,KAAK,QACR,GAAGA,EACH,UAAWA,EAAQ,YAAc,OAAYA,EAAQ,UAAY,EACjF,CACS,CACD,mBAAoB,CAChB,KAAK,OAAS,OACd,KAAK,OAAS,OACd,KAAK,SAAW,OAChB,KAAK,2BAA6B,OAClC,KAAK,YAAc,OACnB,KAAK,OAAS,OACd,KAAK,cAAgB,EACxB,CAID,oBAAqB,CACjB,IAAI9B,EAMJ,MAAM45B,EAAO,KAAK,UAOlB,GANA,KAAK,oBAAsB,KAAK,kBAAoBA,EAAK,mBACzD,KAAK,mBAAqB,KAAK,iBAAmBA,EAAK,kBAKnD,CAAC,KAAK,mBAAqB,CAAC,KAAK,+BACjC,OACJ,KAAM,CAAE,OAAA39B,EAAQ,SAAA3B,GAAa,KAAK,QAIlC,GAAI,GAAC,KAAK,QAAU,EAAE2B,GAAU3B,IAQhC,IAAI,CAAC,KAAK,aAAe,CAAC,KAAK,eAAgB,CAE3C,MAAMmlC,EAAiB,KAAK,6BACxBA,GAAkBA,EAAe,QACjC,KAAK,eAAiBA,EACtB,KAAK,eAAiB5U,IACtB,KAAK,qBAAuBA,IAC5B/B,GAAqB,KAAK,qBAAsB,KAAK,OAAO,UAAW2W,EAAe,OAAO,SAAS,EACtGhF,EAAY,KAAK,eAAgB,KAAK,oBAAoB,GAG1D,KAAK,eAAiB,KAAK,eAAiB,MAEnD,CAKD,GAAI,GAAC,KAAK,gBAAkB,CAAC,KAAK,eAK7B,KAAK,SACN,KAAK,OAAS5P,IACd,KAAK,qBAAuBA,KAK5B,KAAK,gBACL,KAAK,wBACH7qB,EAAK,KAAK,kBAAoB,MAAQA,IAAO,OAAS,OAASA,EAAG,QACpE4oB,GAAgB,KAAK,OAAQ,KAAK,eAAgB,KAAK,eAAe,MAAM,EAKvE,KAAK,aACN,QAAQ,KAAK,YAAY,EAEzB,KAAK,OAAS,KAAK,eAAe,KAAK,OAAO,SAAS,EAGvD6R,EAAY,KAAK,OAAQ,KAAK,OAAO,SAAS,EAElDtO,GAAc,KAAK,OAAQ,KAAK,WAAW,GAM3CsO,EAAY,KAAK,OAAQ,KAAK,OAAO,SAAS,EAK9C,KAAK,gCAAgC,CACrC,KAAK,+BAAiC,GACtC,MAAMgF,EAAiB,KAAK,6BACxBA,GACA,QAAQA,EAAe,YAAY,IAC/B,QAAQ,KAAK,YAAY,GAC7B,CAACA,EAAe,QAAQ,cACxBA,EAAe,QACf,KAAK,eAAiBA,EACtB,KAAK,eAAiB5U,IACtB,KAAK,qBAAuBA,IAC5B/B,GAAqB,KAAK,qBAAsB,KAAK,OAAQ2W,EAAe,MAAM,EAClFhF,EAAY,KAAK,eAAgB,KAAK,oBAAoB,GAG1D,KAAK,eAAiB,KAAK,eAAiB,MAEnD,EACJ,CACD,4BAA6B,CACzB,GAAI,GAAC,KAAK,QACNnP,GAAS,KAAK,OAAO,YAAY,GACjCG,GAAe,KAAK,OAAO,YAAY,GAE3C,OAAK,KAAK,OAAO,gBAAkB,KAAK,OAAO,cAC3C,KAAK,OAAO,OACL,KAAK,OAGL,KAAK,OAAO,4BAE1B,CACD,gBAAiB,CACb,IAAIzrB,EACJ,KAAM,CAAE,kBAAA0/B,EAAmB,iBAAAC,CAAkB,EAAG,KAChD,KAAK,kBAAoB,KAAK,iBAAmB,GACjD,MAAM/F,EAAO,KAAK,UACZgG,EAAW,QAAQ,KAAK,YAAY,GAAK,OAAShG,EACxD,IAAIiG,EAAU,GAKd,GAJIH,IACAG,EAAU,IACVD,GAAYD,IACZE,EAAU,IACVA,EACA,OACJ,KAAM,CAAE,OAAA5jC,EAAQ,SAAA3B,GAAa,KAAK,QAWlC,GANA,KAAK,gBAAkB,UAAU0F,EAAK,KAAK,UAAY,MAAQA,IAAO,OAAS,OAASA,EAAG,kBACvF,KAAK,kBACL,KAAK,gBAAgB,EACpB,KAAK,kBACN,KAAK,YAAc,KAAK,eAAiB,QAEzC,CAAC,KAAK,QAAU,EAAE/D,GAAU3B,GAC5B,OAKJmgC,EAAY,KAAK,gBAAiB,KAAK,OAAO,SAAS,EAKvDpO,GAAgB,KAAK,gBAAiB,KAAK,UAAW,KAAK,KAAMuT,CAAQ,EACzE,KAAM,CAAE,OAAAh9B,CAAQ,EAAGg3B,EACnB,GAAI,CAACh3B,EACD,OACC,KAAK,kBACN,KAAK,gBAAkB+nB,KACvB,KAAK,6BAA+BA,MAExC,MAAMmV,EAAiB,KAAK,UAAU,EAChCC,EAAiB,KAAK,UAAU,EAChCC,EAA0B,KAAK,oBAUrCvX,GAAa,KAAK,gBAAiB,KAAK,gBAAiB7lB,EAAQ,KAAK,YAAY,EAClF,KAAK,oBAAsBg5B,GAAyB,KAAK,gBAAiB,KAAK,SAAS,GACpF,KAAK,sBAAwBoE,GAC7B,KAAK,UAAU,IAAMF,GACrB,KAAK,UAAU,IAAMC,KACrB,KAAK,aAAe,GACpB,KAAK,eAAc,EACnB,KAAK,gBAAgB,mBAAoBn9B,CAAM,EAEtD,CACD,MAAO,CACH,KAAK,UAAY,EAEpB,CACD,MAAO,CACH,KAAK,UAAY,EAEpB,CACD,eAAeq9B,EAAY,GAAM,CAC7B,IAAIjgC,EAAIC,EAAIC,GACXD,GAAMD,EAAK,KAAK,SAAS,kBAAoB,MAAQC,IAAO,QAAkBA,EAAG,KAAKD,CAAE,EACzFigC,KAAe//B,EAAK,KAAK,SAAU,KAAM,MAAQA,IAAO,QAAkBA,EAAG,eAAgB,GACzF,KAAK,cAAgB,CAAC,KAAK,aAAa,WACxC,KAAK,aAAe,OAE3B,CACD,mBAAmBsa,EAAOsjB,EAA+B,GAAO,CAC5D,IAAI99B,EAAIC,EACR,MAAMigC,EAAW,KAAK,SAChBC,GAAwBD,GAAa,KAA8B,OAASA,EAAS,eAAiB,CAAA,EACtGE,EAAc,CAAE,GAAG,KAAK,YAAY,EACpCC,EAAc1V,KACpB,KAAK,eAAiB,KAAK,qBAAuB,OAClD,KAAK,+BAAiC,CAACmT,EACvC,MAAMwC,EAAiBzV,IACjB0V,GAA2BL,GAAa,KAA8B,OAASA,EAAS,YAAclgC,EAAK,KAAK,UAAY,MAAQA,IAAO,OAAS,OAASA,EAAG,QAChK85B,KAAkB75B,EAAK,KAAK,SAAU,KAAM,MAAQA,IAAO,OAAS,OAASA,EAAG,QAAQ,SAAW,IAAM,EACzG45B,EAAyB,QAAQ0G,GACnC,CAACzG,GACD,KAAK,QAAQ,YAAc,IAC3B,CAAC,KAAK,KAAK,KAAK0G,EAAmB,CAAC,EACxC,KAAK,kBAAoB,EACzB,KAAK,eAAkBl7B,GAAW,CAC9B,IAAItF,EACJ,MAAM0W,EAAWpR,EAAS,IAC1Bm7B,GAAaJ,EAAY,EAAG7lB,EAAM,EAAG9D,CAAQ,EAC7C+pB,GAAaJ,EAAY,EAAG7lB,EAAM,EAAG9D,CAAQ,EAC7C,KAAK,eAAe2pB,CAAW,EAC3B,KAAK,gBACL,KAAK,sBACL,KAAK,UACHrgC,EAAK,KAAK,kBAAoB,MAAQA,IAAO,OAAS,OAASA,EAAG,UACpE8oB,GAAqBwX,EAAgB,KAAK,OAAO,UAAW,KAAK,eAAe,OAAO,SAAS,EAChGI,GAAO,KAAK,eAAgB,KAAK,qBAAsBJ,EAAgB5pB,CAAQ,GAE/E6pB,IACA,KAAK,gBAAkBH,EACvB1G,GAAU0G,EAAaD,EAAsB,KAAK,aAAczpB,EAAUmjB,EAAwBC,CAAY,GAElH,KAAK,KAAK,2BACV,KAAK,eAAc,EACnB,KAAK,kBAAoBpjB,CACzC,EACY,KAAK,eAAe,CAAC,CACxB,CACD,eAAe5U,EAAS,CACpB,IAAI9B,EAAIC,EACR,KAAK,gBAAgB,gBAAgB,GACpCD,EAAK,KAAK,oBAAsB,MAAQA,IAAO,QAAkBA,EAAG,KAAI,EACrE,KAAK,gBACJC,EAAK,KAAK,aAAa,oBAAsB,MAAQA,IAAO,QAAkBA,EAAG,KAAI,GAEtF,KAAK,mBACL2V,EAAW,OAAO,KAAK,gBAAgB,EACvC,KAAK,iBAAmB,QAO5B,KAAK,iBAAmBH,EAAK,OAAO,IAAM,CACtClc,GAAsB,uBAAyB,GAC/C,KAAK,iBAAmBb,GAAQ,EAAG8jC,GAAiB,CAChD,GAAG16B,EACH,SAAWwD,GAAW,CAClB,IAAItF,EACJ,KAAK,eAAesF,CAAM,GACzBtF,EAAK8B,EAAQ,YAAc,MAAQ9B,IAAO,QAAkBA,EAAG,KAAK8B,EAASwD,CAAM,CACvF,EACD,WAAY,IAAM,CACd,IAAItF,GACHA,EAAK8B,EAAQ,cAAgB,MAAQ9B,IAAO,QAAkBA,EAAG,KAAK8B,CAAO,EAC9E,KAAK,kBAAiB,CACzB,CACrB,CAAiB,EACG,KAAK,eACL,KAAK,aAAa,iBAAmB,KAAK,kBAE9C,KAAK,iBAAmB,MACxC,CAAa,CACJ,CACD,mBAAoB,CAChB,IAAI9B,EACA,KAAK,eACL,KAAK,aAAa,iBAAmB,OACrC,KAAK,aAAa,gBAAkB,SAEvCA,EAAK,KAAK,SAAQ,KAAQ,MAAQA,IAAO,QAAkBA,EAAG,sBAAqB,EACpF,KAAK,aACD,KAAK,iBACD,KAAK,gBACD,OACZ,KAAK,gBAAgB,mBAAmB,CAC3C,CACD,iBAAkB,CACd,IAAIA,EACA,KAAK,oBACJA,EAAK,KAAK,kBAAoB,MAAQA,IAAO,QAAkBA,EAAG,KAAK,KAAMw8B,EAAe,EAC7F,KAAK,iBAAiB,QAE1B,KAAK,kBAAiB,CACzB,CACD,yBAA0B,CACtB,MAAM5C,EAAO,KAAK,UAClB,GAAI,CAAE,qBAAA+G,EAAsB,OAAA/9B,EAAQ,OAAA3G,EAAQ,aAAA4F,CAAY,EAAK+3B,EAC7D,GAAI,GAAC+G,GAAwB,CAAC/9B,GAAU,CAAC3G,GAOzC,IAAI,OAAS29B,GACT,KAAK,QACL39B,GACA2kC,GAA0B,KAAK,QAAQ,cAAe,KAAK,OAAO,UAAW3kC,EAAO,SAAS,EAAG,CAChG2G,EAAS,KAAK,QAAUioB,IACxB,MAAMgW,EAAUzY,EAAW,KAAK,OAAO,UAAU,CAAC,EAClDxlB,EAAO,EAAE,IAAMg3B,EAAK,OAAO,EAAE,IAC7Bh3B,EAAO,EAAE,IAAMA,EAAO,EAAE,IAAMi+B,EAC9B,MAAMC,EAAU1Y,EAAW,KAAK,OAAO,UAAU,CAAC,EAClDxlB,EAAO,EAAE,IAAMg3B,EAAK,OAAO,EAAE,IAC7Bh3B,EAAO,EAAE,IAAMA,EAAO,EAAE,IAAMk+B,CACjC,CACDrG,EAAYkG,EAAsB/9B,CAAM,EAMxC+pB,GAAagU,EAAsB9+B,CAAY,EAO/C4mB,GAAa,KAAK,6BAA8B,KAAK,gBAAiBkY,EAAsB9+B,CAAY,EAC3G,CACD,mBAAmBvH,EAAUoyB,EAAM,CAC/B,IAAI1sB,EAAIC,EAAIC,EACP,KAAK,YAAY,IAAI5F,CAAQ,GAC9B,KAAK,YAAY,IAAIA,EAAU,IAAI+gC,EAAW,EAEpC,KAAK,YAAY,IAAI/gC,CAAQ,EACrC,IAAIoyB,CAAI,EACdA,EAAK,QAAQ,CACT,YAAa1sB,EAAK0sB,EAAK,QAAQ,0BAA4B,MAAQ1sB,IAAO,OAAS,OAASA,EAAG,WAC/F,uBAAwBE,GAAMD,EAAKysB,EAAK,QAAQ,0BAA4B,MAAQzsB,IAAO,OAAS,OAASA,EAAG,+BAAiC,MAAQC,IAAO,OAAS,OAASA,EAAG,KAAKD,EAAIysB,CAAI,CAClN,CAAa,CACJ,CACD,QAAS,CACL,MAAMqU,EAAQ,KAAK,WACnB,OAAOA,EAAQA,EAAM,OAAS,KAAO,EACxC,CACD,SAAU,CACN,IAAI/gC,EACJ,KAAM,CAAE,SAAA1F,CAAQ,EAAK,KAAK,QAC1B,OAAOA,IAAa0F,EAAK,KAAK,SAAU,KAAM,MAAQA,IAAO,OAAS,OAASA,EAAG,OAAS,KAAO,IACrG,CACD,aAAc,CACV,IAAIA,EACJ,KAAM,CAAE,SAAA1F,CAAQ,EAAK,KAAK,QAC1B,OAAOA,GAAY0F,EAAK,KAAK,SAAU,KAAM,MAAQA,IAAO,OAAS,OAASA,EAAG,SAAW,MAC/F,CACD,UAAW,CACP,KAAM,CAAE,SAAA1F,CAAQ,EAAK,KAAK,QAC1B,GAAIA,EACA,OAAO,KAAK,KAAK,YAAY,IAAIA,CAAQ,CAChD,CACD,QAAQ,CAAE,WAAA0mC,EAAY,WAAA14B,EAAY,sBAAAmzB,CAAqB,EAAM,CAAA,EAAI,CAC7D,MAAMsF,EAAQ,KAAK,WACfA,GACAA,EAAM,QAAQ,KAAMtF,CAAqB,EACzCuF,IACA,KAAK,gBAAkB,OACvB,KAAK,WAAa,IAElB14B,GACA,KAAK,WAAW,CAAE,WAAAA,CAAU,CAAE,CACrC,CACD,UAAW,CACP,MAAMy4B,EAAQ,KAAK,WACnB,OAAIA,EACOA,EAAM,SAAS,IAAI,EAGnB,EAEd,CACD,eAAgB,CACZ,KAAM,CAAE,cAAAtpC,CAAa,EAAK,KAAK,QAC/B,GAAI,CAACA,EACD,OAEJ,IAAIwpC,EAAY,GAKhB,KAAM,CAAE,aAAAp/B,CAAc,EAAGpK,EAQzB,IAPIoK,EAAa,QACbA,EAAa,SACbA,EAAa,SACbA,EAAa,WACbo/B,EAAY,IAGZ,CAACA,EACD,OACJ,MAAMC,EAAc,CAAA,EAEpB,QAASpgC,EAAI,EAAGA,EAAIy7B,GAAc,OAAQz7B,IAAK,CAC3C,MAAM1H,EAAM,SAAWmjC,GAAcz7B,GAEjCe,EAAazI,KACb8nC,EAAY9nC,GAAOyI,EAAazI,GAChC3B,EAAc,eAAe2B,EAAK,CAAC,EAE1C,CAGD3B,GAAkB,MAA4CA,EAAc,SAE5E,UAAW2B,KAAO8nC,EACdzpC,EAAc,eAAe2B,EAAK8nC,EAAY9nC,EAAI,EAItD3B,EAAc,eAAc,CAC/B,CACD,oBAAoBuL,EAAY,GAAI,CAChC,IAAIhD,EAAIC,EAAIC,EAEZ,MAAMihC,EAAS,CAAA,EACf,GAAI,CAAC,KAAK,UAAY,KAAK,MACvB,OAAOA,EACX,GAAK,KAAK,UAINA,EAAO,WAAa,OAHpB,OAAO,CAAE,WAAY,UAKzB,MAAMrkC,GAAqBkD,EAAK,KAAK,QAAQ,iBAAmB,MAAQA,IAAO,OAAS,OAASA,EAAG,SAAQ,EAAG,kBAC/G,GAAI,KAAK,WACL,YAAK,WAAa,GAClBmhC,EAAO,QAAU,GACjBA,EAAO,cACH95B,GAAmBrE,EAAU,aAAa,GAAK,GACnDm+B,EAAO,UAAYrkC,EACbA,EAAkB,KAAK,aAAc,EAAE,EACvC,OACCqkC,EAEX,MAAMvH,EAAO,KAAK,UAClB,GAAI,CAAC,KAAK,iBAAmB,CAAC,KAAK,QAAU,CAACA,EAAK,OAAQ,CACvD,MAAMwH,EAAc,CAAA,EACpB,OAAI,KAAK,QAAQ,WACbA,EAAY,QACR,KAAK,aAAa,UAAY,OACxB,KAAK,aAAa,QAClB,EACVA,EAAY,cACR/5B,GAAmBrE,EAAU,aAAa,GAAK,IAEnD,KAAK,cAAgB,CAACd,EAAa,KAAK,YAAY,IACpDk/B,EAAY,UAAYtkC,EAClBA,EAAkB,CAAE,EAAE,EAAE,EACxB,OACN,KAAK,aAAe,IAEjBskC,CACV,CACD,MAAMC,EAAiBzH,EAAK,iBAAmBA,EAAK,aACpD,KAAK,wBAAuB,EAC5BuH,EAAO,UAAYvF,GAAyB,KAAK,6BAA8B,KAAK,UAAWyF,CAAc,EACzGvkC,IACAqkC,EAAO,UAAYrkC,EAAkBukC,EAAgBF,EAAO,SAAS,GAEzE,KAAM,CAAE,EAAArwB,EAAG,EAAAma,GAAM,KAAK,gBACtBkW,EAAO,gBAAkB,GAAGrwB,EAAE,OAAS,QAAQma,EAAE,OAAS,SACtD2O,EAAK,gBAKLuH,EAAO,QACHvH,IAAS,MACF15B,GAAMD,EAAKohC,EAAe,WAAa,MAAQphC,IAAO,OAASA,EAAK,KAAK,aAAa,WAAa,MAAQC,IAAO,OAASA,EAAK,EACjI,KAAK,gBACD,KAAK,aAAa,QAClBmhC,EAAe,YAO7BF,EAAO,QACHvH,IAAS,KACHyH,EAAe,UAAY,OACvBA,EAAe,QACf,GACJA,EAAe,cAAgB,OAC3BA,EAAe,YACf,EAKlB,UAAWjoC,KAAOuC,GAAiB,CAC/B,GAAI0lC,EAAejoC,KAAS,OACxB,SACJ,KAAM,CAAE,QAAAkoC,EAAS,QAAAvI,CAAS,EAAGp9B,GAAgBvC,GACvCmoC,EAAYD,EAAQD,EAAejoC,GAAMwgC,CAAI,EACnD,GAAIb,EAAS,CACT,MAAMyI,EAAMzI,EAAQ,OACpB,QAASj4B,EAAI,EAAGA,EAAI0gC,EAAK1gC,IACrBqgC,EAAOpI,EAAQj4B,IAAMygC,CAE5B,MAEGJ,EAAO/nC,GAAOmoC,CAErB,CAMD,OAAI,KAAK,QAAQ,WACbJ,EAAO,cACHvH,IAAS,KACHvyB,GAAmBrE,EAAU,aAAa,GAAK,GAC/C,QAEPm+B,CACV,CACD,eAAgB,CACZ,KAAK,WAAa,KAAK,SAAW,MACrC,CAED,WAAY,CACR,KAAK,KAAK,MAAM,QAASzU,GAAS,CAAE,IAAI1sB,EAAI,OAAQA,EAAK0sB,EAAK,oBAAsB,MAAQ1sB,IAAO,OAAS,OAASA,EAAG,MAAO,CAAE,EACjI,KAAK,KAAK,MAAM,QAAQk+B,EAAiB,EACzC,KAAK,KAAK,YAAY,OACzB,CACT,EAllCW,iBAmlCX,CAplCS3nC,EAAAkmC,GAAA,wBAqlCT,SAAS4B,GAAa3R,EAAM,CACxBA,EAAK,aAAY,CACrB,CAFSn2B,EAAA8nC,GAAA,gBAGT,SAASC,GAAmB5R,EAAM,CAC9B,IAAI1sB,EAAIC,EAAIC,EACZ,MAAMggC,IAAalgC,EAAK0sB,EAAK,cAAgB,MAAQ1sB,IAAO,OAAS,OAASA,EAAG,WAAa0sB,EAAK,SACnG,GAAIA,EAAK,OAAQ,GACbA,EAAK,QACLwT,GACAxT,EAAK,aAAa,WAAW,EAAG,CAChC,KAAM,CAAE,UAAWzwB,EAAQ,YAAawlC,CAAgB,EAAG/U,EAAK,OAC1D,CAAE,cAAAgV,CAAa,EAAKhV,EAAK,QACzBkT,EAAWM,EAAS,SAAWxT,EAAK,OAAO,OAG7CgV,IAAkB,OAClB5W,EAAUzC,GAAS,CACf,MAAMsZ,EAAe/B,EACfM,EAAS,YAAY7X,GACrB6X,EAAS,UAAU7X,GACnBzjB,EAASwjB,EAAWuZ,CAAY,EACtCA,EAAa,IAAM1lC,EAAOosB,GAAM,IAChCsZ,EAAa,IAAMA,EAAa,IAAM/8B,CACtD,CAAa,EAEIg8B,GAA0Bc,EAAexB,EAAS,UAAWjkC,CAAM,GACxE6uB,EAAUzC,GAAS,CACf,MAAMsZ,EAAe/B,EACfM,EAAS,YAAY7X,GACrB6X,EAAS,UAAU7X,GACnBzjB,EAASwjB,EAAWnsB,EAAOosB,EAAK,EACtCsZ,EAAa,IAAMA,EAAa,IAAM/8B,CACtD,CAAa,EAEL,MAAMg9B,EAAcjX,KACpBlC,GAAamZ,EAAa3lC,EAAQikC,EAAS,SAAS,EACpD,MAAM2B,EAAclX,KAChBiV,EACAnX,GAAaoZ,EAAanV,EAAK,eAAe+U,EAAgB,EAAI,EAAGvB,EAAS,WAAW,EAGzFzX,GAAaoZ,EAAa5lC,EAAQikC,EAAS,SAAS,EAExD,MAAMpQ,EAAmB,CAACoL,GAAY0G,CAAW,EACjD,IAAIrE,EAA2B,GAC/B,GAAI,CAAC7Q,EAAK,WAAY,CAClB,MAAM+S,EAAiB/S,EAAK,6BAK5B,GAAI+S,GAAkB,CAACA,EAAe,WAAY,CAC9C,KAAM,CAAE,SAAUqC,EAAgB,OAAQC,CAAY,EAAKtC,EAC3D,GAAIqC,GAAkBC,EAAc,CAChC,MAAMC,EAAmBnX,IACzB/B,GAAqBkZ,EAAkB9B,EAAS,UAAW4B,EAAe,SAAS,EACnF,MAAMxB,EAAiBzV,IACvB/B,GAAqBwX,EAAgBrkC,EAAQ8lC,EAAa,SAAS,EAC9D5G,GAAU6G,EAAkB1B,CAAc,IAC3C/C,EAA2B,GAElC,CACJ,CACJ,CACD7Q,EAAK,gBAAgB,YAAa,CAC9B,OAAAzwB,EACA,SAAAikC,EACA,MAAO2B,EACP,YAAAD,EACA,iBAAA9R,EACA,yBAAAyN,CACZ,CAAS,CACJ,MACQ7Q,EAAK,YACTxsB,GAAMD,EAAKysB,EAAK,SAAS,kBAAoB,MAAQxsB,IAAO,QAAkBA,EAAG,KAAKD,CAAE,GAO7FysB,EAAK,QAAQ,WAAa,MAC9B,CA/ESn2B,EAAA+nC,GAAA,sBAgFT,SAAStB,GAAoBtQ,EAAM,CAK/BA,EAAK,oBAAsBA,EAAK,kBAAoB,QAAQA,EAAK,QAAUA,EAAK,OAAO,iBAAiB,GAIxGA,EAAK,mBAAqBA,EAAK,iBAAmB,QAAQA,EAAK,QAAUA,EAAK,OAAO,gBAAgB,EACzG,CAVSn2B,EAAAymC,GAAA,uBAWT,SAASuB,GAAc7R,EAAM,CACzBA,EAAK,cAAa,CACtB,CAFSn2B,EAAAgoC,GAAA,iBAGT,SAASL,GAAkBxR,EAAM,CAC7BA,EAAK,kBAAiB,CAC1B,CAFSn2B,EAAA2nC,GAAA,qBAGT,SAASE,GAAoB1R,EAAM,CAC/B,KAAM,CAAE,cAAAj1B,CAAa,EAAKi1B,EAAK,QAC3Bj1B,GAAkB,MAA4CA,EAAc,SAAU,EAAC,uBACvFA,EAAc,OAAO,qBAAqB,EAE9Ci1B,EAAK,eAAc,CACvB,CANSn2B,EAAA6nC,GAAA,uBAOT,SAASd,GAAgB5Q,EAAM,CAC3BA,EAAK,gBAAe,EACpBA,EAAK,YAAcA,EAAK,eAAiBA,EAAK,OAAS,MAC3D,CAHSn2B,EAAA+mC,GAAA,mBAIT,SAASL,GAAmBvQ,EAAM,CAC9BA,EAAK,mBAAkB,CAC3B,CAFSn2B,EAAA0mC,GAAA,sBAGT,SAASC,GAAexQ,EAAM,CAC1BA,EAAK,eAAc,CACvB,CAFSn2B,EAAA2mC,GAAA,kBAGT,SAASc,GAActR,EAAM,CACzBA,EAAK,cAAa,CACtB,CAFSn2B,EAAAynC,GAAA,iBAGT,SAASQ,GAAoBuC,EAAO,CAChCA,EAAM,mBAAkB,CAC5B,CAFSxqC,EAAAioC,GAAA,uBAGT,SAASiC,GAAa5/B,EAAQ2Z,EAAOrkB,EAAG,CACpC0K,EAAO,UAAY2V,EAAIgE,EAAM,UAAW,EAAGrkB,CAAC,EAC5C0K,EAAO,MAAQ2V,EAAIgE,EAAM,MAAO,EAAGrkB,CAAC,EACpC0K,EAAO,OAAS2Z,EAAM,OACtB3Z,EAAO,YAAc2Z,EAAM,WAC/B,CALSjkB,EAAAkqC,GAAA,gBAMT,SAASwB,GAAQphC,EAAQ4V,EAAMlD,EAAIpd,EAAG,CAClC0K,EAAO,IAAM2V,EAAIC,EAAK,IAAKlD,EAAG,IAAKpd,CAAC,EACpC0K,EAAO,IAAM2V,EAAIC,EAAK,IAAKlD,EAAG,IAAKpd,CAAC,CACxC,CAHSI,EAAA0rC,GAAA,WAIT,SAASvB,GAAO7/B,EAAQ4V,EAAMlD,EAAIpd,EAAG,CACjC8rC,GAAQphC,EAAO,EAAG4V,EAAK,EAAGlD,EAAG,EAAGpd,CAAC,EACjC8rC,GAAQphC,EAAO,EAAG4V,EAAK,EAAGlD,EAAG,EAAGpd,CAAC,CACrC,CAHSI,EAAAmqC,GAAA,UAIT,SAASF,GAAoB9T,EAAM,CAC/B,OAAQA,EAAK,iBAAmBA,EAAK,gBAAgB,cAAgB,MACzE,CAFSn2B,EAAAiqC,GAAA,uBAGT,MAAM9C,GAA0B,CAC5B,SAAU,IACV,KAAM,CAAC,GAAK,EAAG,GAAK,CAAC,CACzB,EACA,SAASS,GAAezR,EAAMqQ,EAAW,CAKrC,IAAImF,EAAaxV,EAAK,KACtB,QAAS5rB,EAAI4rB,EAAK,KAAK,OAAS,EAAG5rB,GAAK,EAAGA,IACvC,GAAI,QAAQ4rB,EAAK,KAAK5rB,GAAG,QAAQ,EAAG,CAChCohC,EAAaxV,EAAK,KAAK5rB,GACvB,KACH,CAGL,MAAMsF,GADgB87B,GAAcA,IAAexV,EAAK,KAAOwV,EAAW,SAAW,UACvD,cAAc,wBAAwBnF,KAAa,EAC7E32B,GACAsmB,EAAK,MAAMtmB,EAAS,EAAI,CAChC,CAhBS7P,EAAA4nC,GAAA,kBAiBT,SAASgE,GAAU9Z,EAAM,CACrBA,EAAK,IAAM,KAAK,MAAMA,EAAK,GAAG,EAC9BA,EAAK,IAAM,KAAK,MAAMA,EAAK,GAAG,CAClC,CAHS9xB,EAAA4rC,GAAA,aAIT,SAASjD,GAAS9S,EAAK,CACnB+V,GAAU/V,EAAI,CAAC,EACf+V,GAAU/V,EAAI,CAAC,CACnB,CAHS71B,EAAA2oC,GAAA,YAIT,SAAS0B,GAA0Bc,EAAexB,EAAUjkC,EAAQ,CAChE,OAAQylC,IAAkB,YACrBA,IAAkB,mBACf,CAACpZ,GAAO8S,GAAY8E,CAAQ,EAAG9E,GAAYn/B,CAAM,EAAG,EAAG,CACnE,CAJS1F,EAAAqqC,GAAA,6BCxxCT,MAAMwB,GAAyB3F,GAAqB,CAChD,qBAAsB,CAAC9kC,EAAK0qC,IAAWx5B,GAAYlR,EAAK,SAAU0qC,CAAM,EACxE,cAAe,KAAO,CAClB,EAAG,SAAS,gBAAgB,YAAc,SAAS,KAAK,WACxD,EAAG,SAAS,gBAAgB,WAAa,SAAS,KAAK,SAC/D,GACI,kBAAmB,IAAM,EAC7B,CAAC,ECPK9U,GAAqB,CACvB,QAAS,MACb,EACM+U,GAAqB7F,GAAqB,CAC5C,cAAgB1kC,IAAc,CAC1B,EAAGA,EAAS,WACZ,EAAGA,EAAS,SACpB,GACI,cAAe,IAAM,CACjB,GAAI,CAACw1B,GAAmB,QAAS,CAC7B,MAAMgV,EAAe,IAAIH,GAAuB,EAAG,CAAE,CAAA,EACrDG,EAAa,MAAM,MAAM,EACzBA,EAAa,WAAW,CAAE,aAAc,EAAM,CAAA,EAC9ChV,GAAmB,QAAUgV,CAChC,CACD,OAAOhV,GAAmB,OAC7B,EACD,eAAgB,CAACx1B,EAAUoE,IAAU,CACjCpE,EAAS,MAAM,UAAYoE,IAAU,OAAYA,EAAQ,MAC5D,EACD,kBAAoBpE,GAAa,QAAQ,OAAO,iBAAiBA,CAAQ,EAAE,WAAa,OAAO,CACnG,CAAC,ECdKyqC,GAAgB,CAClB,GAAGnf,GACH,GAAG9T,GACH,GAAGpE,GACH,GAAGkuB,EACP,EAOMoJ,GAAuBtnC,GAAkB,CAACpE,EAAW6Q,IAAWe,GAAsB5R,EAAW6Q,EAAQ46B,GAAepM,GAAwBkM,EAAkB,CAAC,ECrBzK,SAASI,GAAUC,EAAI,CACrB,OAAOA,GAAM,MAAQ,OAAOA,GAAM,UAAY,aAAcA,GAAMA,EAAG,WAAa,KAAK,YACzF,CAFSpsC,EAAAmsC,GAAA,aAGT,SAASE,GAAcD,EAAI,OACzB,GAAI,CAACD,GAAUC,CAAE,EACf,MAAO,GACT,MAAME,GAAM7iC,EAAA2iC,EAAG,cAAc,cAAjB,KAAA3iC,EAAgC,OAC5C,OAAO2iC,aAAcE,EAAI,WAC3B,CALStsC,EAAAqsC,GAAA,iBAMT,SAASE,GAAepW,EAAM,OAC5B,IAAI1sB,EACJ,OAASA,KAAK+iC,GAAiBrW,CAAI,IAAM,KAAO,OAAS1sB,EAAG,cAAnD,KAAAA,EAAmE,MAC9E,CAHSzJ,EAAAusC,GAAA,kBAIT,SAASC,GAAiBrW,EAAM,CAC9B,OAAOgW,GAAUhW,CAAI,EAAIA,EAAK,cAAgB,QAChD,CAFSn2B,EAAAwsC,GAAA,oBAST,SAASC,GAAiBtW,EAAM,CAC9B,OAAOqW,GAAiBrW,CAAI,EAAE,aAChC,CAFSn2B,EAAAysC,GAAA,oBAWT,IAAIC,GAAc1sC,EAAC6P,GAAYA,EAAQ,aAAa,UAAU,EAA5C,eACd88B,GAAsB3sC,EAAC6P,GAAY68B,GAAY78B,CAAO,GAAKA,EAAQ,WAAa,GAA1D,uBAC1B,SAAS+8B,GAAW/8B,EAAS,CAC3B,OAAO,QAAQA,EAAQ,aAAa,UAAU,CAAC,IAAM,IAAQ,QAAQA,EAAQ,aAAa,eAAe,CAAC,IAAM,EAClH,CAFS7P,EAAA4sC,GAAA,cAeT,SAASC,GAASh9B,EAAS,CACzB,OAAIA,EAAQ,eAAiBg9B,GAASh9B,EAAQ,aAAa,EAClD,GACFA,EAAQ,MACjB,CAJS7P,EAAA6sC,GAAA,YAKT,SAASC,GAAkBj9B,EAAS,CAClC,MAAMjK,EAAQiK,EAAQ,aAAa,iBAAiB,EACpD,OAAOjK,IAAU,SAAWA,GAAS,IACvC,CAHS5F,EAAA8sC,GAAA,qBAIT,SAASC,GAAYl9B,EAAS,CAC5B,GAAI,CAACw8B,GAAcx8B,CAAO,GAAKg9B,GAASh9B,CAAO,GAAK+8B,GAAW/8B,CAAO,EACpE,MAAO,GAET,KAAM,CAAE,UAAAm9B,CAAW,EAAGn9B,EAEtB,GADsB,CAAC,QAAS,SAAU,WAAY,QAAQ,EAC5C,QAAQm9B,CAAS,GAAK,EACtC,MAAO,GACT,MAAMC,EAAS,CACb,EAAG,IAAMp9B,EAAQ,aAAa,MAAM,EACpC,MAAO,IAAMA,EAAQ,aAAa,UAAU,EAC5C,MAAO,IAAMA,EAAQ,aAAa,UAAU,CAChD,EACE,OAAIm9B,KAAaC,EACRA,EAAOD,KAEZF,GAAkBj9B,CAAO,EACpB,GACF68B,GAAY78B,CAAO,CAC5B,CAnBS7P,EAAA+sC,GAAA,eAoBT,SAASG,GAAWr9B,EAAS,CAC3B,OAAKA,EAEEw8B,GAAcx8B,CAAO,GAAKk9B,GAAYl9B,CAAO,GAAK,CAAC88B,GAAoB98B,CAAO,EAD5E,EAEX,CAJS7P,EAAAktC,GAAA,cAOT,IAAIC,GAAkB,CACpB,uCACA,wCACA,0CACA,QACA,SACA,SACA,UACA,aACA,wCACA,aACA,kBACA,kBACA,mCACA,oBACF,EACIC,GAAsBD,GAAgB,OACtCE,GAAYrtC,EAACosC,GAAOA,EAAG,YAAc,GAAKA,EAAG,aAAe,EAAhD,aAChB,SAASkB,GAAgBC,EAAW,CAClC,MAAMC,EAAe,MAAM,KAAKD,EAAU,iBAAiBH,EAAmB,CAAC,EAC/E,OAAAI,EAAa,QAAQD,CAAS,EACvBC,EAAa,OAAQpB,GAAOW,GAAYX,CAAE,GAAKiB,GAAUjB,CAAE,CAAC,CACrE,CAJSpsC,EAAAstC,GAAA"}