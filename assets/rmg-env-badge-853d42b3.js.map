{"version":3,"file":"rmg-env-badge-853d42b3.js","sources":["../../node_modules/@chakra-ui/popover/dist/chunk-DHS7LAGW.mjs","../../node_modules/@chakra-ui/popover/dist/chunk-OFUG2FGD.mjs","../../node_modules/@chakra-ui/popover/dist/chunk-GG3JAC57.mjs","../../node_modules/@chakra-ui/popover/dist/chunk-JKY3EM6P.mjs","../../src/rmg-env-badge/rmg-env-badge.tsx"],"sourcesContent":["'use client'\nimport {\n  usePopoverContext,\n  usePopoverStyles\n} from \"./chunk-Z3POGKNI.mjs\";\n\n// src/popover-header.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PopoverHeader = forwardRef(\n  function PopoverHeader2(props, ref) {\n    const { getHeaderProps } = usePopoverContext();\n    const styles = usePopoverStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.header,\n      {\n        ...getHeaderProps(props, ref),\n        className: cx(\"chakra-popover__header\", props.className),\n        __css: styles.header\n      }\n    );\n  }\n);\nPopoverHeader.displayName = \"PopoverHeader\";\n\nexport {\n  PopoverHeader\n};\n//# sourceMappingURL=chunk-DHS7LAGW.mjs.map","'use client'\nimport {\n  usePopoverContext\n} from \"./chunk-Z3POGKNI.mjs\";\n\n// src/popover-trigger.tsx\nimport { Children, cloneElement } from \"react\";\nfunction PopoverTrigger(props) {\n  const child = Children.only(props.children);\n  const { getTriggerProps } = usePopoverContext();\n  return cloneElement(child, getTriggerProps(child.props, child.ref));\n}\nPopoverTrigger.displayName = \"PopoverTrigger\";\n\nexport {\n  PopoverTrigger\n};\n//# sourceMappingURL=chunk-OFUG2FGD.mjs.map","'use client'\nimport {\n  usePopoverContext,\n  usePopoverStyles\n} from \"./chunk-Z3POGKNI.mjs\";\n\n// src/popover-arrow.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar resolveVar = (scale, value) => value ? `${scale}.${value}, ${value}` : void 0;\nfunction PopoverArrow(props) {\n  var _a;\n  const { bg, bgColor, backgroundColor, shadow, boxShadow, shadowColor } = props;\n  const { getArrowProps, getArrowInnerProps } = usePopoverContext();\n  const styles = usePopoverStyles();\n  const arrowBg = (_a = bg != null ? bg : bgColor) != null ? _a : backgroundColor;\n  const arrowShadow = shadow != null ? shadow : boxShadow;\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ...getArrowProps(),\n      className: \"chakra-popover__arrow-positioner\",\n      children: /* @__PURE__ */ jsx(\n        chakra.div,\n        {\n          className: cx(\"chakra-popover__arrow\", props.className),\n          ...getArrowInnerProps(props),\n          __css: {\n            \"--popper-arrow-shadow-color\": resolveVar(\"colors\", shadowColor),\n            \"--popper-arrow-bg\": resolveVar(\"colors\", arrowBg),\n            \"--popper-arrow-shadow\": resolveVar(\"shadows\", arrowShadow),\n            ...styles.arrow\n          }\n        }\n      )\n    }\n  );\n}\nPopoverArrow.displayName = \"PopoverArrow\";\n\nexport {\n  PopoverArrow\n};\n//# sourceMappingURL=chunk-GG3JAC57.mjs.map","'use client'\nimport {\n  usePopoverContext,\n  usePopoverStyles\n} from \"./chunk-Z3POGKNI.mjs\";\n\n// src/popover-close-button.tsx\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PopoverCloseButton = forwardRef(\n  function PopoverCloseButton2(props, ref) {\n    const { onClose } = usePopoverContext();\n    const styles = usePopoverStyles();\n    return /* @__PURE__ */ jsx(\n      CloseButton,\n      {\n        size: \"sm\",\n        onClick: onClose,\n        className: cx(\"chakra-popover__close-btn\", props.className),\n        __css: styles.closeButton,\n        ref,\n        ...props\n      }\n    );\n  }\n);\nPopoverCloseButton.displayName = \"PopoverCloseButton\";\n\nexport {\n  PopoverCloseButton\n};\n//# sourceMappingURL=chunk-JKY3EM6P.mjs.map","import {\n    Badge,\n    Popover,\n    PopoverArrow,\n    PopoverBody,\n    PopoverCloseButton,\n    PopoverContent,\n    PopoverHeader,\n    PopoverTrigger,\n} from '@chakra-ui/react';\nimport React, { ReactNode, useState } from 'react';\nimport { RmgEnv } from '@railmapgen/rmg-runtime';\n\nconst getBadgeColour = (env: RmgEnv) => {\n    switch (env) {\n        case RmgEnv.DEV:\n            return 'red';\n        case RmgEnv.UAT:\n            return 'orange';\n        case RmgEnv.PRD:\n            return 'green';\n    }\n};\n\nexport interface RmgEnvBadgeProps {\n    environment: RmgEnv;\n    version: string;\n    popoverHeader?: ReactNode;\n    popoverBody?: ReactNode;\n}\n\nexport function RmgEnvBadge(props: RmgEnvBadgeProps) {\n    const { environment, version, popoverHeader, popoverBody } = props;\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (\n        <Popover isOpen={isOpen} onOpen={() => popoverHeader && setIsOpen(true)} onClose={() => setIsOpen(false)}>\n            <PopoverTrigger>\n                <Badge\n                    ml={1}\n                    colorScheme={getBadgeColour(environment)}\n                    title={`${environment}: ${version}`}\n                    cursor={popoverHeader ? 'pointer' : 'help'}\n                >\n                    {environment === RmgEnv.PRD ? version : environment}\n                </Badge>\n            </PopoverTrigger>\n            <PopoverContent>\n                <PopoverArrow />\n                <PopoverCloseButton />\n                <PopoverHeader>{popoverHeader}</PopoverHeader>\n                <PopoverBody>{popoverBody}</PopoverBody>\n            </PopoverContent>\n        </Popover>\n    );\n}\n"],"names":["PopoverHeader","forwardRef","props","ref","getHeaderProps","usePopoverContext","styles","usePopoverStyles","jsx","chakra","cx","PopoverTrigger","child","Children","getTriggerProps","cloneElement","resolveVar","scale","value","PopoverArrow","_a","bg","bgColor","backgroundColor","shadow","boxShadow","shadowColor","getArrowProps","getArrowInnerProps","arrowBg","arrowShadow","PopoverCloseButton","onClose","CloseButton","getBadgeColour","env","RmgEnv","RmgEnvBadge","environment","version","popoverHeader","popoverBody","isOpen","setIsOpen","useState","jsxs","Popover","Badge","PopoverContent","PopoverBody"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}