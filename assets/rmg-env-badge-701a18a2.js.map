{"version":3,"file":"rmg-env-badge-701a18a2.js","sources":["../../node_modules/@chakra-ui/popover/dist/chunk-BYOOQOH2.mjs","../../node_modules/@chakra-ui/popover/dist/chunk-3O5UWOX6.mjs","../../node_modules/@chakra-ui/popover/dist/chunk-RACJ2OQY.mjs","../../node_modules/@chakra-ui/popover/dist/chunk-THJVJMZP.mjs","../../src/rmg-env-badge/rmg-env-badge.tsx"],"sourcesContent":["import {\n  usePopoverContext,\n  usePopoverStyles\n} from \"./chunk-FOAN3JQV.mjs\";\n\n// src/popover-header.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PopoverHeader = forwardRef(\n  function PopoverHeader2(props, ref) {\n    const { getHeaderProps } = usePopoverContext();\n    const styles = usePopoverStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.header,\n      {\n        ...getHeaderProps(props, ref),\n        className: cx(\"chakra-popover__header\", props.className),\n        __css: styles.header\n      }\n    );\n  }\n);\nPopoverHeader.displayName = \"PopoverHeader\";\n\nexport {\n  PopoverHeader\n};\n","import {\n  usePopoverContext\n} from \"./chunk-FOAN3JQV.mjs\";\n\n// src/popover-trigger.tsx\nimport { Children, cloneElement } from \"react\";\nfunction PopoverTrigger(props) {\n  const child = Children.only(props.children);\n  const { getTriggerProps } = usePopoverContext();\n  return cloneElement(child, getTriggerProps(child.props, child.ref));\n}\nPopoverTrigger.displayName = \"PopoverTrigger\";\n\nexport {\n  PopoverTrigger\n};\n","import {\n  usePopoverContext,\n  usePopoverStyles\n} from \"./chunk-FOAN3JQV.mjs\";\n\n// src/popover-arrow.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction PopoverArrow(props) {\n  var _a;\n  const { bg, bgColor, backgroundColor, shadow, boxShadow } = props;\n  const { getArrowProps, getArrowInnerProps } = usePopoverContext();\n  const styles = usePopoverStyles();\n  const arrowBg = (_a = bg != null ? bg : bgColor) != null ? _a : backgroundColor;\n  const arrowShadow = shadow != null ? shadow : boxShadow;\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ...getArrowProps(),\n      className: \"chakra-popover__arrow-positioner\",\n      children: /* @__PURE__ */ jsx(\n        chakra.div,\n        {\n          className: cx(\"chakra-popover__arrow\", props.className),\n          ...getArrowInnerProps(props),\n          __css: {\n            \"--popper-arrow-bg\": arrowBg ? `colors.${arrowBg}, ${arrowBg}` : void 0,\n            \"--popper-arrow-shadow\": arrowShadow ? `shadows.${arrowShadow}, ${arrowShadow}` : void 0,\n            ...styles.arrow\n          }\n        }\n      )\n    }\n  );\n}\nPopoverArrow.displayName = \"PopoverArrow\";\n\nexport {\n  PopoverArrow\n};\n","import {\n  usePopoverContext,\n  usePopoverStyles\n} from \"./chunk-FOAN3JQV.mjs\";\n\n// src/popover-close-button.tsx\nimport { CloseButton } from \"@chakra-ui/close-button\";\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PopoverCloseButton = forwardRef(\n  function PopoverCloseButton2(props, ref) {\n    const { onClose } = usePopoverContext();\n    const styles = usePopoverStyles();\n    return /* @__PURE__ */ jsx(\n      CloseButton,\n      {\n        size: \"sm\",\n        onClick: onClose,\n        className: cx(\"chakra-popover__close-btn\", props.className),\n        __css: styles.closeButton,\n        ref,\n        ...props\n      }\n    );\n  }\n);\nPopoverCloseButton.displayName = \"PopoverCloseButton\";\n\nexport {\n  PopoverCloseButton\n};\n","import {\n    Badge,\n    Popover,\n    PopoverArrow,\n    PopoverBody,\n    PopoverCloseButton,\n    PopoverContent,\n    PopoverHeader,\n    PopoverTrigger,\n} from '@chakra-ui/react';\nimport React, { ReactNode, useState } from 'react';\nimport { RmgEnv } from '@railmapgen/rmg-runtime';\n\nconst getBadgeColour = (env: RmgEnv) => {\n    switch (env) {\n        case RmgEnv.DEV:\n            return 'red';\n        case RmgEnv.UAT:\n            return 'orange';\n        case RmgEnv.PRD:\n            return 'green';\n    }\n};\n\nexport interface RmgEnvBadgeProps {\n    environment: RmgEnv;\n    version: string;\n    popoverHeader?: ReactNode;\n    popoverBody?: ReactNode;\n}\n\nexport function RmgEnvBadge(props: RmgEnvBadgeProps) {\n    const { environment, version, popoverHeader, popoverBody } = props;\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (\n        <Popover isOpen={isOpen} onOpen={() => popoverHeader && setIsOpen(true)} onClose={() => setIsOpen(false)}>\n            <PopoverTrigger>\n                <Badge\n                    ml={1}\n                    colorScheme={getBadgeColour(environment)}\n                    title={`${environment}: ${version}`}\n                    cursor={popoverHeader ? 'pointer' : 'help'}\n                >\n                    {environment === RmgEnv.PRD ? version : environment}\n                </Badge>\n            </PopoverTrigger>\n            <PopoverContent>\n                <PopoverArrow />\n                <PopoverCloseButton />\n                <PopoverHeader>{popoverHeader}</PopoverHeader>\n                <PopoverBody>{popoverBody}</PopoverBody>\n            </PopoverContent>\n        </Popover>\n    );\n}\n"],"names":["PopoverHeader","forwardRef","__name","props","ref","getHeaderProps","usePopoverContext","styles","usePopoverStyles","jsx","chakra","cx","PopoverTrigger","child","Children","getTriggerProps","cloneElement","PopoverArrow","_a","bg","bgColor","backgroundColor","shadow","boxShadow","getArrowProps","getArrowInnerProps","arrowBg","arrowShadow","PopoverCloseButton","onClose","CloseButton","getBadgeColour","env","RmgEnv","RmgEnvBadge","environment","version","popoverHeader","popoverBody","isOpen","setIsOpen","useState","_jsxs","Popover","_jsx","Badge","PopoverContent"],"mappings":"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"}