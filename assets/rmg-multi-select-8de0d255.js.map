{"version":3,"file":"rmg-multi-select-8de0d255.js","sources":["../../node_modules/@chakra-ui/checkbox/dist/chunk-6XFPBTDN.mjs","../../node_modules/@chakra-ui/checkbox/dist/chunk-DFEUIRKX.mjs","../../node_modules/@chakra-ui/checkbox/dist/chunk-LS5YNJYH.mjs","../../src/rmg-multi-select/rmg-multi-select.tsx"],"sourcesContent":["// src/checkbox-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\nexport {\n  CheckboxGroupProvider,\n  useCheckboxGroupContext\n};\n","// src/checkbox-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction CheckIcon(props) {\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 12 10\",\n      style: {\n        fill: \"none\",\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeDasharray: 16\n      },\n      ...props,\n      children: /* @__PURE__ */ jsx(\"polyline\", { points: \"1.5 6 4.5 9 10.5 1\" })\n    }\n  );\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 24 24\",\n      style: { stroke: \"currentColor\", strokeWidth: 4 },\n      ...props,\n      children: /* @__PURE__ */ jsx(\"line\", { x1: \"21\", x2: \"3\", y1: \"12\", y2: \"12\" })\n    }\n  );\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return isChecked || isIndeterminate ? /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      children: /* @__PURE__ */ jsx(BaseIcon, { ...rest })\n    }\n  ) : null;\n}\n\nexport {\n  CheckboxIcon\n};\n","import {\n  useCheckboxGroupContext\n} from \"./chunk-6XFPBTDN.mjs\";\nimport {\n  CheckboxIcon\n} from \"./chunk-DFEUIRKX.mjs\";\nimport {\n  useCheckbox\n} from \"./chunk-3NTD6TBK.mjs\";\n\n// src/checkbox.tsx\nimport {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { callAll, cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nvar rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nvar checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nvar indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nvar Checkbox = forwardRef(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = { ...group, ...props };\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */ jsx(CheckboxIcon, {}),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const iconStyles = useMemo(\n    () => ({\n      animation: state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n      fontSize: iconSize,\n      color: iconColor,\n      ...styles.icon\n    }),\n    [iconColor, iconSize, , state.isIndeterminate, styles.icon]\n  );\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      __css: { ...rootStyles, ...styles.container },\n      className: cx(\"chakra-checkbox\", className),\n      ...getRootProps(),\n      children: [\n        /* @__PURE__ */ jsx(\n          \"input\",\n          {\n            className: \"chakra-checkbox__input\",\n            ...getInputProps(inputProps, ref)\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            __css: { ...controlStyles, ...styles.control },\n            className: \"chakra-checkbox__control\",\n            ...getCheckboxProps(),\n            children: clonedIcon\n          }\n        ),\n        children && /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            className: \"chakra-checkbox__label\",\n            ...getLabelProps(),\n            __css: {\n              marginStart: spacing,\n              ...styles.label\n            },\n            children\n          }\n        )\n      ]\n    }\n  );\n});\nCheckbox.displayName = \"Checkbox\";\n\nexport {\n  Checkbox\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport {\n    Badge,\n    Box,\n    Checkbox,\n    List,\n    ListItem,\n    Popover,\n    PopoverAnchor,\n    PopoverBody,\n    PopoverContent,\n    useOutsideClick,\n    useStyleConfig,\n} from '@chakra-ui/react';\n\ntype Selection = {\n    label: string;\n    value: string;\n    disabled?: boolean;\n};\n\nexport interface RmgMultiSelectProps {\n    displayValue: string;\n    selections: Selection[];\n    defaultValue: string[];\n    onChange?: (value: string[]) => void;\n}\n\nexport const RmgMultiSelect = (props: RmgMultiSelectProps) => {\n    const { displayValue, selections, defaultValue, onChange } = props;\n\n    const styles = useStyleConfig('RmgMultiSelect');\n\n    const [value, setValue] = useState(defaultValue);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n    const dropdownRef = useRef<HTMLDivElement>(null);\n\n    useOutsideClick({ ref: wrapperRef, handler: () => setIsDropdownOpen(false) });\n\n    useEffect(() => {\n        defaultValue.toString() && setValue(defaultValue);\n    }, [defaultValue.toString()]);\n\n    const selectedCount = value.filter(val => selections.some(selection => selection.value === val)).length;\n\n    const handleCheck = (selection: Selection, checked: boolean) => {\n        if (checked) {\n            if (!value.includes(selection.value)) {\n                const nextValue = [...value, selection.value];\n                setValue(nextValue);\n                onChange?.(nextValue);\n            }\n        } else {\n            const nextValue = value.filter(val => val !== selection.value);\n            setValue(nextValue);\n            onChange?.(nextValue);\n        }\n    };\n\n    return (\n        <Box ref={wrapperRef} sx={styles}>\n            <Popover placement=\"bottom-start\" isOpen={isDropdownOpen} autoFocus={false}>\n                <PopoverAnchor>\n                    <div\n                        className=\"rmg-multi-select__wrapper\"\n                        role=\"combobox\"\n                        aria-expanded={isDropdownOpen}\n                        aria-controls={dropdownRef.current?.id}\n                        aria-label={displayValue}\n                        onClick={() => setIsDropdownOpen(prevState => !prevState)}\n                    >\n                        <div className={`rmg-multi-select__field ${isDropdownOpen ? 'active' : ''}`}>\n                            <span>{displayValue}</span>\n                            <Badge colorScheme={selectedCount ? 'blue' : undefined} role=\"status\">\n                                {selectedCount}/{selections.length}\n                            </Badge>\n                        </div>\n                        <div className=\"rmg-multi-select__icon-wrapper\">\n                            <svg viewBox=\"0 0 24 24\">\n                                <path fill=\"currentColor\" d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n                            </svg>\n                        </div>\n                    </div>\n                </PopoverAnchor>\n\n                <PopoverContent ref={dropdownRef}>\n                    <PopoverBody>\n                        <List>\n                            {selections.map(selection => (\n                                <ListItem key={selection.value.toString()}>\n                                    <Checkbox\n                                        isChecked={value.includes(selection.value)}\n                                        isDisabled={selection.disabled}\n                                        onChange={({ target: { checked } }) => handleCheck(selection, checked)}\n                                    >\n                                        {selection.label}\n                                    </Checkbox>\n                                </ListItem>\n                            ))}\n                        </List>\n                    </PopoverBody>\n                </PopoverContent>\n            </Popover>\n        </Box>\n    );\n};\n"],"names":["CheckboxGroupProvider","useCheckboxGroupContext","createContext","CheckIcon","props","jsx","chakra","__name","IndeterminateIcon","CheckboxIcon","isIndeterminate","isChecked","rest","BaseIcon","controlStyles","rootStyles","checkAnim","keyframes","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","forwardRef","ref","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","spacing","className","children","iconColor","iconSize","icon","isCheckedProp","isDisabled","onChangeProp","inputProps","onChange","callAll","state","getInputProps","getCheckboxProps","getLabelProps","getRootProps","useCheckbox","iconStyles","useMemo","clonedIcon","cloneElement","jsxs","cx","RmgMultiSelect","displayValue","selections","defaultValue","useStyleConfig","value","setValue","useState","isDropdownOpen","setIsDropdownOpen","wrapperRef","useRef","dropdownRef","useOutsideClick","useEffect","selectedCount","val","selection","handleCheck","checked","nextValue","_jsx","Box","PopoverAnchor","_jsxs","id","undefined","PopoverContent","List","ListItem","disabled","label"],"mappings":"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"}