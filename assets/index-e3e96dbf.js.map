{"version":3,"file":"index-e3e96dbf.js","sources":["../../node_modules/@chakra-ui/textarea/dist/chunk-4IH3O7BJ.mjs","../../src/rmg-debounced-textarea/rmg-debounced-textarea.tsx"],"sourcesContent":["'use client'\n\n// src/textarea.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/textarea.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\nvar Textarea = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props);\n  const { className, rows, ...rest } = omitThemingProps(props);\n  const textareaProps = useFormControl(rest);\n  const textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /* @__PURE__ */ jsx(\n    chakra.textarea,\n    {\n      ref,\n      rows,\n      ...textareaProps,\n      className: cx(\"chakra-textarea\", className),\n      __css: textareaStyles\n    }\n  );\n});\nTextarea.displayName = \"Textarea\";\n\nexport {\n  Textarea\n};\n//# sourceMappingURL=chunk-4IH3O7BJ.mjs.map","import React, { ChangeEvent, forwardRef, Ref, useEffect, useRef } from 'react';\nimport { Textarea, TextareaProps, useMergeRefs } from '@chakra-ui/react';\n\nexport interface RmgDebouncedTextareaProps extends TextareaProps {\n    onDebouncedChange?: (value: string) => void;\n}\n\nconst RmgDebouncedTextareaInner = (props: RmgDebouncedTextareaProps, ref: Ref<HTMLTextAreaElement>) => {\n    const { onDebouncedChange, defaultValue, onChange, ...others } = props;\n\n    const inputElRef = useRef<HTMLTextAreaElement>(null);\n    const refs = useMergeRefs(inputElRef, ref);\n\n    const timeoutRef = useRef<number>();\n\n    useEffect(() => {\n        if (inputElRef.current) {\n            inputElRef.current.value = defaultValue?.toString() || '';\n        }\n    }, [defaultValue]);\n\n    const handleChange = ({ target: { value } }: ChangeEvent<HTMLTextAreaElement>) => {\n        window.clearTimeout(timeoutRef.current);\n\n        timeoutRef.current = window.setTimeout(() => {\n            onDebouncedChange?.(value);\n        }, 500);\n    };\n\n    return <Textarea ref={refs} variant=\"flushed\" size=\"sm\" resize=\"none\" onChange={handleChange} {...others} />;\n};\n\nexport const RmgDebouncedTextarea = forwardRef(RmgDebouncedTextareaInner);\n"],"names":["omit","object","keysToOmit","clone","key","omitted","Textarea","forwardRef","props","ref","styles","useStyleConfig","className","rows","rest","omitThemingProps","textareaProps","useFormControl","textareaStyles","jsx","chakra","cx","RmgDebouncedTextareaInner","onDebouncedChange","defaultValue","onChange","others","inputElRef","useRef","refs","useMergeRefs","timeoutRef","useEffect","handleChange","value","RmgDebouncedTextarea"],"mappings":"4SAaA,SAASA,EAAKC,EAAQC,EAAa,GAAI,CACrC,MAAMC,EAAQ,OAAO,OAAO,CAAE,EAAEF,CAAM,EACtC,UAAWG,KAAOF,EACZE,KAAOD,GACT,OAAOA,EAAMC,CAAG,EAGpB,OAAOD,CACT,CAIA,IAAIE,EAAU,CAAC,IAAK,OAAQ,SAAU,WAAW,EAC7CC,EAAWC,EAAW,CAACC,EAAOC,IAAQ,CACxC,MAAMC,EAASC,EAAe,WAAYH,CAAK,EACzC,CAAE,UAAAI,EAAW,KAAAC,EAAM,GAAGC,CAAI,EAAKC,EAAiBP,CAAK,EACrDQ,EAAgBC,EAAeH,CAAI,EACnCI,EAAiBL,EAAOb,EAAKU,EAAQL,CAAO,EAAIK,EACtD,OAAuBS,EAAG,IACxBC,EAAO,SACP,CACE,IAAAX,EACA,KAAAI,EACA,GAAGG,EACH,UAAWK,EAAG,kBAAmBT,CAAS,EAC1C,MAAOM,CACR,CACL,CACA,CAAC,EACDZ,EAAS,YAAc,WCnCvB,MAAAgB,EAAA,CAAAd,EAAAC,IAAA,CACI,KAAA,CAAA,kBAAAc,EAAA,aAAAC,EAAA,SAAAC,EAAA,GAAAC,CAAA,EAAAlB,EAEAmB,EAAAC,SAAA,IAAA,EACAC,EAAAC,EAAAH,EAAAlB,CAAA,EAEAsB,EAAAH,EAAAA,SAEAI,EAAAA,UAAA,IAAA,CACIL,EAAA,UACIA,EAAA,QAAA,OAAAH,GAAA,YAAAA,EAAA,aAAA,GACJ,EAAA,CAAAA,CAAA,CAAA,EAGJ,MAAAS,EAAA,CAAA,CAAA,OAAA,CAAA,MAAAC,CAAA,CAAA,IAAA,CACI,OAAA,aAAAH,EAAA,OAAA,EAEAA,EAAA,QAAA,OAAA,WAAA,IAAA,CACIR,GAAA,MAAAA,EAAAW,EAAyB,EAAA,GAAA,CACvB,EAGV,OAAAf,EAAAA,IAAAb,EAAA,CAAA,IAAAuB,EAAA,QAAA,UAAA,KAAA,KAAA,OAAA,OAAA,SAAAI,EAAA,GAAAP,CAAA,CAAA,CACJ,EAEOS,EAAA5B,EAAA,WAAAe,CAAA","x_google_ignoreList":[0]}